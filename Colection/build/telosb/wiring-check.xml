<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb9ff32f560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb9ff2581f0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb9ff2581f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb9ff09b590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9ff3158d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff07c020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff325770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fee13640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fee13640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SensorAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fb9ff30ab70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fb9fe727310"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fb9fe727310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fb9fd1478d0"/></to>
    </wire>
    <wire loc="20:SensorAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7fb9ff309420"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb9fe720750"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fb9fe720750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb9fd05bbd0"/></to>
    </wire>
    <wire loc="21:SensorAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7fb9ff308d00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fb9fe724240"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fb9fe724240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fb9fd145790"/></to>
    </wire>
    <wire loc="24:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7fb9ff312500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fb9fe318920"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7fb9fe318920"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fb9fe2e2020"/></to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7fb9ff30fd60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fb9fe315b80"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7fb9fe315b80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fb9fe2e1270"/></to>
    </wire>
    <wire loc="31:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9ff2aa5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fd78ec30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fd78ec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fcc2f8b0"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9ff29b4e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd78d8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd78d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fcc2e590"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9ff2905a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fd78e020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9fd78e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fcc31b60"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fb9ff28c6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2d2c00"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2d2c00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2a12f0"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9ff288df0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd788910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fd788910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fe2cc020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd8eddd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd976b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd999750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd9b5080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fdb06620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fdbf6c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe12f7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcd9a020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fdfc0020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe1d63c0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe3e5150"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd026060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe66ac60"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd0ae1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe99f3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd18b020"/></to>
    </wire>
    <wire loc="45:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fec56020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fee02400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff09bc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff7d53a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff7d53a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff380140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fb9ff08c6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff2575a0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9ff2575a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff2539b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff08cdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb9ff2500f0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fb9ff232020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb9ff232020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff22f020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fb9ff2507d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff252c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fb9ff24f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff054c40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9ff22f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff21acb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb9ff2286c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb9ff2183d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb9ff4584c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb9ff217680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fb9ff1d45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff1116d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fb9ff1c1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff109b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fb9ff1ca700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff116160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fb9ff1aea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0f0cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb9ff1d2aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff117480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fb9ff1b5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff0f0020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fb9ff1aba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0d8cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fb9ff1bc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff0e9220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb9ff1d5b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff1669d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fb9ff1b0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0ff2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fb9ff1b73e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff100610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fb9ff1c05a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff101220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fb9ff1c9700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff10f7a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fb9ff1ada20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0e72f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fb9ff1bfbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff0f96d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fb9ff1d0890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff110ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb9ff1e5060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff175c80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fb9ff1b5da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff0e8610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb9ff1db0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff118020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fb9ff1bba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff0e26d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fb9ff1c46d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff11ea90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fb9ff1afa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0f77a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb9ff1cccf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff120de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fb9ff1b61f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff0f8ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fb9ff1aca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff0e07a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fb9ff1bd0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff0f2b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fb9ff1b3b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff0e1ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fb9ff1b1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9ff107cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fb9ff1b2a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff0d8020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fb9ff1b8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb9ff107020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fb9ff1b9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb9ff0dab30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb9ff173c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff1735b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb9ff1722f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb9ff0d3a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb9ff172940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb9ff0d0260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff11d930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff175c80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff11b020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff1735b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff115020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff175c80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff1147a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff1735b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff10d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff175c80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff10cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff1735b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb9ff16cc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb9ff16a2f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb9ff0d09f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb9ff16a940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb9ff0cf240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff106b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff1042f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0fd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0fc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0f6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0f5c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0efb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0ec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0e6160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0e57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0df610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0ddc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9ff0d7b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb9ff0d52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff37e040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fb9ff37a490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fb9ff76c3b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9ff054c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9ff07f8d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb9ff0747b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fb9ff057360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb9ff057360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee3c440"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb9ff07a980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fb9ff0566a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb9ff0566a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee27020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb9ff073ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fb9ff0559c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb9ff0559c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee23b90"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee2b610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fb9feffc200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fb9feffc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feed9740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee262f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fb9feffa200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fb9feffa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feed4100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee22de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fb9feff8200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fb9feff8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feecfd10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb9ff03d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef72100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb9ff029020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef43d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fb9fefe0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef34d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fb9fefbb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea8100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fb9fefdd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef2f740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fb9ff025020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef38100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fb9ff011200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef09e00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb9fefec200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeb3d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fb9fefd7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef26d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fb9fefc7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feec5100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fb9fefb3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea4d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb9ff037020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef63100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fb9fefd5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef21740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb9ff033020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef5a740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fb9ff01f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef2a100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fb9ff00a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feefbd10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fb9feff6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeca740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb9fefe6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea4d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb9ff042020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef7cd10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb9ff02d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef4c860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fb9ff019020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef1b100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fb9fefe2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef34d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fb9fefc1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeb7100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fb9fefb5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea4d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fb9fefcd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeded10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fb9ff015020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef12a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fb9ff000200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feee2100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb9feff0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feebc740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fb9fefbf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeb3d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fb9fefd3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeecd10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb9ff03b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef6ed10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb9ff027020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef3d740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb9feff4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feec5100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fb9ff023020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef34d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fb9ff00e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef04740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb9fefea200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feead740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fb9fefcf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feee2100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb9ff04f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef856d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb9ff031020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef55100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fb9ff01d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef26d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fb9ff008200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feef5740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fb9fefcb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef1b100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fb9fefc5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feec1d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fb9fefb9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea4d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fb9ff004200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeecd10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fb9fefc9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef17d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb9ff040020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef77740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb9ff02b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef47270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fb9ff017020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef17d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fb9fefd1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feee7740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fb9fefbd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feead740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fb9ff013200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef0d460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fb9feffe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeded10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb9fefee200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeb7100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb9ff039020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef69740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb9feff2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feec1d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb9ff035020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef5fd10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fb9ff021020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef2f740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fb9ff00c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeff100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb9fefe8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea8100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb9ff044020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef80100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb9ff02f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef51d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fb9ff01b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef21740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fb9ff006200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feef0100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fb9fefd9560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef2a100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fb9fefc3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feebc740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fb9fefdb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef2a100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fb9ff002200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feee7740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fb9fefb7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feea8100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fb9fefb1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9feeca740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fb9fefe41f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb9fef38100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee001d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee001d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fec8b690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fee02400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fed06760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fb9fedf8a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb9fec7ccf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fed06760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd2ad380"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fb9fec85c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fecdacf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fecd31d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fed05020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fed05020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fd2a6020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fec71020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fed83020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fed83020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fed470f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fd2ad380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd291a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fd2a0780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fd2adbd0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fd2adbd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fd290340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fd2a33d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fed83020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fd28d4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fd2977b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fd2977b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fd28ca90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fd296da0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fd296da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fd28bda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fd2940c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fd2940c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fb9ff1c1020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fb9ff1b8570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fb9ff1bfbe0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fb9ff1b61f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fb9ff1bd0c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fb9ff1b5020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fb9ff1bc5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fb9ff1b5da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fb9ff1bba50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fb9ff1b3b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fb9ff1b9020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fb9ff1b2a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb9fed44540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb9fed7a020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb9fed7a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fed750a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fed662c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fb9fecd0490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fb9fec80e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5ec50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5a810"/></to>
    </wire>
    <wire loc="48:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7fb9fec60dc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5c870"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5c870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fe9b0080"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb9fec55c40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb9fec47e10"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb9fec47e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb9fe9b5440"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb9fe9a2080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb9fec526e0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb9fe9b5440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb9febd6d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb9fec3fe10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb9fe9b6440"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb9fe9b6440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb9febdb670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9fe9b4020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9fe9b08e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe9af020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe9b7020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe9b7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9febe1c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe9b7c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd1f9c70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd1f9c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fea7fd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9febd31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9fe9b4020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd1f3d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9febd78e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb9febd5e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd1f9020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fd1f9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fea80a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9febce710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fd1f35d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fd1f35d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9fea85cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9febd78e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9feb49a20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb9febd6d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb9feb47570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb9febdb670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb9feb483e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9febe1c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9feb4ab10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9feb45020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9febd31d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb9feb46230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb9febd5e50"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9feb40290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9febce710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb9feb45690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9feb30900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9feb30900"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb9feb29020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9feb40c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fea9d110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fea9d110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb9fed7a020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9feb3ddd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9feb2d3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9feb25dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9feb300d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9feb2c710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb9feb246d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fb9fefd1580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb9feb22670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fb9fefcf580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb9feb20670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fb9fefcd580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb9feb1d670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fb9fefc9580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb9feb1b670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fb9fefcb580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fd1f8be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9feb30900"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd1f8440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fea7e590"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fea7e590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9eb400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fea7c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd1f3d70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fea7fd50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe9ec020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe9ec020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd1876c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb9fea85cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9fea790d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fea80a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe9ed210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe9ed210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd188850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9eb400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd186a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb9fea680a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9feb2d3b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe9ebcd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fea7c370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fea66020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9eb400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9d09d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9ec7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9ec7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd187e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9fe9e6b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9feb300d0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd185400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe9ebcd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb9fd185bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd18b630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd183de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9fd152470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9fe9e6b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fd152bd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fe9d0400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd151270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9d09d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd151e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9cf720"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb9fe99fa00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb9fe9a2080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb9fe723900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb9fd145020"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb9fe725aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb9fd147160"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fb9fd144e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe949020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fb9fd1427b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe9482c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fb9fd143af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe949020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fb9fd141c50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe9482c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe9482c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe8ccc90"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe949020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe8b91d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe8b91d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe77ab60"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb9fe8ca2f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fb9fe8b8020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb9fe8b8020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b4330"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fb9fe8c9480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fb9fe8b7370"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fb9fe8b7370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b0d60"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fb9fe8c8610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fb9fe8b6730"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fb9fe8b6730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe78aa30"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe8c7240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fe7391e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe7391e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fe8c2450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fb9fe8bf2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fb9fe8c0ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe77ab60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd0ac970"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8b3490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb9ff03b020"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8ad020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb9ff039020"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8a9de0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb9ff037020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7fb9fe89c510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8aab60"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb9fe89b830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b4330"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fb9fe89ab40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b0d60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe8a1080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fe88d5a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe88d5a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe789610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb9fe87b710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb9fe87b710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb9fe867710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe772280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe8a23e0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe746020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe778e80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe778e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd0aac30"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe7472f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe778270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe778270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd0aa020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fb9fe898700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb9fe87c710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb9fe868710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb9fe8718a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fb9fe85e8a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb9fe879710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb9fe865710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb9fe877710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fb9fe863710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb9fe882710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fb9fe86a710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb9fe874710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb9fe860710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb9fe8708a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb9fe85d8a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb9fe87e660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb9fe86c6b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb9fe876710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fb9fe862710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb9fe87d710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb9fe869710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb9fe8738a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fb9fe85f8a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb9fe87a710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb9fe866710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb9fe878710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fb9fe864710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb9fe883710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fb9fe86b710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb9fe875710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fb9fe861710"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe7799e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd0ab850"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd0a8590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe776770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb9fd0a8d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd0ae7c0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd0a5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fd0740f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe772280"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fd074b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fe772d00"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd073270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe7472f0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd073e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe746020"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fb9fd072680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fb9fd072e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fb9fd05bbd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb9fe6e4390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe31d020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb9fd056840"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb9fd056840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe3f11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb9fe720020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb9fe3288b0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0594a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe325300"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0535c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe325300"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb9fe6d8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0594a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe6d6450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fd04d730"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fd04d730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe66f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fb9fe6dc640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd04eaf0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fd04eaf0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe4d6d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd04b9a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0594a0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fb9fe6abe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb9fd04c720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe66e960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb9fd04b060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb9fe66c920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe4d21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe673cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fb9fd03a300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd04b9a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb9fe4d1740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fb9fd03c060"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe66e960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe6641d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fb9fe66b760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fb9fe662020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb9fe66c920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb9fe6631d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe66f1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe667980"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe673cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe4f2520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe4f2520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd0236c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fb9fe662940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe4f1b20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe4f1b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd022cb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe654650"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe581020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb9fe64d140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7fb9feff4200"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb9fe64b200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7fb9feff2200"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb9fe649200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7fb9feff0200"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb9fe647200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7fb9fefee200"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb9fe645200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7fb9fefec200"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb9fe643200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7fb9fefea200"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb9fe641200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7fb9fefe8200"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb9fe63f200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7fb9fefe6200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb9fe65f4f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fb9ff1e5060"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb9fe653d30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7fb9ff1d5b10"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb9fe650160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fb9ff1db0c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb9fe64f530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7fb9ff1cccf0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb9fe64e3a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7fb9ff1d2aa0"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe4f13a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd022530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd021610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe4ef570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb9fd021dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fb9fd026670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd020900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe4d6d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe46eca0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe46a030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe4d21d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb9fe467020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fb9fe4d1740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb9fe46ad80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb9fe4cc240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb9fe4699c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb9fe4cce00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fb9fe4c9a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fe4354e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe4354e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fb9fe4c3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fe42e020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe42e020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fb9fe4be6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb9fe428b40"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fe428b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe4cb9a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe581020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fb9fe4647f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fcfe4280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0535c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe3ed5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0535c0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe3e9280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fcfe8360"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fcfe8360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe4d6d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fe3ecc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fcfe7020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fcfe7020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe66f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe3f11d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe36ecb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe3dfb10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe3ed5e0"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe33f8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe3e9280"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fb9fe343bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe3e5e70"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe3e01d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fe3ecc90"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fe3dc020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fe377970"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fe377970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfd1020"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fb9fe3b3380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fb9fe3c2aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fb9fe3bb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fe377120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcfd8450"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fcfd8450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcfbcca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fcfcb780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfd8ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfd8ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfbb5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fcfcd3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fed83020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcfb7710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcfc1880"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcfc1880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcfb6da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcfbf020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcfbf020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcfb40c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcfbe440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcfbe440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb9fcfe5020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe66e960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb9fcfe5910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb9fe66c920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe4d21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe673cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fb9fcf71120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fcfe4280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb9fe4d1740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fb9fcf74dc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fb9fe2e88f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7fb9fe30e080"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fb9fe30e080"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe3072e0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe2ea660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe312e80"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe312e80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe30c140"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7fb9fe2e0e20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fb9fe2edb10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7fb9fe2dd130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fb9fe2ecca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe30b2f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb9ff027020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe307de0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb9fe8708a0"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7fb9fe2e7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2a12f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe278020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2cfca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2a0320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2a0320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fd8ae020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fb9fe2ccc00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fb9fe29e1d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fb9fe29e1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fb9fd8addf0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fe2cb2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fe29b020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fe29b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fd8aba80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fe2c8430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda81550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda81550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda73a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe2ac430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe287170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe287170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe266080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fe2cc020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fe29f510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fe29f510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd8ad210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe2c1350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe29a020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe29a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe267020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe29e800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe29e800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd8ac470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fe2b8660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fda7d660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fda7d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fda6faf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe278020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fd8e1b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe2992c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fd8a98b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fb9fe2851d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fb9fd8aace0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe2920f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe268020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe268020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe266080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fd8e1080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe267020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb9fda846e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb9fe27d430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb9fe266b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb9fe266b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb9fd8cc020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fe28d170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fe2679d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fe2679d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fda82a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fb9fd8a00f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe2771d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8a8860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fe273990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fe273990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fd94ac90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd8a6690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fe26b840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fe26b840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fd949a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fd8a24d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fdcacb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fd8a6ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda78d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd8a5b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda74640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fd8a4610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1dcb80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1dcb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1d57e0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fb9fd8a11f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe260330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe260330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe25b7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fd8a0d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fd8e1b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fb9fd8ded90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fda82a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fda73020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb9fd8cc020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb9fd8ca410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fd94ac90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fd93fa20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fd8e1080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fd8d92d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fb9fe274500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd94a5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fd94a5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fb9fd93f370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb9fda846e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb9fda75c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe2771d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd94cbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fd94cbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fd9417b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fb9fe26a6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd94b8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fd94b8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fb9fd9404d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb9fe274bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb9fd947170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb9fd947170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb9fd93d020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fd949a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fd93e840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb9fd8ded90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe262390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe262390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe25fe70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd9466b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd99e220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fd99e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd99ca10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd99d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd8cf350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fd8cf350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8ccd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8ccd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd8e5ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fd8e5ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8df860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8df860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fe262e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fe262e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fe25c990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd946020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd8e2980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fd8e2980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd8de690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd8de690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd97daa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fd97daa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fd979e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd97a950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fe261b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fe261b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fdb0a7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb9fdb0a7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb9fdb04020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe25a640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe1ec720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe1ec720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe1d6a30"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe252b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe1e7a60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe1e7a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe1d25b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb9fe257020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fdc056c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb9fe257020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fdb0d5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb9fdb0d5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fdb06ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb9fdc056c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fdbf4320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb9fe249d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb9fdc02020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb9fdc02020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fdbf4bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fb9fe250ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fdc02cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fdc02cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fdbf3970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe245020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fe23e660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb9fe248020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb9fd9bba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb9fd9bba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb9fd9b4a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fb9fe239e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fd9bdaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fd9bdaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fe2487f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fb9fe2349e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fb9fe235a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fb9fe236a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fb9fe1dbe60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fb9fe1d19b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fb9fe1ce7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe12c220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe12c220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe126af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb9fe1caa40"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb9fe0e6e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb9fe0e6e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0d8b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb9fe1c9ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fb9fe0e26a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb9fe0e26a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0cad70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb9fe1c7020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fb9fe0e0ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb9fe0e0ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0bf710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb9fe1c6400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fb9fe0a9d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb9fe0a9d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe0888a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb9fe1b21d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdd38e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdd38e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fe1b12b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fb9fdd347b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fdd347b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fe1b19c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdd33ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdd33ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fe1b3a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdd36ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdd36ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fe1b3120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdd32160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdd32160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fe1b8be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdd2a870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdd2a870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fe1ba550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdd27880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdd27880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fe1bae00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdd260a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdd260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fe1b9710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdd2ee50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdd2ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fe1b7020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdd2d670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdd2d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fe1c35a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fb9fdd19500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fdd19500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fe1bcc00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdd1ace0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdd1ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fe1b78e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdd2be50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdd2be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fe1b51c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fb9fdd2de50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fdd2de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fe1b5a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdd2ce50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdd2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fb9fe1b0d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdd07a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdd07a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fb9fe1b0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdcd99e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdcd99e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fe1c0af0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fdcacb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fe1cfde0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fdcabd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fdcabd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fdc91310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fb9fe1a5820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fb9fe1a6940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fe12f7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fe126260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fe126260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcf30450"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe126af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf30ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fcf30450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcf283d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf30ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf22020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fcf283d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fcf0dca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fcf1c780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf28c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf28c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf0c5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fcf1e3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fe10f080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fe10f080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fe10acd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcf08710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcf129d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcf129d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcf07da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcf10120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcf10120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcf050c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcf0f440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcf0f440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb9fe1060f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb9fed7a020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb9fe0e4090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0d3710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb9fe0e3390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0ce1d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb9fe12db10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0dc020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb9fe0e19b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0c4b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0db2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb9ff03d020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0d7de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fb9ff011200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0d2930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb9ff040020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0cd480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb9ff04f020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0c7020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fb9ff008200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0c3de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb9ff013200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0be930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fb9ff00a200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb9fe0a9150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb9fe0a1a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb9fe0a8a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe0838b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fe0905d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fb9ff1c05a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fb9fe08f8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fb9ff1b0a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe08e7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb9ff013200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe085480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb9fe87c710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe082480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb9fe87e660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdd34160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdd28880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdd200a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdd270a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdd15500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdd17500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdd33490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb9fdd1d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdd18500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdd23880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb9fdd240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdd37a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe03d920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdd32e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fdd31490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdd1cc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdd31be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdd18ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdd1d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdd2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdd1e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdd20880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdd1e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdd16ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdd17ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb9fdd24880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdd1f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdd19ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdd26880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdd15ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdd36480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb9fdd2e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdd2b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdd210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdd21880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdd280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdd302f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb9fdd2e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdd327b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdd1a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb9fdd16500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdd230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdd1f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fdd34e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdd250a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fdd30940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdd25880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdd1c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdd139b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe039bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe036020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe036db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe03a810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe035ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fb9fe030020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc8770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fdfc8770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb9fe034400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdfa5c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdfa5c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fce18770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb9fe031080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdfa48f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdfa48f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb9fce17be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fe028680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdd5e020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdd5e020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fce16d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fe030df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fb9fe023120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc0b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fce16d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdf8f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb9fce17be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdf90020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fce18770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdf93430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fce17440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fce0ed90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fce0ed90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde3c2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdf90020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdf34a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fce162b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fdf906a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fdf906a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fdf33060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fdf8da40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fce155a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fcdff5d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fdf926b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb9fdf8e690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fce0e140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fce0e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fde3d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9fdf8c2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fce07760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fce07760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9fde404d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fdf926b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fdf34250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdf8f850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdf33c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdf93430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdf35470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fdf303e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fdf8da40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb9fdf315b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb9fdf8e690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9fdf2b480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9fdf8c2a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb9fdf30a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fdf21020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fdf21020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb9fdf1bc70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fdf2bc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fb9fdf292f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb9fdf1c5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fdf13150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fdf1dd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9fdf14780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb9fdee4bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb9fefe2580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb9fdee2b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fb9fefdd580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb9fdee0b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb9fefdb580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb9fdedeb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fb9fefd5580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb9fdedcb20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fb9fefd7580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fb9fdeead10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb9fde1b430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb9fce06020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fde3e3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb9fce06630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb9fde27540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb9fde27540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb9fde1b430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fce0dd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fdf21020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fce0d5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde3cad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde3cad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde32c30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde3b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fcdff5d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde3c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde33850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde33850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fcd966c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb9fde404d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb9fde39060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fde3d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fde34a80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fde34a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fcd97850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fde3e3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fde39990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde32c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fcd95a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde31570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde3b8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde37e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde32c30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb9fde37060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fdf1dd10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb9fde37840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb9fdf1c5e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fde32020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fcd96e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fcd94400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde31570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb9fcd94bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fcd9a630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb9fcd92de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fb9fde14250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb9fdf1bc70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb9fde10d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb9fefe2580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb9fde0ecb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb9fefdb580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdcf8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdd05da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdcfcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdcf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdcefe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdcf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdce22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdce42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdd03120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb9fdcea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdce62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fdcfbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdcf9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdcf0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb9fdcf2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdcf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdd06760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdcffaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fdcfe120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdce9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdcfe870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdce6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdd03dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdcebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdcf9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdcfb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdd05750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdcece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdcee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdceb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdce3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdce4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb9fdcf1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdceee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdce7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdcf4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdce2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdd05100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb9fdcfc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdcf8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdcf0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdcf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdcef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdcf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fdd04450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdcf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdcfd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb9fdcfdcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fdce72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdce8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdcff450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdce82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb9fdce32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdcf1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdcec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fdd04aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdd03770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdcf4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fdcfd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdcf2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdceae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdce17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdcccc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdcd7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdccfb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdcc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdcc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdcc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdcb52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdcb82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdcd4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb9fdcbe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdcb92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fdccec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdccdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdcc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb9fdcc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdcc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdcd8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdcd3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fdcd2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdcbda70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdcd2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdcb9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdcd4dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdcbfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdccd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdcce480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdcd7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdcc0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdcc1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdcbf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdcb7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdcb8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb9fdcc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdcc1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdcbaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdcc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdcb5ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdcd7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb9fdccf370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdccc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdcc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdcc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdcc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdccb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fdcd5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdccbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdcd0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb9fdcd0cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fdcba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdcbbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdcd3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdcbb2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb9fdcb72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdcc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdcc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fdcd5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdcd4770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdcc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fdcd0670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdcc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdcbee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdcb47a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc8e880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc83020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc83020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc7d140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc79bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc82c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc82c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc65150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fb9fdc7c530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb9fdc1ba20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fb9fdc69540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fb9fdc6a590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fb9fdc6a590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fdc199e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc5f950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc67ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc67ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc3da90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fb9fdc659f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fb9fdc69540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fdc2c020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb9fdc27530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb9fdc27530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fdc23e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fdc20020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fb9ff1e5060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fdc18c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb9ff02d020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb9fdbfe990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb9fdbf2900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fb9fdc00150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fb9fdbf10f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fb9fdbf1ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe12c220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb9fdbe5500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fb9fe12db10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb9fdbde820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb9fe0e6e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb9fdbddb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fb9fe0e19b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb9fdbe6880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fb9fe0a9150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb9fdbdb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fdb3ec30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fdb3ec30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdbdbd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdb3d8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdb3d8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdbd86d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb9fdb3c2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdb3c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fdbd8de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fb9fdb3acc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fdb3acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdbd7530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdb39370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdb39370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdbd7c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdb38d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdb38d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdbd9e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdb32c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdb32c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdbda780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdb197a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdb197a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdbd9550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdb1e2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdb1e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdbd63e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdb33480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdb33480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdbd55e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdb30e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdb30e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdbd3020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdb2e670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdb2e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fdbd6e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fb9fdb357b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fdb357b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdbd29c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdb1cad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdb1cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdbd3890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb9fdb1d2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdb1d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdbd2130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb9fdb1dad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdb1dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdbcbd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdb0ddf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdb0ddf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdb05550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fdbedd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fdbecbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb9fdbeb950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda81550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fdbe0be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fda79480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fda79480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fda6b8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fdbce6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdb31c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdb3a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdb34c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdb27e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdb2ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdb1a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb9fdb23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fdb33c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdb28670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb9fdb2be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdb2d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fdb37370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdb22a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdb37ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdb1ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdb38060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdb24e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdb32480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdb3c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdb25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdb26670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdb24670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb9fdb2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdb26e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdb1fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdb2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdb1aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb9fdb34490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdb31480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdb28e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdb2de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdb27670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdb30670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fdb3a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdb35160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb9fdb35e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fdb1f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdb20ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdb386b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdb202f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb9fdb1c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdb2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdb25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdb399c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdb2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdb2b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdb23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fb9fdb09020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fb9fdb047c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb9fdaef150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb9fdb03020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb9fe0e6e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb9fdb02380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fb9fe0e4090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb9fdb016b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fb9fe0e3390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb9fdb00a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb9fe0a8a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb9fdaff6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fda09520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb9fda09520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdafe530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fd9e6480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fd9e6480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdafcad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fda03060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fda03060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fdafc3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fb9fda03d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb9fda03d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fdafb330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fdafa1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb9fdaf8d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda81550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fdafab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1dcb80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdaf33e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fd9fb840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fd9fb840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdaf3cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fd9fa060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fd9fa060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdaf4b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fda02ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fda02ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdaf16d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fd9e7c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fd9e7c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fdaf2590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb9fd9e9c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb9fd9e9c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fdaf2e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb9fd9e8480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb9fd9e8480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdaf0020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fd9e9480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fd9e9480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fdaf08b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb9fda08c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb9fda08c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fb9fdae39d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb9fda16020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb9fe10f080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb9fda693b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb9fda18cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb9fda686e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb9fedf8a80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb9fda110b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fd9fc620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb9fda07940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fd9ff620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb9fd9f3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb9fd9fa840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fda06cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb9fd9ee060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fd9eac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb9fd9fe620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fd9fd620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fd9f4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb9fd9f6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fd9f9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fda082b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fda036b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fd9ed480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fda02490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fda049c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb9fd9ef840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fd9fee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fd9ffe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fda072f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fd9f0840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb9fd9f1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fd9ef060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fd9e7480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb9fd9f5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb9fd9f1840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fd9ea480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fd9f7060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb9fda01e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fd9fde00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fd9f4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fd9f9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fd9f3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fd9fb060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb9fda06020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb9fda017b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb9fd9ecc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fd9ec480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fd9edc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb9fd9e8c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fd9f5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb9fd9f0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb9fda06670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fda04370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fd9f7840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb9fda01160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb9fd9f6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb9fd9ee840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fd9e5160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fb9fd9b9920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fb9fd9b5940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb9fd9bf990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb9fd9b5080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd999e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb9fd99d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fd998ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fd99a690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fd99a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb9fd9978f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb9fd9bba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd995170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb9fd97a200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb9fd976570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd9753f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd97a950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd975a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb9fd93dd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb9fd9466b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd93cb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd946020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fd93b2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd939170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb9fd939b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd8ec410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fb9fd90ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fb9fd8e0800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fd8db580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb9fd8db580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fd8c61c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe267020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9fcc31b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fcc23640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fcc2f8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fe2cb2b0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fcc2e590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb9fd78b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb9fcc2dc10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb9fcc2dc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe2c1350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fcc222e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd7f0930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fcc21020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb9fd7f0930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb9fd7a44b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb9fd7a3400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2cfca0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd7a2060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fd7a0720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fe2cb2b0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fb9fd79f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fb9fd79fc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb9fd781020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb9fe2cb2b0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd781c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:../../../tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:../../../tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.TempSensor" loc="45(SensorAppC.TempSensor):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.TempSensor.SensirionSht11ReaderP" loc="45(SensorAppC.TempSensor.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor" loc="40(SensorAppC.LightSensor):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC" loc="47(SensorAppC.LightSensor.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC" loc="47(SensorAppC.LightSensor.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fb9ff1a6230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fb9ff1a65d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fb9ff1a6980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fb9ff1a6d00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fb9ff1a50d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fb9ff1a5440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fb9ff1a57d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fb9ff1a5b60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fb9ff1a4020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fb9ff168950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fb9ff168d20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fb9fefab9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fb9fefabda0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fb9fefaa1a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fb9fefaa550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fb9fefaa8c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb9fedb89c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb9fedb89c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb9fed74120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb9fed74120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb9fed63a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb9fed63a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb9fed60290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb9fed60290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb9fed60680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb9fed60680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb9fed60e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb9fed60e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb9fed5f260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fb9fed5fa60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fb9fed5fa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb9fed84ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb9fed84ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb9fed3d2d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb9fed3d2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb9fed3d6c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb9fed3d6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb9fed3c020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb9fed3c020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb9fed3c3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fecfe4f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fecfe4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9feccdd70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9feccdd70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fb9fecca0d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fec7a1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fec7a1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb9fea649b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fb9fea57910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fb9fea3bd80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb9fe54a850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fb9fe5423b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fb9fe371660" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fb9fe3719b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe3719b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fdc3b020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fdc3b020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb9fdc3b7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fdc3b7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fb9fd816660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fb9fd80d360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fb9fd8060d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fb9fd7ecc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fb9fd787330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7fb9ff28c6f0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fb9ff28c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9ff28ca70"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9ff28cc00"/>
        <function-ref name="start" scoped="" ref="0x7fb9ff28cd90"/>
        <function-ref name="stop" scoped="" ref="0x7fb9ff29a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb9ff32f560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb9ff32f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb9ff32f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb9ff2aa5f0" loc="28:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9ff2aa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff2aa970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9ff2aab00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9ff2aac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9ff2aae20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9ff304020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb9ff2905a0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9ff2905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9ff290920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9ff290ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9ff290c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9ff290dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9ff2b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7fb9ff308d00" loc="24:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7fb9ff308d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9ff307940"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9ff307dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fb9ff288df0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9ff288df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9ff291310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7fb9ff30fd60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fb9ff30fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fb9ff313e00"/>
        <function-ref name="enable" scoped="" ref="0x7fb9ff313980"/>
        <function-ref name="notify" scoped="" ref="0x7fb9ff311300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7fb9ff312500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fb9ff312500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9ff314130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9ff3158d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9ff3158d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9ff315c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9ff315de0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9ff321020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9ff3211b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9ff321340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff3214d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9ff321660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9ff321ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff3217f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9ff321980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9ff321b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fb9ff30ab70" loc="22:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7fb9ff30ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9ff30c790"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9ff30cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb9ff29b4e0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9ff29b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9ff29b860"/>
        <function-ref name="source" scoped="" ref="0x7fb9ff29b9f0"/>
        <function-ref name="address" scoped="" ref="0x7fb9ff29bb80"/>
        <function-ref name="destination" scoped="" ref="0x7fb9ff29bd10"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9ff303020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9ff3031b0"/>
        <function-ref name="type" scoped="" ref="0x7fb9ff303340"/>
        <function-ref name="setType" scoped="" ref="0x7fb9ff3034d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9ff303660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9ff3037f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9ff303980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x7fb9ff309420" loc="23:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7fb9ff309420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9ff308090"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9ff308510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff325770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff325770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9ff323c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff3301e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9ff323020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9ff330ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9ff322590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9ff322110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9ff330660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9ff331390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9ff323630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9ff331860"/>
        <function-ref name="stop" scoped="" ref="0x7fb9ff331d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb9ff2556a0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff2556a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff255a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb9ff2581f0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb9ff2581f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb9ff258570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff2575a0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff2575a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff257920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fb9ff2507d0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fb9ff2507d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff250b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff2539b0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff2539b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff253d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fb9ff2500f0" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb9ff2500f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff250470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fb9ff24f020" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fb9ff24f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff24f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff252c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff252c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff249020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fb9ff232020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb9ff232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff2323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb9ff2286c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb9ff2286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb9ff22e660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb9ff228bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb9ff228d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb9ff22e020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb9ff228a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb9ff22e1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb9ff22e340"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb9ff22e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff22f020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff22f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff22f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb9ff2183d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb9ff2183d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb9ff217340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb9ff2188e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb9ff218a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb9ff218c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb9ff218750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb9ff218d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb9ff217020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb9ff2171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fb9ff217680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb9ff217680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb9ff217a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff21acb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff21acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff2180a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fb9ff1d45a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fb9ff1d45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1d4920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1d4ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1d4c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1d4dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1d3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1d31b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1d3340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1d34d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fb9ff1c1020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fb9ff1c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1c13a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1c1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1c16c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1c1850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1c19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1c1b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1c1d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1c0020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fb9ff1ca700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fb9ff1ca700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1caa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1cac10"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1cada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1c9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1c91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fb9ff1aea20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fb9ff1aea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1aeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1ad020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1ad1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1ad340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1ad4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fb9ff1d2aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb9ff1d2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1d2e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1d0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1d01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1d0340"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fb9ff1b5020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fb9ff1b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b5850"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fb9ff1aba20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fb9ff1aba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1abda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1aa020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1aa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1aa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1aa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fb9ff1bc5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fb9ff1bc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1bc920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1bcab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1bcc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1bcdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1bb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1bb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1bb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1bb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fb9ff1d5b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb9ff1d5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1dc020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1dc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1dc340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1dc4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1dc660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1dc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1dc980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1dcb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1dcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fb9ff1b0a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fb9ff1b0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1af020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1af1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1af340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1af4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fb9ff1b73e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fb9ff1b73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b7760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b78f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b7a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b7c10"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fb9ff1c05a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fb9ff1c05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1c0a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1c0bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1c0d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1bf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1bf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1bf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1bf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1bf660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fb9ff1c9700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fb9ff1c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1c9a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1c9c10"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1c9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1c3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1c31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1c3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fb9ff1ada20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fb9ff1ada20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1adda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1ac020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1ac1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1ac340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1ac4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fb9ff1bfbe0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fb9ff1bfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1be020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1be1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1be340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1be4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1be660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1be7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1be980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1beb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fb9ff1d0890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fb9ff1d0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1d0c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1d0da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1cb020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1cb1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fb9ff1e5060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb9ff1e5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff1e53e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff1e5570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1e5700"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff1e5890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1e5a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1e5bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff1e5d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1e4020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff1e41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff1e4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff1e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fb9ff1b5da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fb9ff1b5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b3180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b3310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b34a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b3630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fb9ff1db0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb9ff1db0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1db440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1db5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1db760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1db8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1dba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1dbc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1dbda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1d4020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fb9ff1bba50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fb9ff1bba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1bbdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1ba020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1ba1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1ba340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1ba4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1ba660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1ba7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1ba980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1bab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fb9ff1c46d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fb9ff1c46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1c4a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1c4be0"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1c4d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1ca020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1ca1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fb9ff1afa20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fb9ff1afa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1afda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1ae020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1ae1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1ae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1ae4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fb9ff1cccf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb9ff1cccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1d20a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1d2230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1d23c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1d2550"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1d26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fb9ff1b61f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fb9ff1b61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b6570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b6700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b6890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b6a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fb9ff1aca20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fb9ff1aca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1acda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1ab020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1ab1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1ab340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1ab4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fb9ff1bd0c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fb9ff1bd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1bd440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1bd5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1bd760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1bd8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1bda80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1bdc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1bdda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1bc020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fb9ff1c36c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fb9ff1c36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff1c3a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff1c3bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1c3d60"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff1c2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1c2340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff1c24d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1c2660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff1c27f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff1c2980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff1c2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fb9ff1b3b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fb9ff1b3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b2020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b21b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b2340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b24d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fb9ff1b1a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fb9ff1b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff1b0020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1b01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1b0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1b04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff1b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fb9ff1b2a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fb9ff1b2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b1020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b11b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b1340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b14d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fb9ff1b8570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fb9ff1b8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1b88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff1b8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1b8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff1b8da0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fb9ff1b9020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fb9ff1b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1b93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1b9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1b96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1b9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1b99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1b9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1b9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1b8020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb9ff1722f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb9ff1722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff172670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb9ff173c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb9ff173c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff172020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb9ff172940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb9ff172940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff172cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb9ff1735b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff1735b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff173950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9ff175c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff175c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff1740a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff174230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1743c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff174550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1746e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff174870"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff174a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff174b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff174d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff173020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff1731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb9ff16a2f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb9ff16a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff16a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb9ff16cc20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb9ff16cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff16a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb9ff16a940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb9ff16a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff16acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb9ff16c5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff16c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff16c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9ff16ec80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff16ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff16d0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff16d230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff16d3c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff16d550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff16d6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff16d870"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff16da00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff16db90"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff16dd20"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff16c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff16c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff11ea90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff11ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff11ee10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff11d020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff11d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff11d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff11d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff11d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff1669d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff1669d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff166d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff120020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1201b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff120340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1204d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff120660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1207f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff120980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff120b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff11b020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff11b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff11b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff120de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff120de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff11e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff11e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff11e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff11e630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff11e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff11d930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff11d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff11dcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff11de40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff11c020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff11c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff11c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff11c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff11c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff11c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff11c980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff11cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff11cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff116160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff116160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1164e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff116670"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff116800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff116990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff116b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff116cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff118020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1183a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff118530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1186c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff118850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1189e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff118b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff118d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff117020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff1147a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff1147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff114b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff117480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff117480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff117800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff117990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff117b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff117cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff117e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff115020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff1153a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff115530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1156c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff115850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1159e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff115b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff115d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff114020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff1141b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff114340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff1144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff10f7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff10f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff10fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff10fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff10fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff10d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff10d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff10d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff1116d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff1116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff111a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff111be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff111d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff110020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff1101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff110340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff1104d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff110660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff1107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff10cc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff10cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff10b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff110ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff110ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff110e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff10f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff10f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff10f340"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff10f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff10d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff10d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff10d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff10db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff10dcb0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff10de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff10c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff10c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff10c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff10c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff10c660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff10c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff10c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff107cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff107cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1060a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff106230"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff1063c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff106550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff1066e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff106870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff109b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff109b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff108020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff1081b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff108340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff1084d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff108660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff1087f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff108980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff108b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff108ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff1042f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff1042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff104670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff107020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff107020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff1073a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff107530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff1076c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff107850"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff1079e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff106b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff106b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff105020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff1051b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff105340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff1054d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff105660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff1057f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff105980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff105b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff105ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff105e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff104020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0ff2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0ff670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0ff800"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0ff990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0ffb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0ffcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0ffe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff101220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff101220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff1015a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff101730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff1018c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff101a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff101be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff101d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff100020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff1001b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff100340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0fc7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff100610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff100610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff100990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff100b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff100cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff100e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0fd160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0fd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0fd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0fd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0fd800"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0fd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0fdb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0fdcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0fde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0fc020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0fc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0fc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0f77a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0f7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0f7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0f7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0f6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0f61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff0f96d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff0f96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff0f9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff0f9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0f9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff0f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff0f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff0f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff0f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff0f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0f5c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0f5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff0f8ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff0f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0f8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff0f7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff0f71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff0f7340"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0f6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0f6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0f6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0f6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0f6cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0f6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0f5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0f51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0f5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0f54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0f5660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0f57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0f0cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0f0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0ef0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0ef230"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0ef3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0ef550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0ef6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0ef870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff0f2b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff0f2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff0f1020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff0f11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0f1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff0f14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff0f1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0f17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff0f1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff0f1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff0f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0ec2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0ec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff0f0020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff0f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0f03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff0f0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff0f06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff0f0850"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0efb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0efb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0ed020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0ed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0ed340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0ed4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0ed660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0ed7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0ed980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0edb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0edca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0ede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0e72f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0e7670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0e7800"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0e7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0e7b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0e7cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0e7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff0e9220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff0e9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff0e95a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff0e9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0e98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff0e9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff0e9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0e9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff0e8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff0e81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff0e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0e57a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0e57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0e5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff0e8610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff0e8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0e8990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff0e8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff0e8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff0e8e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0e6160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0e6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0e64e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0e6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0e6800"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0e6990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0e6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0e6cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0e6e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0e5020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0e51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0e5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0e07a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0e07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0e0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0e0cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0e0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0df020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0df1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff0e26d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff0e26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff0e2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff0e2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0e2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff0e1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff0e11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0e1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff0e14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff0e1660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff0e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0ddc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0ddc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff0e1ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff0e1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0e1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff0e0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff0e01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff0e0340"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0df610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0df610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0df990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0dfb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0dfcb0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0dfe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0dd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0dd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0dd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0dd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0dd660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0dd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9ff0d8cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9ff0d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0d70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9ff0d7230"/>
        <function-ref name="captured" scoped="" ref="0x7fb9ff0d73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0d7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0d76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9ff0d7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb9ff0dab30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb9ff0dab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9ff0d9020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9ff0d91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0d9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9ff0d94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9ff0d9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0d97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9ff0d9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9ff0d9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9ff0d9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb9ff0d52f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb9ff0d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0d5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb9ff0d8020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb9ff0d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9ff0d83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9ff0d8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9ff0d86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9ff0d8850"/>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0d89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9ff0d7b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9ff0d7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9ff0d6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9ff0d61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9ff0d6340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0d64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9ff0d6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9ff0d67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9ff0d6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9ff0d6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9ff0d6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9ff0d6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9ff0d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fb9ff0cf240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb9ff0cf240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0cf5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fb9ff0d3a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb9ff0d3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0d3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fb9ff0d0260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb9ff0d0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0d05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fb9ff0d09f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb9ff0d09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9ff0d0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fb9ff4584c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb9ff4584c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb9ff458840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fb9ff76c3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb9ff76c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb9ff76c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb9ff76c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb9ff76ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fb9ff594bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fb9ff594bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fb9ff6d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fb9ff230b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb9ff230b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb9ff09ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb9ff09a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb9ff09a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb9ff09a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb9ff09a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb9ff09a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb9ff09a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb9ff09a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb9ff08cdc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb9ff08cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff08a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb9ff09b590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb9ff09b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb9ff09b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fb9ff08c6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fb9ff08c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff08ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fb9ff09bc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff09bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff08c020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb9ff08c1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb9ff08c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb9ff844410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff844410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9ff844790"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9ff844920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb9ff7d53a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff7d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff7d5720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb9ff7d58b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb9ff7d5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb9ff37e040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb9ff37e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9ff37e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9ff37e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fb9ff37a490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb9ff37a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb9ff37a810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb9ff37a9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb9ff37ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb9ff380140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb9ff380140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff3804c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb9ff380650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb9ff3807e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb9ff259590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9ff259590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9ff259910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9ff259aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9ff259c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9ff259dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9ff080020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0801b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9ff080340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9ff080980"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0804d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9ff080660"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9ff0807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fb9ff0747b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb9ff0747b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff074b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff074cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff074e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff07a020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff07a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff07a340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff07a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff07a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9ff07f8d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff07f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff07fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fb9ff07a980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb9ff07a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff07ad00"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff073020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff0731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff073340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff073660"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0737f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff073980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb9ff07c020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9ff07c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9ff07c3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9ff07c530"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9ff07c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9ff07c850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9ff07c9e0"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff07cb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9ff07cd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9ff07b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff07b020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9ff07b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9ff07b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fb9ff073ca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb9ff073ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0720a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff072230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff0723c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff072550"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0726e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff072870"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff072a00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff072b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fb9ff057360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb9ff057360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0576e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff057870"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff057a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff057b90"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff057d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff056020"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0561b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff056340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fb9ff0566a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb9ff0566a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff056a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff056bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff056d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff055020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff055340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0554d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff055660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fb9ff054c40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9ff054c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9ff053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fb9ff0559c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb9ff0559c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff055d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff054020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff0541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff054340"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff054660"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0547f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff054980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb9ff03d020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb9ff03d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff03d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff03d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff03d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff03d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff03d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff03db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff03dd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff03c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff03c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff03c340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff03c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff03c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff03c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff03ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff03cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb9ff029020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb9ff029020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff029530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff029850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff029b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff029d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff028020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff028340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff028660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff028a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff028c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fb9fefe0560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fb9fefe0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefe08e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefe0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefe0c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefe0d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefde020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefde1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefde340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefde4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefde660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefde7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefde980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefdeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefdeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefdd020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fb9fefbb570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fb9fefbb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefbb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefbba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefbbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefbbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefba340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefba7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefba980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefbab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefbaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefb9020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fb9fefdd580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fb9fefdd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefdd900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefdda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefdddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefdc340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefdc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefdc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefdc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefdc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefdcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefdcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefdb020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fb9ff025020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fb9ff025020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff025530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0256c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff025850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff025b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff025d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff024020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff024340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff024660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff024a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff024c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fb9ff011200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fb9ff011200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff011580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff011710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0118a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff011a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff011bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff011d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff010020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff010340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0104d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff010660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff010980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff010c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff010da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fb9feffc200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fb9feffc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feffc580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feffc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feffc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feffca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feffcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feffcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feffb020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feffb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feffb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feffb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feffb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feffb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feffb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feffbc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feffbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fb9fefec200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb9fefec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefec580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefec710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefec8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefeca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefecbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefeb020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefeb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefeb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefeb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefeb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefeb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefeb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefebc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fb9fefd7580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fb9fefd7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefd7900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefd7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefd7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefd7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefd6340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefd6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefd67f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefd6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefd6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefd6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefd5020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fb9fefc7570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fb9fefc7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefc78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefc7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefc7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefc7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefc6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefc6340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefc64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefc6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefc67f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefc6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefc6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefc6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefc5020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fb9fefb3580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fb9fefb3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefb3900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefb3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefb3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefb3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefb2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefb21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefb2340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefb24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefb2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefb27f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefb2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefb2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefb2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefb1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb9ff037020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb9ff037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff037530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff037850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff037b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff037d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff036020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff036340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff036660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff036a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff036c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fb9fefd5580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fb9fefd5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefd5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefd5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefd4340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefd44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefd47f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefd4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefd4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefd4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefd3020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb9ff033020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb9ff033020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff033530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff033850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff033b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff033d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff032020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff032340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff032660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff032a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff032c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fb9ff01f020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fb9ff01f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff01f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff01f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff01f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff01f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff01f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff01fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff01fd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff01e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff01e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff01e340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff01e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff01e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff01e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff01ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff01ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fb9ff00a200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fb9ff00a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff00a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff00a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff00a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff00aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff00abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff00ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff009020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff009340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0094d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff009660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff009980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff009c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff009da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fb9feff6200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fb9feff6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feff6580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feff6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feff68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feff6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feff6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feff6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feff5020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feff51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feff5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feff54d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feff5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feff57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feff5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feff5c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feff5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fb9fefe6200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb9fefe6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefe6580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefe6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefe68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefe6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefe6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefe6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefe5020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefe51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefe5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefe54d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefe5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefe57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefe5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefe5c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefe5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb9ff042020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb9ff042020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff042530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff042850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff042b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff042d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff041020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff041340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff041660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff041a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff041c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb9ff02d020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb9ff02d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff02d4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff02d630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff02d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff02d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff02dae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff02dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff02de00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff02c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff02c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff02c340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff02c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff02c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff02c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff02ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff02cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fb9ff019020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fb9ff019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff019530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0196c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff019850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff019b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff019d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff018020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff018340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff018660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff018a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff018c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fb9fefe2580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fb9fefe2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefe2900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefe2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefe2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefe2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefe1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefe11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefe1340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefe14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefe1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefe17f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefe1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefe1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefe1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefe0020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefe01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fb9fefc1570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fb9fefc1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefc18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefc1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefc1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefc1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefc0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefc01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefc0340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefc04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefc0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefc07f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefc0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefc0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefc0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefbf020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fb9fefb5570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fb9fefb5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefb58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefb5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefb5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefb5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefb4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefb41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefb4340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefb44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefb4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefb47f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefb4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefb4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefb4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefb3020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fb9fefcd580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fb9fefcd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefcd900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefcda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefcdc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefcddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefcc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefcc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefcc340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefcc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefcc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefcc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefcc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefcb020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fb9ff015020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fb9ff015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0155a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff015730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0158c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff015a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff015be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff015d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff014020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0141b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff014340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0144d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff014660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0147f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff014980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff014c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff014da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fb9ff000200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fb9ff000200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff000580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff000710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff000a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff000bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff000d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefff020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefff4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefffc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fb9feff0200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb9feff0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feff0580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feff0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feff08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feff0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feff0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feff0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefef020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefef4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefef660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefef7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefef980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefefc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefefda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fb9fefbf570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fb9fefbf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefbf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefbfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefbfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefbfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefbe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefbe340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefbe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefbe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefbe7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefbe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefbeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefbeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefbd020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fb9fefd3570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fb9fefd3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefd38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefd3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefd3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefd3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefd2340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefd27f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefd2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefd2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefd1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb9ff03b020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb9ff03b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff03b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff03b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff03b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff03b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff03b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff03bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff03bd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff03a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff03a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff03a340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff03a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff03a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff03a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff03aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff03ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb9ff027020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb9ff027020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff027530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0276c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff027850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff027b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff027d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff026020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff026340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff026660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff026a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff026c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fb9feff4200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb9feff4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feff4580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feff4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feff48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feff4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feff4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feff4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feff3020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feff31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feff3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feff34d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feff3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feff37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feff3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feff3c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feff3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fb9ff023020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fb9ff023020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff023530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff023850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff023b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff023d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff022020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff022340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff022660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff022a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff022c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fb9ff00e200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fb9ff00e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff00e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff00e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff00e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff00ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff00ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff00ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff00d020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff00d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff00d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff00d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff00d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff00d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff00d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff00dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff00dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fb9feffa200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fb9feffa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feffa580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feffa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feffa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feffaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feffabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feffad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feff9020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feff91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feff9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feff94d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feff9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feff97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feff9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feff9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feff9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fb9fefea200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb9fefea200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefea580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefea710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefea8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefeaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefeabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefe9020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefe91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefe9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefe94d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefe9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefe97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefe9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefe9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefe9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fb9fefcf580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fb9fefcf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefcf900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefcfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefcfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefcfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefce340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefce7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefcd020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb9ff04f020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb9ff04f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff04f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff04f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff04f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff04f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff04f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff04fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff04fd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff04e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff04e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff04e340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff04e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff04e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff04e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff04ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff04ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb9ff031020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb9ff031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff031530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff031850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff031b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff031d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff030020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff030340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff030660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff030a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff030c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fb9ff01d020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fb9ff01d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff01d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff01d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff01d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff01d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff01d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff01db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff01dd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff01c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff01c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff01c340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff01c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff01c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff01c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff01ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff01cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fb9ff008200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fb9ff008200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff008580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff008710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff008a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff008bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff008d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff007020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff007340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0074d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff007660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff007980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff007c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff007da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fb9fefcb580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fb9fefcb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefcb900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefcba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefcbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefcbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefca340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefca7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefcab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefcaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefc9020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fb9fefc5570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fb9fefc5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefc58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefc5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefc5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefc5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefc4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefc4340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefc44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefc4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefc47f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefc4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefc4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefc4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefc3020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fb9fefb9570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fb9fefb9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefb98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefb9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefb9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefb9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefb8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefb8340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefb84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefb8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefb87f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefb8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefb8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefb8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefb7020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefb71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fb9ff004200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fb9ff004200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff004580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff004710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff004a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff004bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff004d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff003020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff003340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0034d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff003660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff003980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff003c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff003da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fb9fefc9580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fb9fefc9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefc9900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefc9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefc9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefc81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefc8340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefc84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefc8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefc87f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefc8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefc8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefc8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefc7020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb9ff040020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb9ff040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff040530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff040850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff040b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff040d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff03f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff03f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff03f340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff03f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff03f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff03f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff03fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff03fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb9ff02b020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb9ff02b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff02b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff02b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff02b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff02b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff02b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff02bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff02bd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff02a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff02a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff02a340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff02a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff02a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff02a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff02aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff02ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fb9ff017020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fb9ff017020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff017530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0176c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff017850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff017b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff017d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff016020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff016340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff016660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff016a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff016c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fb9fefd1580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fb9fefd1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefd1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefd1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefd1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefd1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefd01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefd0340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefd04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefd0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefd07f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefd0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefd0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefd0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefcf020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fb9fefbd570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fb9fefbd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefbd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefbda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefbdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefbdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefbc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefbc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefbc340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefbc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefbc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefbc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefbcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefbcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefbb020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fb9ff013200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fb9ff013200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff013580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff013710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0138a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff013a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff013bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff013d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff012020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff012340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0124d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff012660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff012980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff012c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff012da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fb9feffe200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fb9feffe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feffe580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feffe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feffe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feffea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feffebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feffed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feffd020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feffd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feffd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feffd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feffd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feffd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feffd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feffdc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feffdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fb9fefee200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb9fefee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefee580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefee710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefee8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefeea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefeebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefeed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefed020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefed340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefed4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefed660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefed7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefed980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefedc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefedda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb9ff039020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb9ff039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff039530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff039850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff039b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff039d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff038020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff038340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff038660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff038a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff038c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fb9feff2200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb9feff2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feff2580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feff2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feff28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feff2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feff2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feff2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feff1020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feff11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feff1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feff14d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feff1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feff17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feff1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feff1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feff1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb9ff035020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb9ff035020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff035530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff035850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff035b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff035d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff034020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff034340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff034660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff034a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff034c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fb9ff021020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fb9ff021020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff021530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff021850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff021b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff021d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff020020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff020340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff020660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff020a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff020c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fb9ff00c200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fb9ff00c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff00c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff00c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff00c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff00ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff00cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff00cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff00b020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff00b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff00b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff00b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff00b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff00b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff00b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff00bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff00bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fb9feff8200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fb9feff8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feff8580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feff8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feff88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feff8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feff8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feff8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feff7020"/>
        <function-ref name="get" scoped="" ref="0x7fb9feff71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feff7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feff74d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feff7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feff77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feff7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feff7c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feff7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fb9fefe8200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb9fefe8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefe8580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefe8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefe88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefe8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefe8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefe8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefe7020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefe71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefe7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefe74d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefe7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefe77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefe7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefe7c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefe7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb9ff044020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb9ff044020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff0443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff044530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0446c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff044850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff0449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff044b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff044d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff043020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff0431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff043340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff0434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff043660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff0437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff043a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff043c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb9ff02f020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb9ff02f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff02f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff02f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff02f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff02f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff02f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff02fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff02fd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff02e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff02e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff02e340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff02e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff02e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff02e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff02ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff02ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fb9ff01b020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fb9ff01b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff01b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff01b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff01b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff01b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff01b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff01bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff01bd00"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff01a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff01a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff01a340"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff01a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff01a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff01a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff01aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff01ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fb9ff006200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fb9ff006200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff006580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff006710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff006a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff006bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff006d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff005020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff005340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0054d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff005660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff005980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff005c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff005da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fb9fefd9560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fb9fefd9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefd98e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefd9a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefd9c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefd9d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefd81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefd8340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefd84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefd8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefd87f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefd8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefd8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefd8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefd7020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fb9fefc3570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fb9fefc3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefc38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefc3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefc3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefc3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefc2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefc21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefc2340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefc24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefc2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefc27f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefc2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefc2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefc2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefc1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fb9fefdb580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fb9fefdb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefdb900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefdba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefdbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefdbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefda020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefda340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefda4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefda660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefda7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefda980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefdab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefdaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefd9020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fb9ff002200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fb9ff002200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9ff002580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9ff002710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9ff0028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9ff002a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9ff002bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9ff002d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9ff001020"/>
        <function-ref name="get" scoped="" ref="0x7fb9ff0011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9ff001340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9ff0014d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9ff001660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9ff0017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9ff001980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9ff001c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9ff001da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fb9fefb7570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fb9fefb7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefb78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefb7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefb7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefb7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefb6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefb61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefb6340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefb64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefb6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefb67f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefb6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefb6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefb6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefb5020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fb9fefb1580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fb9fefb1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefb1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefb1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefb1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefb1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefaf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefaf340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefaf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefaf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefaf7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefaf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefafb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefafca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefae020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fb9fefe41f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fb9fefe41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fefe4970"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fefe4b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fefe4c90"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fefe4e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fefe3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fefe31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fefe3340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fefe34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fefe3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fefe37f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fefe3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fefe3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fefe3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fefe2020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fefe21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef856d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef856d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef85a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef85be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef85d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef84020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef844d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef84660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef84980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef84b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef84ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef84e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef83120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef80100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef80100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef80480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef80610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef80930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef80ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef80c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef80de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef7f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef7f340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef7f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef7f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef7f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef7fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef7fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef7cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef7cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef7b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef7b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef7b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef7b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef7b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef7b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef7ba40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef7bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef7bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef7a020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef7a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef7a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef7a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef7a760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef7a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef77740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef77740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef77ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef77c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef77de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef76340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef764d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef76660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef76980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef76b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef76ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef76e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef75120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef72100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef72480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef72610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef727a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef72930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef72ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef72c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef72de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef71340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef71a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef6ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef6ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef6d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef6da40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef6c020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef6c760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef69740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef69de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef67020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef671b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef67340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef674d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef67660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef67980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef67b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef67ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef67e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef66120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef63100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef63100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef63480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef63610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef637a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef63930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef63ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef63c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef63de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef62020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef62340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef62660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef62a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef62c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef5fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef5fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef5e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef5e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef5e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef5e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef5e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef5e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef5ea40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef5ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef5ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef5d020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef5d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef5d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef5d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef5d760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef5d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef5a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef5a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef5aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef5ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef5ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef59340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef594d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef59660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef59980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef59b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef59ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef59e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef58120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef55100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef55100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef55480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef55610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef557a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef55930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef55ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef55c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef55de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef54340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef54660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef54a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef51d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef51d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef500e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef50270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef50400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef50590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef50720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef508b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef50a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef50bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef50d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef4f020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef4f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef4f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef4f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef4f760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef4c860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef4c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef4cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef4cd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef4b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef4b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef4b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef4b660"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef4b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef4b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef4bb10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef4bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef4be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef4a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef4a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef4a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef47270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef47270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef475f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef47780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef47910"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef47aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef47c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef47dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef46020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef46340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef464d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef46660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef46980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef46c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef46da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef43d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef41270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef41400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef41590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef41720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef41a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef41bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef41d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef40020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef40340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef40760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef3d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef3dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef3dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef3dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef3c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef3c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef3c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef3c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef3c980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef3cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef3cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef3ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef3b120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef38100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef38480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef38610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef38930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef38de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef37340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef37a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef34d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef33270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef33400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef33590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef33720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef338b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef33a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef33bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef33d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef32020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef32340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef32760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef2f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef2f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef2fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef2fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef2fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef2e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef2e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef2e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef2e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef2e980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef2eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef2eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef2ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef2d120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef2a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef2a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef2a480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef2a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef2a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef2a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef2aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef2ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef2ade0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef29020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef291b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef29340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef294d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef29660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef297f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef29a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef29c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef26d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef26d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef250e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef25270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef25400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef25590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef25720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef258b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef25a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef25bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef25d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef24020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef24340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef24760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef21740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef21740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef21ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef21c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef21de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef201b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef204d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef20660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef207f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef20980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef20b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef20ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef20e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef1f120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef1b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef1b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef1b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef1b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef1b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef1b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef1bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef1bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef1bde0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef1a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef1a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef1a340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef1a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef1a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef1a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef1aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef1ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef17d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef17d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef160e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef16270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef16400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef16590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef16720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef168b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef16a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef16bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef16d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef15020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef15340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef154d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef15760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef12a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef12a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef12de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef11020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef111b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef11340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef11660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef117f0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef11980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef11b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef11ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef11e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef10020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef10440"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef0d460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef0d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef0d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef0d970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef0db00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef0dc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef0de20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef0c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef0c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef0c660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef0c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef0c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef0cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef0cda0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef09e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef09e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef08350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef084e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef08670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef08800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef08990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef08b20"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef08cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef08e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef07020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef071b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef07340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef074d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef07760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef078f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9fef04740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9fef04740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fef04ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fef04c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fef04de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fef03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fef031b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fef03340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fef034d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fef03660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fef037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fef03980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fef03b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fef03ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fef03e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fef02120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fef022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeff100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feeff480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feeff610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feeff7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feeff930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feeffac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feeffc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feeffde0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feefe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feefe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feefe340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feefe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feefe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feefe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feefea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feefec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feefbd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feefbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feef90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feef9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feef9400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feef9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feef9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feef98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feef9a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feef9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feef9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feef8020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feef81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feef8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feef84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feef8760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feef88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feef5740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feef5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feef5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feef5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feef5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feef4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feef41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feef4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feef44d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feef4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feef47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feef4980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feef4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feef4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feef4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feef3120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feef32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feef0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feef0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feef0480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feef0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feef07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feef0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feef0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feef0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feef0de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feeef340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feeef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feeef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feeef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeefa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeefc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeecd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feeeb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feeeb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feeeb400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feeeb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feeeb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feeeb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feeeba40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeebbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeebd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feeea020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feeea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feeea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feeea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeea760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feee7740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feee7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feee7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feee7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feee7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feee6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feee61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feee6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feee64d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feee6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feee67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feee6980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feee6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feee6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feee6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feee5120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feee52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feee2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feee2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feee2480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feee2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feee27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feee2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feee2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feee2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feee2de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feee1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feee11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feee1340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feee14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feee1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feee17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feee1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feee1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeded10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feedd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feedd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feedd400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feedd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feedd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feedd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feedda40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feedc020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feedc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feedc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feedc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feedc760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feedc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feed9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feed9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feed9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feed9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feed9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feed8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feed81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feed8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feed84d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feed8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feed87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feed8980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feed8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feed8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feed8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feed7120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feed72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feed4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feed4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feed4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feed4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feed47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feed4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feed4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feed4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feed4de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feed2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feed21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feed2340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feed24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feed2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feed27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feed2a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feed2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feecfd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feecfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feece0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feece270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feece400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feece590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feece720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feece8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feecea40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feecebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeced60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feecd020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feecd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feecd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feecd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feecd760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feecd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeca740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feecaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feecac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feecade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feec9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feec91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feec9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feec94d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feec9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feec97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feec9980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feec9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feec9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feec9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feec8120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feec82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feec5100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feec5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feec5480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feec5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feec57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feec5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feec5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feec5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feec5de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feec4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feec41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feec4340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feec44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feec4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feec47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feec4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feec4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feec1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feec1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feec00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feec0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feec0400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feec0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feec0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feec08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feec0a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feec0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feec0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feebf020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feebf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feebf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feebf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feebf760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feebf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feebc740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feebc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feebcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feebcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feebcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feebb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feebb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feebb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feebb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feebb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feebb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feebb980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feebbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feebbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feebbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeba120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeb7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeb7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feeb7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feeb7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feeb77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feeb7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feeb7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feeb7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feeb7de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeb6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeb61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feeb6340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feeb64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feeb6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feeb67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeb6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeb6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feeb3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feeb3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feeb20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feeb2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feeb2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feeb2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feeb2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feeb28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feeb2a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeb2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeb2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feeb1020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feeb11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feeb1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feeb14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeb1760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeb18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feead740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feead740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feeadac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feeadc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feeadde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feeac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feeac1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feeac340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feeac4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feeac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feeac7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feeac980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feeacb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feeacca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feeace30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feeab120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feeab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feea8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feea8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feea8480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feea8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feea87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feea8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feea8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feea8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feea8de0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feea7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feea71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feea7340"/>
        <function-ref name="set" scoped="" ref="0x7fb9feea74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feea7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feea77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feea7a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feea7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb9feea4d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb9feea4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feea30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feea3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feea3400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feea3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feea3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feea38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feea3a40"/>
        <function-ref name="get" scoped="" ref="0x7fb9feea3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feea3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feea2020"/>
        <function-ref name="set" scoped="" ref="0x7fb9feea21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feea2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feea24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feea2760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feea28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fee2b610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee2b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee2b990"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee2bb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fee2bcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee2be40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee2a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fee2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee2a340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee2a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fee2a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fee2a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee2a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fee2ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fee2aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fee29020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fee3c440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee3c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee3c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee3c950"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee3cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee3cc70"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee3ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee2b020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee2b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fee262f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee26670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee26800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fee26990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee26b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee26cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fee26e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee25020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fee25340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fee254d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee25660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fee257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fee25980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fee25c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee25da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fee27020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee27530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee27850"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee27b70"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee27d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fee22de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fee22de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee20180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee20310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fee204a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee20630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee207c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fee20950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee20ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee20c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fee20e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fee1f020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee1f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fee1f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fee1f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fee1f760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee1f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fee23b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fee23b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fee22020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fee221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fee22340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fee224d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fee22660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fee227f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fee22980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fee22b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fee13640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fee13640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fec66c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fec681e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fec66020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fec68ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fec65590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fec65110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fec68660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fec69390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fec66630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fec69860"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec69d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb9fee0a610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee0a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fee07c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fee081e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fee07020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fee08ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fee05590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fee05110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fee08660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fee09390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fee07630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fee09860"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fee09d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb9fee001d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb9fee001d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fedfd630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fedffc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fedfe9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fedfe550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fedfc020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fedfdab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fedfe0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fee00dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fedfd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fedff2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fedff7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb9fedf8a80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb9fedf8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fedfa6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fee02400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fee02400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fee02780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fed05020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fed05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fed02870"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fed04840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fed02220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fed04d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fed02d30"/>
        <function-ref name="start" scoped="" ref="0x7fb9fed05e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fed04380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fed06760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fed06760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fed06ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fd2adbd0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fd2adbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fd2aa4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd2ab4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fd2abe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fd2ab9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fd2aa9a0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd2aca80"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd2ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd2ad380" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd2ad380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd2ad700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb9fd2940c0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fd2940c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fd294440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fd2945d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fd294760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fd2948f0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd294a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb9fd2977b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fd2977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd297b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fd297cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fd297e50"/>
        <function-ref name="get" scoped="" ref="0x7fb9fd296020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fd2961b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fd296340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fd2964d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fd296660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fd2967f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fd296980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fd296b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb9fd296da0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fd296da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fd295180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fd295310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fd2954a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fd295630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fd2957c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fd295950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fd295ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fd295c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fd295e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb9fedd5ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fedd5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fedd3020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fedd31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fedd3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fedd34d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fedd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb9fedd84d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fedd84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fedd8850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fedd89e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fedd8b70"/>
        <function-ref name="get" scoped="" ref="0x7fb9fedd8d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fedd7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fedd71b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fedd7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fedd74d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fedd7660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fedd77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fedd7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb9fedd6280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fedd6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fedd6600"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fedd6790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fedd6920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fedd6ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fedd6c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fedd6dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fedd5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fedd51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fedd5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb9fd28bda0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fd28bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fd289180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fd289310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fd2894a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fd289630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd2897c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb9fd28d4c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fd28d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd28d840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fd28d9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fd28db60"/>
        <function-ref name="get" scoped="" ref="0x7fb9fd28dcf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fd28de80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fd28c030"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fd28c1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fd28c350"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fd28c4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fd28c670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fd28c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fd290340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fd290340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fd28eba0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd28fb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fd28e550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fd28e090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fd28d090"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd28f1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd28f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd291a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd291a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd291db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb9fd28ca90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fd28ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fd28ce10"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fd28b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fd28b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fd28b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fd28b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fd28b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fd28b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fd28b980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fd28bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fed83020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fed83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fed83e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed82800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed82340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed82cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fb9fed7a020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb9fed7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fed7ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed79800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed79340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed79cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb9fed662c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fed662c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fed66640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fed667d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fed66960"/>
        <function-ref name="get" scoped="" ref="0x7fb9fed66af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fed66c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed66e10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fed65020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed651b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed65340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fed654d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fed65660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fed750a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fed750a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fed68020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed689a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed684e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed68e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb9fed44540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb9fed44540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fed433d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed43d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed43890"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed42260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fed470f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fed470f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fed46020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fed469a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fed464e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fed46e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fd2a6020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fd2a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fd2a4870"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd2a5840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fd2a4220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fd2a5d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fd2a4d30"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd2a6e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd2a5380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb9fd2a0780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fd2a0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fd29d020"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fd29e020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fd29e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fd29e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fd29d4e0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd29f5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd29fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fd2a33d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fd2a33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fd2a1240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fd2a1bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fd2a1700"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fd2a00d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fb9fecd0490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fb9fecd0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fecd0810"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fecd09a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb9fecd31d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fecd31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fecd1b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fecd29f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fecd14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fecd1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fecd0020"/>
        <function-ref name="start" scoped="" ref="0x7fb9fecd2020"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fecd2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fecdacf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fecdacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fecd5220"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fecd77c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fecd6590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fecd6110"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fecd5b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fecd56a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fecd7c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fecd8940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fecd6ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fecd8e10"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fecd7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fb9fec80e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fb9fec80e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fec7e220"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fec7e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fb9fec85c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fb9fec85c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fec80110"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fec826a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fec814a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fec81020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fec80a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fec80590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fec82b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fec83860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fec81ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fec83d30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec82220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fec8b690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fec8b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fec86cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fec88260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fec86090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fec88ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fec85680"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fec851e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fec88700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fec89390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fec866c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fec89880"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec89d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb9fec7ccf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb9fec7ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fec7b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fec71020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fec71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fec71e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fec70800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fec70340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fec70cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fec5ec50" loc="38:../../../tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fec60020"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fb9fec526e0" loc="44:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb9fec526e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb9fec52a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7fb9fec55c40" loc="39:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb9fec55c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fec5a020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb9fec5a1b0"/>
        <function-ref name="receive" scoped="" ref="0x7fb9fec5a340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb9fec5a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fec56020" loc="43:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fec56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fec563a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7fb9fec60dc0" loc="38:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7fb9fec60dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fec5b180"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec5b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fec5a810" loc="42:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fec5ab90"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec5ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb9fec47e10" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb9fec47e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fec461c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb9fec46350"/>
        <function-ref name="receive" scoped="" ref="0x7fb9fec464e0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb9fec46670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb9fec3fe10" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb9fec3fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fec471c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb9fec47350"/>
        <function-ref name="receive" scoped="" ref="0x7fb9fec474e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb9fec47670"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb9fec47800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb9fec47990"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fec47b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fec5c870" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fec5c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fec5cbf0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fec5cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fe9b7c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe9b7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fe9b6020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe9b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb9fe9b5440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb9fe9b5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe9b57c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb9fe9b5950"/>
        <function-ref name="receive" scoped="" ref="0x7fb9fe9b5ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb9fe9b5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb9fe9b4020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9fe9b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9fe9b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb9fe9b6440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb9fe9b6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe9b67c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb9fe9b6950"/>
        <function-ref name="receive" scoped="" ref="0x7fb9fe9b6ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb9fe9b6c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb9fe9b6e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb9fe9b5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe9b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe9b7020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe9b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9b73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe9b7530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe9b76c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe9b7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb9febd78e0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9febd78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9febd7c60"/>
        <function-ref name="configure" scoped="" ref="0x7fb9febd7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb9febd6d00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb9febd6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9febd50a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb9febd5230"/>
        <function-ref name="receive" scoped="" ref="0x7fb9febd53c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb9febd5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb9febd31d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9febd31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9febd3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb9febdb670" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb9febdb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9febdb9f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb9febdbb80"/>
        <function-ref name="receive" scoped="" ref="0x7fb9febdbd10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb9febd6020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb9febd61b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb9febd6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9febd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb9febd5e50" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb9febd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9febd4210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9febd43a0"/>
        <function-ref name="request" scoped="" ref="0x7fb9febd4530"/>
        <function-ref name="granted" scoped="" ref="0x7fb9febd46c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9febd4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9febe1c80" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9febe1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9febdc0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9febdc230"/>
        <function-ref name="request" scoped="" ref="0x7fb9febdc3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9febdc550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9febdc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb9febce710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9febce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9febcea90"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9febcec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb9feb49a20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9feb49a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9feb49dc0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9feb48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb9feb47570" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb9feb47570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9feb47910"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb9feb47aa0"/>
        <function-ref name="receive" scoped="" ref="0x7fb9feb47c30"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb9feb47dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb9feb45020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9feb45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9feb453c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb9feb45690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb9feb45690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9feb45a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9feb45ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9feb45d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9feb44020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9feb441b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9feb44340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9feb444d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9feb44660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9feb447f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9feb44980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9feb44b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9feb44ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9feb44e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9feb43120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9feb432b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9feb43440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9feb435d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9feb43760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9feb438f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9feb43a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9feb43c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9feb43da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9feb42020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9feb421b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9feb42340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9feb426d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9feb42860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9feb429f0"/>
        <function-ref name="tx" scoped="" ref="0x7fb9feb42b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9feb42d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9feb41020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9feb411b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9feb41340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9feb414d0"/>
        <function-ref name="rx" scoped="" ref="0x7fb9feb41660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9feb417f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9feb41980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9feb41b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9feb41ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9feb41e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb9feb483e0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb9feb483e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9feb48780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb9feb48910"/>
        <function-ref name="receive" scoped="" ref="0x7fb9feb48aa0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb9feb48c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb9feb48dc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb9feb47020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9feb471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9feb40c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9feb40c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9feb3fac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9feb3d4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9feb3d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9feb3d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb9feb46230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb9feb46230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9feb465d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9feb46760"/>
        <function-ref name="request" scoped="" ref="0x7fb9feb468f0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9feb46a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9feb46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9feb4ab10" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9feb4ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9feb49020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9feb491b0"/>
        <function-ref name="request" scoped="" ref="0x7fb9feb49340"/>
        <function-ref name="granted" scoped="" ref="0x7fb9feb494d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9feb49660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb9feb40290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9feb40290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9feb40630"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9feb407c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9feb3ddd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9feb3ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9feb3c180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9feb3c310"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9feb3c4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9feb3c630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9feb3c7c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb3c950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9feb3cae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9feb3b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb3ce00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9feb3cc70"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9feb3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb9feb2d3b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9feb2d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9feb2d730"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9feb2d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb9feb300d0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9feb300d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9feb30450"/>
        <function-ref name="stop" scoped="" ref="0x7fb9feb305e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb9feb30900" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9feb30900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9feb30c80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9feb30e10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9feb33020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9feb331b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9feb33340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9feb334d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9feb33660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9feb337f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9feb33980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9feb33b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9feb33ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9feb33e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9feb32020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9feb322b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9feb32440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9feb325d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9feb32760"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9feb328f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9feb32a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9feb32c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9feb32da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9feb2f020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9feb2f1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9feb2f340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9feb2f4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9feb2f860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9feb2f9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9feb2fb80"/>
        <function-ref name="tx" scoped="" ref="0x7fb9feb2fd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9feb2e020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9feb2e1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9feb2e340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9feb2e4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9feb2e660"/>
        <function-ref name="rx" scoped="" ref="0x7fb9feb2e7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9feb2e980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9feb2eb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9feb2eca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9feb2ee30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9feb2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb9feb20670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb9feb20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feb209f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feb20b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feb20d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feb1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feb1e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feb1e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feb1e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb1e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feb1e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feb1e980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb1eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feb1eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feb1ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feb1d120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feb1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9feb25dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9feb25dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9feb24180"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9feb24310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb9feb1d670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb9feb1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feb1d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feb1db80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feb1dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feb1c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feb1c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feb1c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feb1c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb1c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feb1c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feb1c980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb1cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feb1cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feb1ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feb1b120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feb1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb9feb1b670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb9feb1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feb1b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feb1bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feb1bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feb1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feb1a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feb1a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feb1a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb1a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feb1a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feb1a980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb1ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feb1aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feb1ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feb19120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feb192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb9feb29020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb9feb29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9feb293a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9feb29530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9feb296c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9feb29850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9feb299e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9feb29b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9feb29d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9feb28020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9feb281b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9feb28340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9feb284d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9feb28660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9feb287f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9feb28a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9feb28c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9feb28da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9feb27020"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9feb271b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9feb27340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9feb274d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9feb27660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9feb277f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9feb27980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9feb27b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9feb27ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9feb26220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9feb263b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9feb26540"/>
        <function-ref name="tx" scoped="" ref="0x7fb9feb266d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9feb26860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9feb269f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9feb26b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9feb26d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9feb25020"/>
        <function-ref name="rx" scoped="" ref="0x7fb9feb251b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9feb25340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9feb254d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9feb25660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9feb257f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9feb25980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb9feb2c710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9feb2c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9feb2ca90"/>
        <function-ref name="stop" scoped="" ref="0x7fb9feb2cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb9feb22670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb9feb22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feb229f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feb22b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feb22d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feb21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feb211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feb21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feb214d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb21660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feb217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feb21980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb21b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feb21ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feb21e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feb20120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feb202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb9feb246d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb9feb246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9feb24a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9feb24be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9feb24d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9feb23020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9feb231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9feb23340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9feb234d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9feb23660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9feb237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9feb23980"/>
        <function-ref name="set" scoped="" ref="0x7fb9feb23b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9feb23ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9feb23e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9feb22120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9feb222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fea9d110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fea9d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fea9c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fea9c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fea9c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fea9ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fd1f9c70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd1f9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fd1f8020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd1f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fd1f3d70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd1f3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fd1f1180"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fd1f1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb9fd1f35d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fd1f35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fd1f3950"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fd1f3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd1f9020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd1f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd1f93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd1f9530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd1f96c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd1f9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd1f99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb9fd1f8be0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fd1f8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fd1f7020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fd1f71b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fd1f7340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fd1f74d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fd1f7660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fd1f77f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fd1f7980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fd1f7b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fd1f7ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fd1f7e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fd1f6020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fd1f61b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fd1f6340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fd1f65d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fd1f6760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fd1f68f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fd1f6a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fd1f6c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fd1f6da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fd1f5020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fd1f51b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fd1f5340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fd1f54d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fd1f5660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fd1f57f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fd1f5b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fd1f5d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fd1f4020"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fd1f41b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fd1f4340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fd1f44d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fd1f4660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fd1f47f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fd1f4980"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fd1f4b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fd1f4ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fd1f4e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fd1f3020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fd1f31b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fd1f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fd1f8440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd1f8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd1f87c0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd1f8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fea7fd50" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fea7fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fea7e100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fea7e290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fea7c370" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fea7c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fea7c6f0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fea7c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9fea85cd0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9fea85cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fea800a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fea80230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fea80a60" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fea80a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fea80de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fea7f020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fea7f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fea7f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fea7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fea7e590" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fea7e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fea7e910"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fea7eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fea66020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fea66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fea663a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fea66530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9fea790d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9fea790d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fea79470"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fea79600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb9fea68880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb9fea68880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fea68c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb9fea79a00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fea79a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fea79da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb9fea680a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb9fea680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fea68420"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fea685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fe9ec020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe9ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fe9ec3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe9ec550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fe9ebcd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe9ebcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fe9ea0a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fe9ea230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fe9ec7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9ec7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9ecb20"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fe9eccb0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe9ece40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9eb020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe9eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe9ed210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe9ed210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9ed5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe9ed740"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe9ed8d0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe9eda60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9edbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fe9eb400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9eb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe9eb780"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe9eb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd18b020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd18b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd18b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb9fd18b630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd18b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd18b9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd18bb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd18bcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd18be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fd1876c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd1876c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fd187a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd187bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fd185400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd185400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fd1857a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fd185930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb9fd185bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb9fd185bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd184020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd1841b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd184340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd1844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fd187e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd187e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd1861e0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fd186370"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd186500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd186690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd186820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fd184720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fd184720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fd184aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fd184c30"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fd184dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fd183020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fd1831b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fd183340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fd1834d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fd183b10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fd1837f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fd183660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fd183980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd188850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd188850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd188bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd188d80"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd187020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd1871b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd187340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fd186a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd186a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd186df0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd185020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb9fd183de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd183de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd182180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd182310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb9fe9d0400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fe9d0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb9fe9d0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb9fe9d09d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe9d09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9d0d50"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fe9cf020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe9cf1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9cf340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe9cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb9fe9e6b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9fe9e6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fe9d0020"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe9d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fe9cf720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe9cf720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe9cfaa0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe9cfc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb9fd152bd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fd152bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb9fd151020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb9fd151270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd151270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd1515f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fd151780"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd151910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd151aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd151c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb9fd152470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb9fd152470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fd1527f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd152980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fd151e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd151e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd150220"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd1503b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fb9fe9b08e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb9fe9b08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9fe9b0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb9fe9af020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe9af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9af3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe9af530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe9af6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe9af850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fe9b0080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fe9b0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fe9b0400"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe9b0590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb9fe9a2080" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb9fe9a2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb9fe9a2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe99f3a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe99f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe99f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb9fe99fa00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb9fe99fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb9fe99fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fb9fe723900" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb9fe723900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fe723c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fb9fe724240" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fb9fe724240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe724e30"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe723300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fb9fe725aa0" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb9fe725aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fe725e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fb9fe727310" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fb9fe727310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe725020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe7254a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fb9fd141c50" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7fb9fd141c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb9fd13f020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb9fd13f1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb9fd13f340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb9fd13f4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb9fd13f660"/>
        <function-ref name="reset" scoped="" ref="0x7fb9fd13f7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb9fd13f980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb9fd13fb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb9fd13fca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb9fd13fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fb9fd145020" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb9fd145020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fd1453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fb9fd145790" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fb9fd145790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd1443b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd144830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fb9fd147160" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb9fd147160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fd1474e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fb9fd144e30" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7fb9fd144e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd1431e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd143370"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd143500"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd143690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd143820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fb9fd1427b0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7fb9fd1427b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb9fd142b30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb9fd142cc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb9fd142e50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb9fd141020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb9fd1411b0"/>
        <function-ref name="reset" scoped="" ref="0x7fb9fd141340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb9fd1414d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb9fd141660"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb9fd1417f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb9fd141980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fb9fd143af0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7fb9fd143af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd143e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd142030"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd1421c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd142350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd1424e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fb9fd1478d0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fb9fd1478d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd146560"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd1469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fb9fe9482c0" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe9482c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb9fe948640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb9fe9487d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb9fe948960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb9fe948af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb9fe948c80"/>
        <function-ref name="reset" scoped="" ref="0x7fb9fe948e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb9fe947020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb9fe9471b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb9fe947340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb9fe9474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe949020" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe9493a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe949530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe9496c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe949850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe9499e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fb9fe8c8610" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fb9fe8c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe8c8990"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe8c8b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe8c8cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe8c8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fb9fe8bf2f0" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7fb9fe8bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe8bf670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe8bf800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fb9fe8c0ac0" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7fb9fe8c0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe8c0e40"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe8bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fb9fe8c9480" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7fb9fe8c9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8c9800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8c9990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8c9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8c9cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8c9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8c8020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fb9fe8ccc90" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fb9fe8ccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb9fe8cb0a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb9fe8cb230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb9fe8cb3c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb9fe8cb550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb9fe8cb6e0"/>
        <function-ref name="reset" scoped="" ref="0x7fb9fe8cb870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb9fe8cba00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb9fe8cbb90"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb9fe8cbd20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb9fe8ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fb9fe8ca2f0" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb9fe8ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8ca670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8ca800"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8ca990"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8cab20"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8cacb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8cae40"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8c9020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fe8c2450" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fe8c2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fe8c27d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fe8c2960"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fe8c2af0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fe8c2c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fe8c2e10"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8c0020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fe8c01b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fe8c07f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8c04d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fe8c0340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fe8c0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9fe8c7240" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe8c7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe8c36e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe8c5c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe8c4a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe8c45f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe8c2020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe8c3b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe8c4170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe8c7e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe8c30d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe8c5340"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe8c5810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fb9fe8b6730" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fb9fe8b6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe8b6ab0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe8b6c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe8b6dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe8b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fb9fe8b7370" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fb9fe8b7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8b76f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8b7880"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8b7a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8b7ba0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8b7d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8b6020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8b61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8b6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fb9fe8b8020" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb9fe8b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8b8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8b86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8b8850"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8b89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8b8b70"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8b8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe8b91d0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe8b91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe8b9550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe8b96e0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe8b9870"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe8b9a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe8b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe8b3490" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8b3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8b3810"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8b39a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe8b3b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8b3cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8b3e50"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe8b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8b21b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8b2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe8b24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe8b2660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8b27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe8b2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe8b2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe8b2da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe8b4330" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8b46b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8b4840"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8b49d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8b4b60"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8b4cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8b4e80"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8b3030"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8b31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe8ad020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8ad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8ad530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe8ad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8ad850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8ad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe8adb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8add00"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe8ac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe8ac340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8ac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe8ac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe8ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe8aca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8acc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe8b0d60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8b0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8ae180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8ae310"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8ae4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8ae630"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8ae7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8ae950"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8aeae0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8aec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe8a9de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe8a9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8a8180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8a8310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe8a84a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8a8630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8a87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe8a8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8a8ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8a8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe8a8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe8a7020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe8a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe8a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe8a7760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe8aab60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe8aab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe8a9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe8a9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8a94d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe8a9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8a97f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe8a9980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe8a9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe8a23e0" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe8a23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe8a2760"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe8a28f0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe8a2a80"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe8a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fb9fe898700" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fb9fe898700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe898a80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe898c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fb9fe89ab40" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fb9fe89ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe899020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe8991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe899340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe8994d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe899660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe8997f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe899980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe899b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7fb9fe89c510" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7fb9fe89c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe89c890"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe89ca20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe89cbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe89cd40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe89b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe89b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe89b340"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe89b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fb9fe89b830" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb9fe89b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe89bbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe89bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe89a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe89a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe89a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe89a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe89a660"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe89a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb9fe8a1080" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe8a1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe89d630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe8a0ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe89f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe89f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe89c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe89dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe89f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe8a1c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe89d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe8a0170"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe8a0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fe88d5a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe88d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe889a80"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe88b090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe88be10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe88b990"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe8884a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe888020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe88b510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe88c200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe889470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe88c6d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe88cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb9fe87c710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb9fe87c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe87ca90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe87cc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe87cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe87b020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe87b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe87b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb9fe8718a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb9fe8718a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe871c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe871db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe870020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe8701b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe870340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe8704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb9fe879710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb9fe879710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe879a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe879c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe879db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe878020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8781b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe878340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb9fe877710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb9fe877710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe877a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe877c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe877db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe876020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8761b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe876340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb9fe882710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb9fe882710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe882a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe882c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe882db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe87d020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe87d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe87d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb9fe874710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb9fe874710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe874b90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe874d20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe873020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe8731b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe873340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe8734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb9fe87b710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb9fe87b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe87ba90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe87bc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe87bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe87a020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe87a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe87a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb9fe8708a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb9fe8708a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe870c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe870db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe86f020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe86f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe86f340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe86f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb9fe87e660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb9fe87e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe87e9e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe87eb70"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe87ed00"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe883020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8831b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe883340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb9fe876710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb9fe876710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe876a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe876c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe876db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe875020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8751b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe875340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb9fe87d710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb9fe87d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe87da90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe87dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe87ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe87c020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe87c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe87c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb9fe8738a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb9fe8738a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe873c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe873db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe871020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe8711b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe871340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe8714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb9fe87a710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb9fe87a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe87aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe87ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe87adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe879020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8791b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe879340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb9fe878710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb9fe878710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe878a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe878c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe878db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe877020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8771b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe877340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb9fe883710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb9fe883710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe883a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe883c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe883db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe882020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8821b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe882340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb9fe875710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb9fe875710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe875a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe875c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe875db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe874020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8741b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe874340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb9fe868710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb9fe868710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe868a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe868c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe868db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe867020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8671b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe867340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb9fe85e8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb9fe85e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe85ec20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe85edb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe85d020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe85d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe85d340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe85d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb9fe865710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb9fe865710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe865a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe865c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe865db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe864020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8641b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe864340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb9fe863710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb9fe863710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe863a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe863c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe863db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe862020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8621b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe862340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb9fe86a710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb9fe86a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe86aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe86ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe86adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe869020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8691b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe869340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb9fe860710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb9fe860710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe860b90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe860d20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe85f020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe85f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe85f340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe85f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb9fe867710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb9fe867710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe867a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe867c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe867db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe866020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8661b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe866340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb9fe85d8a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb9fe85d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe85dc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe85ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe85c020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe85c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe85c340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe85c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb9fe86c6b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb9fe86c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe86ca30"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe86cbc0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe86cd50"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe86b020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe86b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe86b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb9fe862710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb9fe862710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe862a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe862c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe862db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe861020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8611b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe861340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb9fe869710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb9fe869710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe869a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe869c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe869db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe868020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8681b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe868340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb9fe85f8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb9fe85f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe85fc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe85fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe85e020"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe85e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe85e340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe85e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb9fe866710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb9fe866710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe866a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe866c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe866db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe865020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8651b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe865340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb9fe864710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb9fe864710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe864a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe864c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe864db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe863020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8631b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe863340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb9fe86b710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb9fe86b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe86ba90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe86bc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe86bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe86a020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe86a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe86a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb9fe861710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb9fe861710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe861a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe861c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe861db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe860020"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe8601b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe860340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb9fe789610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe789610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe789990"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe789b20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe789cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe789e40"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe77c020"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe77c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb9fe78aa30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe78aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe78adb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe789020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe7891b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe789340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fe7799e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe7799e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fe779d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe778020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fe776770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe776770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fe776b10"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fe776ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fe778270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe778270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe7785f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fe778780"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe778910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe778aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe778c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe77ab60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe77ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe779020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe7791b0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe779340"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe7794d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe779660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fe778e80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe778e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe776220"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe7763b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd0ae1b0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd0ae1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd0ae530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb9fd0ae7c0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd0ae7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd0aeb40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd0aecd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd0aee60"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd0ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fd0ab850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd0ab850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fd0abbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd0abd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fd0a8590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd0a8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fd0a8930"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fd0a8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb9fd0a8d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb9fd0a8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd0a7100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd0a7290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd0a7420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd0a75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fd0aa020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd0aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd0aa3a0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fd0aa530"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd0aa6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd0aa850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd0aa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fd0a7800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fd0a7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fd0a7b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fd0a7d10"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fd0a6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fd0a61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fd0a6340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fd0a64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fd0a6660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fd0a6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fd0a6980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fd0a67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fd0a6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd0ac970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd0ac970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd0acd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd0ab020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd0ab1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd0ab340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd0ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fd0aac30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd0aac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd0a8020"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd0a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb9fd0a5020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd0a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd0a53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd0a5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fb9fe772280" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe772280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe772600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe772790"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe772920"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe772ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb9fe772d00" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fe772d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb9fe7470a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb9fe7472f0" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fe7472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe747670"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fe747800"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe747990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe747b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe747cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fe746020" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe7463a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe746530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fb9fd0740f0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fd0740f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fd074470"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fd074600"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd074790"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd074920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb9fd074b70" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb9fd074b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb9fd073020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fb9fd072680" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fb9fd072680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd072a00"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd072b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb9fd073270" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fd073270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd0735f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fd073780"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd073910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd073aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd073c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fb9fd072e60" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7fb9fd072e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd071210"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd0713a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fb9fd076970" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fd076970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fd076cf0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd076e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fd073e80" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd073e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd072220"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd0723b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fe7391e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe7391e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe735630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe738c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe7379d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe737550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe734020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe735ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe7370d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe739dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe735020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe7382e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe7387b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb9fe720750" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb9fe720750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe31e390"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe31e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb9fe31d020" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe31d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fe31bab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fe31dc10"/>
        <function-ref name="read" scoped="" ref="0x7fb9fe31b5e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe31a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fb9fe720020" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb9fe720020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fe7203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb9fd05bbd0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb9fd05bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd05a860"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd05ace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fd0594a0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0594a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fd058110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fb9fe6db960" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fb9fe6db960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe6dbce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe6dbe70"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe6da030"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe6da1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe6da350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb9fe6e4390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb9fe6e4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe6e3020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe6e34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fb9fe6e2530" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fb9fe6e2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe6e11b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe6e1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fb9fe6dd2c0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fb9fe6dd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe6dd640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe6dd7d0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe6dd960"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe6ddaf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe6ddc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb9fe6d8020" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb9fe6d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe6d8c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fb9fe6d6450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe6d6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe6d67d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fe6d6960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fe6d6af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fe6d6c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fe6d6e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fe6d5020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fe6d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fb9fe6dc640" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fb9fe6dc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe6dc9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe6dcb50"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe6dcce0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe6dce70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe6db030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fb9fe6abe40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fb9fe6abe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe6a91e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe6a9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fb9fd04c720" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb9fd04c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fd04caa0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fd04cc30"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb9fd04cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fb9fd04d730" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fd04d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fd04dab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fd04dc40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fd04ddd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fd04c020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fd04c1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fd04c340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fd04c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fb9fd04b060" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb9fd04b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb9fd04b3e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb9fd04b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fd04b9a0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd04b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fd049600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd04eaf0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd04eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd04ee70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd04d030"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd04d1c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd04d350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd04d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fb9fe66e960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe66e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe66ece0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fe66ee70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb9fe66c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fb9fe66b760" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fb9fe66b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fe66bae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe66bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fb9fe66c920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb9fe66c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb9fe66cca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb9fe66ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fb9fe66f1d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe66f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe66f550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fe66f6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fe66f870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fe66fa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fe66fb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fe66fd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fe66e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe673cc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe673cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe6700a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe670230"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe6703c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe670550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe6706e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fb9fe6641d0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fb9fe6641d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe664550"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fe6646e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb9fe664870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fb9fe654650" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe654650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb9fe6549d0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb9fe654b60"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb9fe654cf0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb9fe654e80"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb9fe660030"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb9fe6601c0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb9fe660350"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb9fe6604e0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb9fe660670"/>
        <function-ref name="getMem" scoped="" ref="0x7fb9fe660800"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb9fe660990"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb9fe660b20"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb9fe660cb0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb9fe65f020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb9fe65f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fb9fe645200" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb9fe645200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe645580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe645710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe6458a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe645a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe645bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe645d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe644020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe6441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe644340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe6444d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe644660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe6447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe644980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe644c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe644da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fb9fe64e3a0" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb9fe64e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fe64e720"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fe64e8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fe64ea40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fe64ebd0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe64ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fb9fe653d30" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb9fe653d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fe6510e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fe651270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fe651400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fe651590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fe651720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fe6518b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fe651a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fe651bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fe651d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fb9fe662020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fb9fe662020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fe6623a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe662530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fb9fe649200" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb9fe649200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe649580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe649710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe6498a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe649a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe649bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe649d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe648020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe6481b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe648340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe6484d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe648660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe6487f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe648980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe648c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe648da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fb9fe6631d0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb9fe6631d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb9fe663550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb9fe6636e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fb9fe63f200" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb9fe63f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe63f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe63f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe63f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe63fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe63fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe63fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe63e020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe63e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe63e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe63e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe63e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe63e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe63e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe63ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe63eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fb9fe64d140" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb9fe64d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe64d5c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe64d750"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe64d8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe64da70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe64dc00"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe64dd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe64c020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe64c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe64c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe64c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe64c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe64c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe64c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe64cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe64cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe66ac60" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe66ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe667020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fb9fe643200" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb9fe643200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe643580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe643710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe6438a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe643a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe643bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe643d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe642020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe6421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe642340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe6424d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe642660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe6427f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe642980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe642c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe642da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fb9fe65f4f0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb9fe65f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe65f870"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fe65fa00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fe65fb90"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe65fd20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fe653020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fe6531b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fe653340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fe6534d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fe653660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fe6537f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fe653980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fb9fe662940" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fb9fe662940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe662cc0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe662e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fb9fe650160" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb9fe650160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fe6504e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fe650670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fe650800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fe650990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fe650b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fe650cb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fe650e40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fe64f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fe64f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fb9fe667980" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe667980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe667d00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fe666020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fe6661b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fe666340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fe6664d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fe666660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fe6667f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fb9fe647200" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb9fe647200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe647580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe647710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe6478a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe647a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe647bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe647d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe646020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe6461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe646340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe6464d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe646660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe6467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe646980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe646c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe646da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fb9fe64f530" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb9fe64f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fe64f8b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fe64fa40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fe64fbd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fe64fd60"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe64e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fb9fe64b200" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb9fe64b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe64b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe64b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe64b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe64ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe64bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe64bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe64a020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe64a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe64a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe64a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe64a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe64a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe64a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe64ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe64ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fb9fe641200" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb9fe641200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe641580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe641710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe6418a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe641a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe641bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe641d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe640020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe6401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe640340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe6404d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe640660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe6407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe640980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe640c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe640da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fb9fe581020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe581020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb9fe5813a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb9fe581530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb9fe5816c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb9fe581850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb9fe5819e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb9fe581b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb9fe581d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb9fe580020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb9fe5801b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fb9fe580340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb9fe5804d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb9fe580660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb9fe5807f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb9fe580a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb9fe580c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fe4f13a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fe4f13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fe4f1740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fe4f18d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fe4ef570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fe4ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fe4ef910"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fe4efaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe4f2520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe4f2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe4f28c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe4f2a50"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe4f2be0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe4f2d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe4f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fe4f1b20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fe4f1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fe4ef020"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fe4ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd026060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd026060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd0263e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fb9fd026670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fb9fd026670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd0269f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd026b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd026d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fd022530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fd022530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fd0228d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fd022a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fd021610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fd021610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fd0219b0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fd021b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb9fd021dd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb9fd021dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd020180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd020310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd0204a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd020630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd0236c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd0236c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd023a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd023bf0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd023d80"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd022020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd0221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fd022cb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fd022cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fd0210a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fd021230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb9fd020900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb9fd020900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd020c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd020e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb9fe4d1740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb9fe4d1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe4d03d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fb9fe4d21d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe4d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe4d2550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe4d26e0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe4d2870"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe4d2a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe4d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fb9fe4d6d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe4d6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe4d30e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe4d3270"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe4d3400"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe4d3590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe4d3720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fb9fe4cb9a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb9fe4cb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb9fe4cbd20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb9fe4ca020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb9fe4ca1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb9fe4ca340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb9fe4ca4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb9fe4ca660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb9fe4ca7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb9fe4ca980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb9fe4cab10"/>
        <function-ref name="getMem" scoped="" ref="0x7fb9fe4caca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb9fe4cae30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb9fe4c9020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb9fe4c91b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb9fe4c9440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb9fe4c95d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fb9fe4c3020" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fb9fe4c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe4c0630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe4c2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe4c1920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe4c14a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe4be020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe4c0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe4c1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe4c3c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe4c0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe4c2110"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe4c25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fb9fe4cce00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb9fe4cce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe4cb1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe4cb350"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe4cb4e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe4cb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fb9fe4be6c0" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fb9fe4be6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe4bbc40"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe4bc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe4bb020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe4bcae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe4b9590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe4b9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe4bc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe4bd390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe4bb630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe4bd860"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe4bdd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fb9fe4cc240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb9fe4cc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe4cc5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe4cc750"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe4cc8e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe4cca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fb9fe4c9a90" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fb9fe4c9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe4c5020"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe4c7510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe4c6300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe4c7e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe4c5920"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe4c54a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe4c7990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe4c86b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe4c6910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe4c8b80"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe4c7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb9fe467020" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb9fe467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe467c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fb9fe4699c0" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb9fe4699c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe469d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe468020"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe4681b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe468340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fb9fe46a030" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fb9fe46a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe46a3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe46a540"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe46a6d0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe46a860"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe46a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fb9fe46eca0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fb9fe46eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe46b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe46b230"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe46b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe46b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe46b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fb9fe4647f0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fb9fe4647f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe464b70"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe464d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fb9fe46ad80" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb9fe46ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe469180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe469310"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe4694a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe469630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fe4354e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe4354e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe432a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe433020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe433da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe433920"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe4304a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe430020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe4334a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe434110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe432410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe4345e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe434ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fe42e020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe42e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe42a630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe42da60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe42c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe42c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe429020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe42aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe42c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe42ec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe42a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe42d110"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe42d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fe428b40" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fe428b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe423110"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe4265b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fe4254a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fe425020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fe423a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fe423590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe426a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fe427750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fe425ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fe427c20"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe426130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fb9fd03c060" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fb9fd03c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fd03cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fb9fd03a300" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fb9fd03a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fd039020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fd0535c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fd0535c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fd051240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb9fd056840" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb9fd056840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fd054340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fd055480"/>
        <function-ref name="read" scoped="" ref="0x7fb9fd055df0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd054df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fb9fe3ecc90" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fe3ecc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe3eb0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fe3eb230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fe3eb3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fe3eb550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fe3eb6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fe3eb870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fe3eba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fe3ed5e0" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe3ed5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe3ec240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb9fe3f11d0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe3f11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fe3f0c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fe3f1dc0"/>
        <function-ref name="read" scoped="" ref="0x7fb9fe3f0770"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe3ef730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb9fe3e9280" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe3e9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe3e9600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe3e9790"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe3e9920"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe3e9ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe3e9c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fb9fe3b3380" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fb9fe3b3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe3b3700"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe3b3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fb9fe3c2aa0" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fb9fe3c2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe3c2e20"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe3c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fb9fe3bb100" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fb9fe3bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe3bb480"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe3bb610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb9fe3dc020" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fe3dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe3da870"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe3db840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fe3da220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe3dbd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fe3dad30"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe3dce30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe3db380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe3e5150" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe3e5150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fb9ff7d9800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fb9ff7d9800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe3e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fe3dfb10" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe3dfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe3de790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fb9fe3e01d0" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb9fe3e01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fe3e0550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fe3e06e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fe3e0870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fe3e0a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fe3e0b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fe3e0d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fe3df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb9fe3e5e70" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe3e5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fe3e3910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fe3e4a90"/>
        <function-ref name="read" scoped="" ref="0x7fb9fe3e3440"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe3e1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fe377970" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fe377970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe3741b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe3751b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fe375b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe375670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fe374670"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe3767c0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe376cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe377120" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe377120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe3774a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcfd8ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfd8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcfd44e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfd54e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcfd5e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcfd59a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcfd49a0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcfd7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcfd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcfd8450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcfd8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcfd87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb9fcfbe440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcfbe440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fcfbe7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fcfbe950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fcfbeae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fcfbec70"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfbee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb9fcfc1880" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcfc1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fcfc1c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fcfc1d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcfc0020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fcfc01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcfc0340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcfc04d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fcfc0660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcfc07f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcfc0980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fcfc0b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fcfc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb9fcfbf020" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcfbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fcfbf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fcfbf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcfbf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fcfbf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fcfbf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcfbfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fcfbfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fcfbe020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fcfbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb9fcfb40c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcfb40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fcfb4440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fcfb45d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fcfb4760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fcfb48f0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfb4a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb9fcfb7710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcfb7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fcfb7a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fcfb7c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcfb7db0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fcfb6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcfb61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcfb6340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fcfb64d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcfb6660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcfb67f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fcfb6980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fcfb6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcfbb5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfbb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcfb9df0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfbadf0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcfb97a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcfb92e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcfb72e0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcfba420"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcfba930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcfbcca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcfbcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcfbb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb9fcfb6da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcfb6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fcfb5180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fcfb5310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcfb54a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fcfb5630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fcfb57c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcfb5950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fcfb5ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fcfb5c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fcfb5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcfd1020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcfd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcfcf870"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfd0840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcfcf220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcfd0d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcfcfd30"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcfd1e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcfd0380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb9fcfcb780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fcfcb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcfc7020"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcfc9020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcfc99a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcfc94e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcfc74e0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcfca5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcfcaae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fcfcd3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fcfcd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fcfcc240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcfccbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcfcc700"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcfcb0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fb9fe343bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fb9fe343bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fe340710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fe341860"/>
        <function-ref name="read" scoped="" ref="0x7fb9fe340220"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe33f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb9fe36ecb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb9fe36ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb9fe344850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb9fe346940"/>
        <function-ref name="read" scoped="" ref="0x7fb9fe344360"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe343360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb9fe33f8f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe33f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe33fc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe33fe20"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe33d020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe33d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe33d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fb9fcfe5020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb9fcfe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fcfe53a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fcfe5530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb9fcfe56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fb9fcfe7020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb9fcfe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb9fcfe73a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb9fcfe7530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb9fcfe76c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb9fcfe7850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb9fcfe79e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb9fcfe7b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb9fcfe7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fb9fcfe5910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb9fcfe5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb9fcfe5c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb9fcfe5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb9fcfe4280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fcfe4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fcfe3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fcfe8360" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fcfe8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fcfe86e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fcfe8870"/>
        <function-ref name="request" scoped="" ref="0x7fb9fcfe8a00"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fcfe8b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fcfe8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fb9fcf74dc0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fb9fcf74dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fcf73ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fb9fcf71120" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fb9fcf71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fcf71d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fb9fe325300" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb9fe325300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb9fe324020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fb9fe3288b0" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb9fe3288b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb9fe328c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fb9fe315b80" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fb9fe315b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fb9fe314c10"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe314790"/>
        <function-ref name="notify" scoped="" ref="0x7fb9fe3120d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fb9fe318920" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fb9fe318920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe315560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7fb9fe30e080" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fb9fe30e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe30e400"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe30e590"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe30e720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe30e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe312e80" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe312e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe30f220"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe30f3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe30f540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe30f6d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe30f860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe30f9f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe30fb80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe30fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe30b2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe30b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe30b670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe30b800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe30b990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe30bb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe30bcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe30be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe30a020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe30a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe30a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe30a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe30a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe30a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe30a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe30ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe30ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe30c140" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe30c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe30c4c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe30c650"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe30c7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe30c970"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe30cb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe30cc90"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe30ce20"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe30b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb9fe307de0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe307de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe306180"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe306310"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe3064a0"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe306630"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe3067c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe306950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb9fe3072e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe3072e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe307660"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe3077f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe307980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe307b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7fb9fe2e7480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7fb9fe2e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe2e7800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe2e7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7fb9fe2e88f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fb9fe2e88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe2e8c70"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe2e8e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe2e7020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe2e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fb9fe2ecca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fb9fe2ecca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fb9fe2ebd40"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe2eb8c0"/>
        <function-ref name="notify" scoped="" ref="0x7fb9fe2ea1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fb9fe2edb10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fb9fe2edb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe2ec750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fb9fe2ea660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe2ea660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe2ea9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe2eab70"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe2ead00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe2e8020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe2e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe2e8340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe2e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe2e8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7fb9fe2e0e20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7fb9fe2e0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe2dfa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fb9fe2e1270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fb9fe2e1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fb9fe2e0310"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe2e1e60"/>
        <function-ref name="notify" scoped="" ref="0x7fb9fe2e0790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7fb9fe2dd130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7fb9fe2dd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fb9fe2dc1e0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe2ddd20"/>
        <function-ref name="notify" scoped="" ref="0x7fb9fe2dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fb9fe2e2020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fb9fe2e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9ff334770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fb9ff3330d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe2e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe2d2c00" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2d2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe2cf020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe2cf1b0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe2cf340"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe2cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fe2cfca0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2cfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe2ce0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe2ce230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe2ce3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe2ce550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe2ce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb9fe2ccc00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb9fe2ccc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe2cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fe2cb2b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fe2cb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe2cb630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fe2cb7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe2cb950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe2cbae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fe2cbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb9fe2c8430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fe2c8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fe2c7b00"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fe2ba2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fe2c73d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe2ba9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb9fe2ac430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe2ac430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb9fe2ac7b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb9fe2ac940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb9fe2acad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb9fe2acc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fe2cc020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fe2cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe2cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb9fe2c1350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe2c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fe2c16d0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fe2c1860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fe2c19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fe2ca020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe2ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fe2ca3a0"/>
        <function-ref name="source" scoped="" ref="0x7fb9fe2ca530"/>
        <function-ref name="address" scoped="" ref="0x7fb9fe2ca6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fe2ca850"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fe2ca9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fe2cab70"/>
        <function-ref name="type" scoped="" ref="0x7fb9fe2cad00"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fe2c9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fe2c91b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fe2c9340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fe2c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb9fe2b8660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fe2b8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fe2b7ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fe2b6460"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fe2b75b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe2b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe2a12f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe2a12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe2a1670"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe2a1800"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe2a1990"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe2a1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fe2992c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe2992c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fe299640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fe2997d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fe299960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fe299af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fe299c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fe299e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fb9fe2851d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fb9fe2851d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fb9fe285650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fe29b020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fe29b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe29b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fe29b530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe29b6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe29b850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fe29b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fe2a0320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fe2a0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe2a06a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe2a0830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe2a09c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe2a0b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe2a0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb9fe29e1d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb9fe29e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe29e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb9fe2920f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe2920f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fe292470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fe292600"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fe292790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fe292920"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fe292ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fe292c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb9fe287170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe287170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb9fe2874f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb9fe287680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb9fe287810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb9fe2879a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fe29f510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fe29f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe29f890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb9fe29a020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe29a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fe29a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fe29a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fe29a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb9fe27d430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb9fe27d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb9fe27d7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb9fe27d940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb9fe27dad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb9fe27dc60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb9fe27ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fe29e800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fe29e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fe29eb80"/>
        <function-ref name="source" scoped="" ref="0x7fb9fe29ed10"/>
        <function-ref name="address" scoped="" ref="0x7fb9fe29c020"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fe29c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fe29c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fe29c4d0"/>
        <function-ref name="type" scoped="" ref="0x7fb9fe29c660"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fe29c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fe29c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fe29cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fe29cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb9fe28d170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fe28d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb9fe28d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe278020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe2783a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe278530"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe2786c0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe278850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb9fe2679d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fe2679d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb9fe267d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb9fe266b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb9fe266b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb9fe265020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb9fe2651b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb9fe265340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb9fe2654d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb9fe265660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb9fe268020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe268020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fe2683a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fe268530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fe2686c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fe268850"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fe2689e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fe268b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb9fe273990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fe273990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe273d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe26b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe26b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe26b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe26b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb9fe266080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fe266080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb9fe266400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb9fe266590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb9fe266720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb9fe2668b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb9fe274500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb9fe274500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe274880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb9fe267020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fe267020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fe2673a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fe267530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fe2676c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe2771d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe2771d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe277550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe2776e0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe277870"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe277a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe277b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb9fe26a6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb9fe26a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe26aa70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe26ac00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe26ad90"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe274020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe2741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb9fe274bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb9fe274bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe273020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fe2731b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe273340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe2734d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fe273660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb9fe26b840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fe26b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe26bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe262390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe262390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe262710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe2628a0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe262a30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe262bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fe260330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe260330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fe2606b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fe260840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fe2609d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fe260b60"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fe260cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fe260e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fe262e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fe262e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe261220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe2613b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe261540"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe2616d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe261860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fe261b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fe261b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fe260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fe25fe70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fe25fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fe25c220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fe25c3b0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe25c540"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe25c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fe25b7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fe25b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fe25bb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fe25bcf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fe25be80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fe25a030"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fe25a1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fe25a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fb9fe250ae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fb9fe250ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fe250e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fe24f020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fe24f1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fe24f340"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fe24f4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fe24f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb9fe245020" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fe245020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fe2453a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fe245530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fe2456c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fe245850"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fe2459e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fe245b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fb9fe249d30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb9fe249d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe2500e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe250270"/>
        <function-ref name="modify" scoped="" ref="0x7fb9fe250400"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe250590"/>
        <function-ref name="resend" scoped="" ref="0x7fb9fe250720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fe25c990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fe25c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe25cd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe25b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fe25b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fe25b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe25b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb9fe248020" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb9fe248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb9fe2483a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb9fe248530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb9fe257020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb9fe257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fe2573a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe257530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fe23e660" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fe23e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fe23e9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fe23eb70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fe23ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fb9fe252b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe252b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb9fe258020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb9fe2581b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb9fe258340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb9fe2584d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb9fe258660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb9fe2587f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb9fe258980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb9fe258b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fe2487f0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fe2487f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fe248b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fe248d00"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fe247020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fe2471b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fe247340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe2474d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fe247660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fe247ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe2477f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fe247980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fe247b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb9fe25a640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe25a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe25a9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe25ab50"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe25ace0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe25ae70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe259030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fb9fe239e40" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fb9fe239e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fe242310"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fe2424a0"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fe242630"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fe2427c0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fe242950"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fe242ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fb9fe2349e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fb9fe2349e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe234d60"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe233020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fb9fe235a10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fb9fe235a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe235d90"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe234020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fb9fe236a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fb9fe236a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe236d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb9fe1dcb80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1dcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb9fe1e8020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb9fe1e81b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb9fe1e8340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb9fe1e84d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb9fe1e8660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb9fe1e87f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb9fe1e8980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb9fe1e8b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb9fe1e8ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb9fe1e8e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb9fe1e7020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb9fe1e71b0"/>
        <function-ref name="sync" scoped="" ref="0x7fb9fe1e7340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb9fe1e75d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb9fe1e7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb9fe1dbe60" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb9fe1dbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1daa80"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe1d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb9fe1e7a60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe1e7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb9fe1e7de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb9fe1db020"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb9fe1db1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb9fe1db340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb9fe1db4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb9fe1db660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb9fe1db7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb9fe1db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe1ec720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe1ec720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe1ecaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe1ecc30"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe1ecdc0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe1e9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe1e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb9fe1d57e0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fe1d57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb9fe1d5b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb9fe1d5cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb9fe1d5e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb9fe1d3030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb9fe1d31c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb9fe1d3350"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb9fe1d34e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb9fe1d3670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb9fe1d3800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb9fe1d3990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb9fe1d3b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb9fe1d3cb0"/>
        <function-ref name="sync" scoped="" ref="0x7fb9fe1d3e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb9fe1d2120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb9fe1d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fb9fe1b78e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fe1b78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b7c60"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b7df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fb9fe1cfde0" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fe1cfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb9fe1ce180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fb9fe1ce7f0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fb9fe1ce7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe1ca090"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe1cb090"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fe1cba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe1cb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fe1ca550"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe1cd6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe1cdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fb9fe1b9710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fe1b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b9a90"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fb9fe1c9ce0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb9fe1c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe1c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe1c8230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe1c83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe1c8550"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe1c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe1c8870"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe1c8a00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe1c8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb9fe1d19b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb9fe1d19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1d05c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe1d0a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fb9fe1a5820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fb9fe1a5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe1a5ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe1a5d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fb9fe1b51c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fe1b51c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b5540"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b56d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb9fe1b5a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fe1b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b5df0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fb9fe1ba550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fe1ba550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1ba8d0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1baa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fb9fe1c0af0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fe1c0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb9fe1c0e70"/>
        <function-ref name="changed" scoped="" ref="0x7fb9fe1c4030"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb9fe1c41c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb9fe1c4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb9fe1caa40" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb9fe1caa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe1cadc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe1c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe1c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe1c9340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe1c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe1c9660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe1c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe1c9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fb9fe1b3120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fe1b3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe1b36a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fb9fe1c7020" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb9fe1c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe1c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe1c7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe1c76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe1c7850"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe1c79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe1c7b70"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe1c7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe1d63c0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe1d63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe1d6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb9fe1b7020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fe1b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b73a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fb9fe1b3a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fe1b3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe1b3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb9fe1b21d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb9fe1b21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe1b2550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe1b26e0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe1b2870"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe1b2a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe1b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fb9fe1b0d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fb9fe1b0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe1af180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe1af310"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe1af4a0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe1af630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe1af7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb9fe1d25b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb9fe1d25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb9fe1d2930"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb9fe1d2ac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb9fe1d2c50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb9fe1d2de0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb9fe1d1020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb9fe1d11b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb9fe1d1340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb9fe1d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fb9fe1bae00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fe1bae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1b91c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1b9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fb9fe1b8be0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fe1b8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1ba020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fb9fe1b12b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fe1b12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe1b1630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fe1afa80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fe1afa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fe1afe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fe1ae020"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fe1ae1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fe1ae340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fe1ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe1ae660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fe1ae7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fe1aee30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe1ae980"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fe1aeb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fe1aeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fb9fe1a6940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fb9fe1a6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe1a6cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe1a6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe1d6a30" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe1d6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe1d6db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe1d5020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe1d51b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe1d5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe1d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fb9fe1c35a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fe1c35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1c3920"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1c3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fb9fe1bcc00" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fe1bcc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe1c30a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe1c3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fb9fe1c6400" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb9fe1c6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe1c6780"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe1c6910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe1c6aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe1c6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fb9fe1b0020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fb9fe1b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe1b03a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe1b0530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe1b06c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe1b0850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe1b09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fb9fe1b19c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fe1b19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe1b1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe12f7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe12f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe12fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb9fe12c220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe12c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe129b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe12aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fe1294e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe129020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fe128020"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe12a090"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe12a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fe126260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fe126260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fe1265e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb9fe126af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb9fe126af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fe0ea390"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe0eb360"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fe0ebce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fe0eb820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fe0ea850"/>
        <function-ref name="start" scoped="" ref="0x7fb9fe0ec970"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fe0ece80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcf30ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf30ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcf2c4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf2e4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcf2ee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcf2e9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcf2c9a0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcf2fae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcf2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcf30450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcf30450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcf307d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcf28c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf28c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcf254e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf264e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcf26e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcf269a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcf259a0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcf27a80"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcf26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcf283d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcf283d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcf28750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb9fcf0f440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcf0f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fcf0f7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fcf0f950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fcf0fae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fcf0fc70"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf0fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb9fcf129d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcf129d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fcf12d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fcf11020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcf111b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fcf11340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcf114d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcf11660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fcf117f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcf11980"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcf11b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fcf11ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fcf11e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb9fcf10120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcf10120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fcf104a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fcf10630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcf107c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fcf10950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fcf10ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcf10c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fcf10e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fcf0f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fcf0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb9fcf050c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb9fcf050c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fcf05440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb9fcf055d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb9fcf05760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb9fcf058f0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf05a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb9fcf08710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fcf08710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fcf08a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fcf08c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcf08db0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fcf07020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcf071b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcf07340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fcf074d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcf07660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcf077f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fcf07980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fcf07b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcf0c5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf0c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcf09df0"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf0bdf0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcf097a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcf092e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcf082e0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcf0b420"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcf0b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcf0dca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcf0dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcf0c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb9fcf07da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fcf07da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fcf06180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fcf06310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fcf064a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fcf06630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fcf067c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fcf06950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fcf06ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fcf06c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fcf06e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fe10f080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fe10f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe10d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fe10d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fe10d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fe10de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb9fe1060f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb9fe1060f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe104020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fe1049a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fe1044e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fe104e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fe10acd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fe10acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fe108b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fe107550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fe107090"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fe107a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb9fcf22020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb9fcf22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcf1f870"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf20840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcf1f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcf20d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcf1fd30"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcf22e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcf20380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb9fcf1c780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb9fcf1c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fcf18020"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fcf19020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fcf199a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fcf194e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fcf184e0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fcf1a5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fcf1aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fcf1e3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fcf1e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fcf1d240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fcf1dbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fcf1d700"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fcf1c0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fb9fe0e4090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb9fe0e4090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e4410"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e45a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e4730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e48c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e4a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e4be0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e4d70"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fb9fe0e3390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb9fe0e3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e3710"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e3bc0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e2020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fb9fe0e26a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb9fe0e26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e1020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e1340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fb9fe0e6e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb9fe0e6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e5210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e53a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e5530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e56c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e5850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e59e0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e5b70"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fb9fe0e0ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb9fe0e0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0df230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0df3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0df550"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0df6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0df870"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0dfa00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0dfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fb9fe12db10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb9fe12db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e64d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e67f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e6980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fb9fe0e19b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb9fe0e19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0e1d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0e0340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0e0660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0e07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0e0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0db2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0db670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0db800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0db990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0dbb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0dbcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0dbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0da020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0da1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0da340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0da4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0da660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0da7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0da980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0dac10"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0dada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0dc020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0dc530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0dc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0dc850"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0dc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0dcb70"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0dcd00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0d7de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0d7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0d6180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0d6310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0d64a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0d6630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0d67c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0d6950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0d6ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0d6c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0d6e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0d5020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0d5760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0d8b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0d8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0d7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0d74d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0d7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0d77f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0d7980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0d2930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0d2cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0d2e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0d1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0d1660"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0d17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0d1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0d1b10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0d1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0d1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0d0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0d02b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0d0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0d3710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0d3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0d3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0d3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0d2020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0d2340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0d2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0cd480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0cd800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0cd990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0cdb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0cdcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0cde40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0cc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0cc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0cc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0cc660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0cc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0cc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0ccb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0ccda0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0ce1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0ce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0ce550"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0ce6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0ce870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0cea00"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0ceb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0ced20"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0cd020"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0c7020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0c7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0c76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0c7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0c79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0c7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0c7d00"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0c6340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0cad70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0cad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0c8180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0c8310"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0c84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0c8630"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0c87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0c8950"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0c8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0c8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0c3de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0c3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0c2180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0c2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0c24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0c2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0c27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0c2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0c2ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0c2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0c2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0c1020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0c1760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0c4b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0c4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0c3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0c34d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0c3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0c37f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0c3980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fe0be930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fe0be930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0becb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0bee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe0bd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0bd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0bd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe0bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0bd660"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0bd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe0bd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe0bdb10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0bdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe0bde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe0bc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe0bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0bc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fe0bf710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe0bf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe0bfa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe0bfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe0bfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe0be020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe0be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe0be340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe0be4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe0be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fb9fe0a9150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb9fe0a9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb9fe0a94d0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe0a9660"/>
        <function-ref name="captured" scoped="" ref="0x7fb9fe0a97f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb9fe0a9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fb9fe0a9d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb9fe0a9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe0a8180"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe0a8310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe0a84a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe0a8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fb9fe0a8a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb9fe0a8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe0a8da0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe0a4020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe0a41b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe0a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fb9fe08f8f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fb9fe08f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb9fe08fc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb9fe08fe00"/>
        <function-ref name="captured" scoped="" ref="0x7fb9fe08e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fe08e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fe08e340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb9fe08e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb9fe0a1a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb9fe0a1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb9fe0a1da0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe090020"/>
        <function-ref name="captured" scoped="" ref="0x7fb9fe0901b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb9fe090340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb9fe0905d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb9fe0905d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb9fe090950"/>
        <function-ref name="getControl" scoped="" ref="0x7fb9fe090ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fe090c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb9fe090e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb9fe08f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fe08f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb9fe08f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb9fe08f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb9fe08f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fb9fe08e7a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fe08e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fe08eb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fe08ecb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fe08ee40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fe08d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fe08d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fe08d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fe08d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe08d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fe08d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fe08d980"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe08db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fe08dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fe08de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fe08c120"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fe08c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb9fe085480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe085480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe085800"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe085990"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe085b20"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe085cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe085e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe084020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb9fe0888a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe0888a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe088c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe088db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe085020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe0851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb9fe082480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb9fe082480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fe082800"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fe082990"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe082b20"/>
        <function-ref name="edge" scoped="" ref="0x7fb9fe082cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb9fe082e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fb9fe081020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb9fe0838b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb9fe0838b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fe083c30"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fe083dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fe082020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fe0821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb9fdd2be50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdd2be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2a410"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb9fdd34160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdd34160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd344e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb9fdd2ee50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdd2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2d210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb9fdd28880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdd28880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd28c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd28d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb9fdd200a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdd200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd20420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd205b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb9fdd270a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdd270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd27420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd275b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb9fdd15500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdd15500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd15880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb9fdd17500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdd17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd17880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd17a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb9fdd33490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdd33490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd33810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb9fdd1d880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb9fdd1d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1dc00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb9fdd18500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdd18500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd18880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd18a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb9fdd2de50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fdd2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2c210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb9fdd2ce50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdd2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2b210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb9fdd23880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdd23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd23c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd23d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb9fdd240a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb9fdd240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd24420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb9fdd27880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdd27880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd27c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd27d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fdd37a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdd37a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fdd37e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fdd36020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fdd361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb9fdd32e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdd32e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd311c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb9fdd31490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fdd31490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd31910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb9fdd1cc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdd1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1a0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb9fdd31be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdd31be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb9fdd18ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdd18ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd170a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd17230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb9fdd32160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdd32160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd324e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb9fdd1d0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdd1d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1d420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb9fdd2c670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdd2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb9fdd2d670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdd2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb9fdd36ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdd36ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd36e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb9fdd1e0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdd1e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1e420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb9fdd20880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdd20880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd20c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd20d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb9fdd1e880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdd1e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1ec00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb9fdd16ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdd16ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd150a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd15230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb9fdd17ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdd17ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd160a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd16230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb9fdd24880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb9fdd24880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd24c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd24d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb9fdd1f0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdd1f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1f420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb9fdd19ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdd19ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd180a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd18230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb9fdd26880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdd26880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd26c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd26d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb9fdd15ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdd15ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdd130a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdd13230"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd133c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdd13550"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdd136e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb9fdd36480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdd36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd36800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb9fdd2e670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb9fdd2e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb9fdd2b670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdd2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb9fdd210a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdd210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd21420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb9fdd260a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdd260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd26420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb9fdd21880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdd21880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd21c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd21d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb9fdd2a870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdd2a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd2abf0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd2ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb9fdd347b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fdd347b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd34b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb9fdd280a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdd280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd28420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdd38e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdd38e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdd371c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdd37350"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdd374e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdd37670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdd37800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb9fdd302f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdd302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd30670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb9fdd2e020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb9fdd2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd2e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb9fdd19500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fdd19500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd19880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd19a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb9fdd1ace0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdd1ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd190a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd19230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb9fdd327b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdd327b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd32b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb9fdd1a500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdd1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1a880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb9fdd16500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb9fdd16500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd16880"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd16a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb9fdd230a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdd230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd23420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb9fdd1f880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdd1f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1fc00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb9fdd34e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fdd34e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd331c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb9fdd33ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdd33ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd33e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb9fdd250a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdd250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd25420"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb9fdd30940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fdd30940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd30cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb9fdd25880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdd25880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd25c00"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd25d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb9fdd1c0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdd1c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdd1c820"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd1c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb9fdd139b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdd139b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdd13d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdd12020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdd121b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdd12340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdd124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb9fe041630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb9fe041630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fe0419b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fe041b40"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe041cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fe041e60"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fe043670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe043670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fe0439f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fe043b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fe043d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb9fe0408c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb9fe0408c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe040c40"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe040dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb9fe03f6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb9fe03f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe03fa70"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe03fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe046950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe046950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe046cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe046e60"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe043020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe0431b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe043340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb9fe03e510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb9fe03e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe03e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fb9fe028680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fe028680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fe028a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fe028b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb9fe039bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb9fe039bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fe037020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fe0371b0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe037340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fe0374d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fe037660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fe03d920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fe03d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fe03dca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fe03de30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fe03a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fb9fe031080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb9fe031080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb9fe031400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fb9fe030020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fb9fe030020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fe0303a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fe030530"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fe0306c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fe030850"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fe0309e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fe030b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb9fe034400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb9fe034400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe034780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe034910"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe034aa0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe034c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe034dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb9fe036020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb9fe036020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe0363a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe036530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb9fe036db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb9fe036db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fe035180"/>
        <function-ref name="write" scoped="" ref="0x7fb9fe035310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fe030df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fe030df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fe02f1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fe02f350"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fe02f4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fe02f670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fe02f800"/>
        <function-ref name="get" scoped="" ref="0x7fb9fe02f990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fe02fb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fe0291b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fe02fcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fe02fe40"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fe029020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fe03a810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fe03a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fe03ab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fe03ad20"/>
        <function-ref name="request" scoped="" ref="0x7fb9fe039020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fe0391b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fe039340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fb9fe023120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fb9fe023120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fe0234a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fe023630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb9fe035ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb9fe035ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fe034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fdfc8770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fdfc8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fdfc8af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fdfc8c80"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fdfc8e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fdfc1020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fdfc11b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fdfc1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fdfc4280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fdfc4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fdfc4600"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fdfc4790"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fdfc4920"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fdfc4ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fdfc4c40"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fdfc4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fdfc0020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fdfc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fdfc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fdfc0b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fdfc0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fdfbf020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fdfbf1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fdfbf340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fdfbf4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fdfbf660"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fdfbf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb9fdd5e020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdd5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fdd5e3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fdd5e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb9fdfa48f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdfa48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb9fdfa4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdfa5c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdfa5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdfa4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdfa41b0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdfa4340"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdfa44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdfa4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fce17440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fce17440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fce177c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fce17950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb9fce16d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fce16d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fce15180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fce15310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb9fce155a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fce155a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9fce15920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb9fce17be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb9fce17be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb9fce16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fce18770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fce18770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fce18af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fce18c80"/>
        <function-ref name="request" scoped="" ref="0x7fb9fce18e10"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fce17020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fce171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb9fce162b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fce162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb9fce16630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb9fce167c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb9fce16950"/>
        <function-ref name="write" scoped="" ref="0x7fb9fce16ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb9fdf926b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fdf926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fdf92a30"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fdf92bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb9fdf8f850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdf8f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fdf8fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fdf8fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb9fdf8da40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fdf8da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9fdf8ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb9fdf90020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdf90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb9fdf903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb9fdf8e690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb9fdf8e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdf8ea10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdf8eba0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdf8ed30"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdf8d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdf8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdf93430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdf93430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdf937b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdf93940"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdf93ad0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdf93c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdf93df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb9fdf906a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fdf906a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb9fdf90a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb9fdf90bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb9fdf90d40"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdf8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb9fdf8c2a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9fdf8c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fdf8c620"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fdf8c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb9fdf34250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fdf34250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fdf345f0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fdf34780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb9fdf33c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb9fdf33c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fdf31020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fdf311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb9fdf303e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb9fdf303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb9fdf30780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb9fdf34a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb9fdf34a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb9fdf34d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb9fdf30a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb9fdf30a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fdf30dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fdf2f020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fdf2f1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fdf2f340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fdf2f4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fdf2f660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fdf2f7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fdf2f980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fdf2fb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fdf2fca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fdf2fe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fdf2e020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fdf2e1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fdf2e440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fdf2e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fdf2e760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fdf2e8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fdf2ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fdf2ec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fdf2eda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fdf2d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fdf2d1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fdf2d340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fdf2d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fdf2d660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fdf2d9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fdf2db80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fdf2dd10"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fdf2c020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fdf2c1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fdf2c340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fdf2c4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fdf2c660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fdf2c7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fdf2c980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fdf2cb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fdf2cca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fdf2ce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fdf2b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fdf2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fdf2bc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fdf2bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fdf2a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fdf2a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fdf2a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fdf2a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fdf2a660"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdf2a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fdf2a980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fdf29020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdf2aca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fdf2ab10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fdf2ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb9fdf315b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb9fdf315b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdf31950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdf31ae0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdf31c70"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdf31e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdf30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdf35470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdf35470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdf35810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdf359a0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdf35b30"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdf35cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdf35e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb9fdf33060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb9fdf33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb9fdf333e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb9fdf33570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb9fdf33700"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdf33890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb9fdf2b480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb9fdf2b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fdf2b800"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fdf2b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fb9fdf292f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fb9fdf292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fdf29670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fdf29800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb9fdf1c5e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb9fdf1c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fdf1c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb9fdf1dd10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fdf1dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fdf1c0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fdf1c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb9fdf21020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fdf21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fdf213a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fdf21530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fdf216c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fdf21850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fdf219e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fdf21b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fdf21d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fdf20020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fdf201b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fdf20340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fdf204d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fdf20660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fdf207f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fdf20a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fdf20c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fdf20da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fdf1f020"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fdf1f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fdf1f340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fdf1f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fdf1f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fdf1f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fdf1f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fdf1fb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fdf1fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fdf1e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fdf1e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fdf1e540"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fdf1e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fdf1e860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fdf1e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fdf1eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fdf1ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fdf1d020"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fdf1d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fdf1d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fdf1d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fdf1d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fdf1d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fdf1d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb9fdee0b20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb9fdee0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdedf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdedf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdedf340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdedf4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdedf660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdedf7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdedf980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdedfb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdedfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdedfe30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdede020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdede1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdede340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdede5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdede760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9fdf14780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9fdf14780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fdf14b00"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fdf14c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb9fdedeb20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb9fdedeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdedd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdedd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdedd340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdedd4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdedd660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdedd7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdedd980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdeddb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdeddca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdedde30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdedc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdedc1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdedc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdedc5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdedc760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb9fdedcb20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb9fdedcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdedb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdedb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdedb340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdedb4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdedb660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdedb7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdedb980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdedbb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdedbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdedbe30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdeda020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdeda1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdeda340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdeda5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdeda760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb9fdf1bc70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb9fdf1bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fdf18020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fdf181b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fdf18340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fdf184d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fdf18660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fdf187f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fdf18980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fdf18b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fdf18ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fdf18e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fdf17020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fdf171b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fdf17340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fdf175d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fdf17760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fdf178f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fdf17a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fdf17c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fdf17da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fdf16020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fdf161b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fdf16340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fdf164d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fdf16660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fdf167f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fdf16b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fdf16d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fdf15020"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fdf151b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fdf15340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fdf154d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fdf15660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fdf157f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fdf15980"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fdf15b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fdf15ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fdf15e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fdf14020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fdf141b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fdf14340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fb9fdeead10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb9fdeead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb9fdf120e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb9fdf12270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb9fdf12400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb9fdf12590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb9fdf12720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb9fdf128b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb9fdf12a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb9fdf12bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fdf12d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb9fdf11020"/>
        <function-ref name="getData" scoped="" ref="0x7fb9fdf111b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb9fdf11340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb9fdf114d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb9fdf11760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb9fdf118f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb9fdf11a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb9fdf11c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb9fdf11da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb9fdee8020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb9fdee81b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb9fdee8340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb9fdee84d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb9fdee8660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb9fdee87f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb9fdee8980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb9fdee8d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb9fdee7020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb9fdee71b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb9fdee7340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb9fdee74d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb9fdee7660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb9fdee77f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb9fdee7980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb9fdee7b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb9fdee7ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb9fdee7e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb9fdee6020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb9fdee61b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb9fdee6340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb9fdee64d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb9fdee6660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb9fdee67f0"/>
        <function-ref name="setData" scoped="" ref="0x7fb9fdee6980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb9fdee6b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb9fdee6ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb9fdee6e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb9fdee5020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb9fdee51b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb9fdee5340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb9fdee58d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb9fdee5a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb9fdee5bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb9fdee5d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb9fdee4020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb9fdee41b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb9fdee4340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb9fdee44d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb9fdee4660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb9fdee47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb9fdee2b20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb9fdee2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdee1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdee11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdee1340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdee14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdee1660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdee17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdee1980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdee1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdee1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdee1e30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdee0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdee01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdee0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdee05d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdee0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb9fdf13150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fdf13150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fdf134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb9fdee4bb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb9fdee4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdee3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdee31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdee3340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdee34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdee3660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdee37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdee3980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdee3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdee3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdee3e30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdee2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdee21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdee2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdee25d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdee2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fce0ed90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fce0ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fce0d180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fce0d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb9fce06020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb9fce06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fce063a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fcdff5d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fcdff5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fcdff950"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fcdffae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb9fce06630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb9fce06630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb9fce069b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb9fce06b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb9fce06cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb9fce06e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb9fce05020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb9fce051b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb9fce05340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb9fce054d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fce05660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb9fce057f0"/>
        <function-ref name="getData" scoped="" ref="0x7fb9fce05980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb9fce05b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb9fce05ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb9fce04020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb9fce041b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb9fce04340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb9fce044d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb9fce04660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb9fce047f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb9fce04980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb9fce04b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb9fce04ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb9fce04e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb9fce03020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb9fce031b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb9fce03540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb9fce036d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb9fce03860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb9fce039f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb9fce03b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb9fce03d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb9fce02020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb9fce021b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb9fce02340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb9fce024d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb9fce02660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb9fce027f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb9fce02980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb9fce02b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb9fce02ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb9fce02e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb9fce01020"/>
        <function-ref name="setData" scoped="" ref="0x7fb9fce011b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb9fce01340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb9fce014d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb9fce01660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb9fce017f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb9fce01980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb9fce01b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb9fce00420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb9fce005b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb9fce00740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb9fce008d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb9fce00a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb9fce00bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb9fce00d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb9fcdff020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb9fcdff1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb9fcdff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb9fce07760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb9fce07760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fce07ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fce07c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fce0e140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fce0e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fce0e4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fce0e650"/>
        <function-ref name="request" scoped="" ref="0x7fb9fce0e7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fce0e970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fce0eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb9fce0dd40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb9fce0dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fce0b0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fce0b270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fce0b400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fce0b590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fce0b720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fce0b8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fce0ba40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fce0bbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fce0bd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fce0a020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fce0a1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fce0a340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fce0a4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fce0a760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fce0a8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fce0aa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fce0ac10"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fce0ada0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fce09020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fce091b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fce09340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fce094d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fce09660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fce097f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fce09980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fce09d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fce08020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fce081b0"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fce08340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fce084d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fce08660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fce087f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fce08980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fce08b10"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fce08ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fce08e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fce07020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fce071b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fce07340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fce074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fce0d5a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fce0d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fce0d920"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fce0dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fde3c2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde3c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fde3c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fde3c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fde3b8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde3b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fde3bc20"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fde3bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9fde404d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9fde404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fde40850"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fde409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fde3d020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fde3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fde3d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fde3d530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fde3d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fde3d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fde3d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb9fde3e3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fde3e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fde3e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fde3cad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde3cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fde3ce50"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fde3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb9fde37e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde37e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fde36210"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fde363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb9fde39060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb9fde39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fde39400"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fde39590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb9fde37840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb9fde37840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fde37bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb9fde39990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb9fde39990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fde39d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb9fde37060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb9fde37060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb9fde373e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb9fde37570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fde33850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fde33850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fde33bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fde33d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fde31570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fde31570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fde31910"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fde31aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fde32020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fde32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fde323a0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fde32530"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fde326c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fde32850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fde329e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fde34a80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fde34a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fde34e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fde33020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fde331b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fde33340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fde334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fde32c30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fde32c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fde31020"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fde311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fcd9a020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fcd9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fcd9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb9fcd9a630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fcd9a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fcd9a9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fcd9ab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fcd9acd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fcd9ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb9fcd966c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb9fcd966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb9fcd96a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fcd96bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb9fcd94400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb9fcd94400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb9fcd947a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb9fcd94930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb9fcd94bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb9fcd94bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fcd93020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fcd931b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fcd93340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fcd934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb9fcd96e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb9fcd96e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fcd951e0"/>
        <function-ref name="requested" scoped="" ref="0x7fb9fcd95370"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fcd95500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fcd95690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb9fcd95820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fcd93720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fcd93720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fcd93aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fcd93c30"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fcd93dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fcd92020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fcd921b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fcd92340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fcd924d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fcd92b10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fcd927f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fcd92660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fcd92980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fcd97850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fcd97850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fcd97bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fcd97d80"/>
        <function-ref name="request" scoped="" ref="0x7fb9fcd96020"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fcd961b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fcd96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb9fcd95a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb9fcd95a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb9fcd95df0"/>
        <function-ref name="userId" scoped="" ref="0x7fb9fcd94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb9fcd92de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb9fcd92de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fcd91180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fcd91310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb9fde27540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb9fde27540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb9fde278c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb9fde27a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb9fde27be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb9fde27d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb9fde24020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb9fde241b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb9fde24340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb9fde244d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fde24660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb9fde247f0"/>
        <function-ref name="getData" scoped="" ref="0x7fb9fde24980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb9fde24b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb9fde24ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb9fde23020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb9fde231b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb9fde23340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb9fde234d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb9fde23660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb9fde237f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb9fde23980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb9fde23b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb9fde23ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb9fde23e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb9fde22020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb9fde221b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb9fde22540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb9fde226d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb9fde22860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb9fde229f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb9fde22b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb9fde22d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb9fde21020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb9fde211b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb9fde21340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb9fde214d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb9fde21660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb9fde217f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb9fde21980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb9fde21b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb9fde21ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb9fde21e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb9fde20020"/>
        <function-ref name="setData" scoped="" ref="0x7fb9fde201b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb9fde20340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb9fde204d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb9fde20660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb9fde207f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb9fde20980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb9fde20b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb9fde1f420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb9fde1f5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb9fde1f740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb9fde1f8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb9fde1fa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb9fde1fbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb9fde1fd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb9fde1e020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb9fde1e1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb9fde1e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fb9fde14250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fb9fde14250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb9fde145d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb9fde14760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb9fde148f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb9fde14a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb9fde14c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb9fde14da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb9fde13020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb9fde131b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb9fde13340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb9fde134d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb9fde13660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb9fde137f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb9fde13980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb9fde13c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb9fde13da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb9fde12020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb9fde121b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb9fde12340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb9fde124d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb9fde12660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb9fde127f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb9fde12980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb9fde12b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb9fde12ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fde12e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb9fde11220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb9fde113b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb9fde11540"/>
        <function-ref name="tx" scoped="" ref="0x7fb9fde116d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb9fde11860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb9fde119f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb9fde11b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb9fde11d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb9fde10020"/>
        <function-ref name="rx" scoped="" ref="0x7fb9fde101b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb9fde10340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb9fde104d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb9fde10660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb9fde107f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb9fde10980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb9fde0ecb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb9fde0ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fde0d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fde0d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fde0d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fde0d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fde0d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fde0d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fde0da00"/>
        <function-ref name="get" scoped="" ref="0x7fb9fde0db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fde0dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fde0c020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fde0c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fde0c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fde0c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fde0c760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fde0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fb9fde1b430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb9fde1b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb9fde1b7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb9fde1b940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb9fde1bad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb9fde1bc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb9fde1bdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb9fde1a020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb9fde1a1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb9fde1a340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fde1a4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb9fde1a660"/>
        <function-ref name="getData" scoped="" ref="0x7fb9fde1a7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb9fde1a980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb9fde1ab10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb9fde1ada0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb9fde19020"/>
        <function-ref name="getIV" scoped="" ref="0x7fb9fde191b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb9fde19340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb9fde194d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb9fde19660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb9fde197f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb9fde19980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb9fde19b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb9fde19ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb9fde19e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb9fde18020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb9fde183b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb9fde18540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb9fde186d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb9fde18860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb9fde189f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb9fde18b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb9fde18d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb9fde17020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb9fde171b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb9fde17340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb9fde174d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb9fde17660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb9fde177f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb9fde17980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb9fde17b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb9fde17ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb9fde17e30"/>
        <function-ref name="setData" scoped="" ref="0x7fb9fde16020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb9fde161b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb9fde16340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb9fde164d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb9fde16660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb9fde167f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb9fde16980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb9fde15020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb9fde151b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb9fde15340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb9fde154d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb9fde15660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb9fde157f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb9fde15980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb9fde15b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb9fde15ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb9fde15e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb9fde10d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb9fde10d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fde0f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fde0f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fde0f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fde0f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fde0f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fde0f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fde0fa40"/>
        <function-ref name="get" scoped="" ref="0x7fb9fde0fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fde0fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fde0e020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fde0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fde0e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fde0e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fde0e760"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fde0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb9fdcf8c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdcf8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf7210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb9fdd05da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdd05da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd04180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb9fdcfcb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdcfcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcfb020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb9fdcf6670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdcf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf69f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb9fdcefe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdcefe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcee210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb9fdcf6e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdcf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf5210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb9fdce22f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdce22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce2670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb9fdce42f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdce42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce4670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb9fdd03120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdd03120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd034a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb9fdcea670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb9fdcea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcea9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdceab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb9fdce62f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdce62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce6670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb9fdcfbc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fdcfbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf9020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb9fdcf9c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdcf9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf8020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb9fdcf0670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdcf0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf09f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb9fdcf2e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb9fdcf2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf1210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb9fdcf5670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdcf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf59f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fdd06760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdd06760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fdd06ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fdd06c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fdd06e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb9fdcffaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdcffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcffe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb9fdcfe120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fdcfe120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcfe5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb9fdce9a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdce9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce9df0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb9fdcfe870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdcfe870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcfebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb9fdce6ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdce6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce6e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb9fdd03dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdd03dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb9fdcebe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdcebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcea210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb9fdcf9480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdcf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf9800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb9fdcfb480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdcfb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcfb800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcfb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb9fdd05750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdd05750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd05ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb9fdcece50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdcece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdceb210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdceb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb9fdcee670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdcee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcee9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdceeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb9fdceb670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdceb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdceb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb9fdce3ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdce3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce3e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb9fdce4ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdce4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce4e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb9fdcf1670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb9fdcf1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf19f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb9fdceee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdceee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcec210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb9fdce7ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdce7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce7e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb9fdcf4670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdcf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf49f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb9fdce2ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdce2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdce2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdce1020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdce1340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdce14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb9fdd05100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdd05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd05480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb9fdcfc370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb9fdcfc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcfc6f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcfc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb9fdcf8480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdcf8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf8800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb9fdcf0e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdcf0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcef210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb9fdcf5e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdcf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf4210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb9fdcef670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdcef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcef9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcefb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb9fdcf7670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdcf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf79f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb9fdd04450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fdd04450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd047d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb9fdcf7e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdcf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf6210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdd07a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdd07a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdd07e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdd06020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdd061b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdd06340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdd064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb9fdcfd020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdcfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb9fdcfdcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb9fdcfdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcfc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb9fdce72f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fdce72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce7670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb9fdce8ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdce8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce8e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb9fdcff450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdcff450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcff7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb9fdce82f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdce82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce8670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb9fdce32f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb9fdce32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce3670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb9fdcf1e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdcf1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf0210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb9fdcec670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdcec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcec9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb9fdd04aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fdd04aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd04e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb9fdd03770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdd03770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdd03af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb9fdcf4e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdcf4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf2210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb9fdcfd670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fdcfd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcfd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb9fdcf2670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdcf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcf29f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcf2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb9fdceae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdceae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdce9610"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb9fdce17a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdce17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdce1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdce1cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdce1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdce0020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdce01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb9fdcccc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdcccc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccb210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb9fdcd7da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdcd7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb9fdccfb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdccfb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcce020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb9fdcc9670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdcc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc99f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb9fdcc2e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdcc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc1210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb9fdcc9e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdcc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc8210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb9fdcb52f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdcb52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb5670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb9fdcb82f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdcb82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb8670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb9fdcd4120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdcd4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd44a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb9fdcbe670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb9fdcbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbe9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb9fdcb92f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdcb92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb9670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb9fdccec60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fdccec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccd020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb9fdccdc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdccdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccc020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb9fdcc3670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdcc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc39f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb9fdcc6e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb9fdcc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc5210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb9fdcc8670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdcc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc89f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fdcd8760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdcd8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fdcd8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fdcd8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fdcd8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb9fdcd3aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdcd3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb9fdcd2120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fdcd2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb9fdcbda70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdcbda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbddf0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb9fdcd2870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdcd2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb9fdcb9ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdcb9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb9e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb9fdcd4dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdcd4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb9fdcbfe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdcbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbe210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb9fdccd480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdccd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccd800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb9fdcce480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdcce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcce800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb9fdcd7750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdcd7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb9fdcc0e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdcc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbf210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb9fdcc1670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdcc1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc19f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb9fdcbf670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdcbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb9fdcb7ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdcb7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb7e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb9fdcb8ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdcb8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb8e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb9fdcc5670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb9fdcc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc59f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb9fdcc1e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdcc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc0210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb9fdcbaad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdcbaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbae50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb9fdcc7670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdcc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc79f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb9fdcb5ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdcb5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdcb5e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdcb4020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb41b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdcb4340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdcb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb9fdcd7100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdcd7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb9fdccf370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb9fdccf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccf6f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb9fdccc480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdccc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccc800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb9fdcc3e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdcc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc2210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb9fdcc8e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdcc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc7210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb9fdcc2670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdcc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc29f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb9fdccb670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdccb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdccb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdccbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb9fdcd5450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fdcd5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb9fdccbe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdccbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc9210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdcd99e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdcd99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdcd9d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdcd8020"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdcd81b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdcd8340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdcd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb9fdcd0020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdcd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb9fdcd0cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb9fdcd0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdccf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb9fdcba2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fdcba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcba670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb9fdcbbad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdcbbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbbe50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb9fdcd3450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdcd3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb9fdcbb2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdcbb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbb670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb9fdcb72f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb9fdcb72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcb7670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb9fdcc5e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdcc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc3210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb9fdcc0670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdcc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc09f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb9fdcd5aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fdcd5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb9fdcd4770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdcd4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb9fdcc7e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdcc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc6210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb9fdcd0670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fdcd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdcd09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb9fdcc6670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdcc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcc69f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb9fdcbee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdcbee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdcbd610"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcbd7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb9fdcb47a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdcb47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdcb4b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdcb4cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdcb4e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdcb3020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdcb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fb9fdcacb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fdcacb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb9fdca9020"/>
        <function-ref name="changed" scoped="" ref="0x7fb9fdca91b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb9fdca9340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb9fdca94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fb9fdcabd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fdcabd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb9fdc950e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fb9fdc91310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb9fdc91310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb9fdc91690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fb9fdc8e880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc8e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc8ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fb9fdc83020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc833a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fb9fdc79bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc79bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc7c020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdc7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fb9fdc7c530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fb9fdc7c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdc7c8b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdc7ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fb9fdc7d140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb9fdc7d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc7d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fb9fdc82c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc69020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdc691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fb9fdc69540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fb9fdc69540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdc698c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdc69a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdc69be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdc69d70"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdc681b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdc68340"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdc684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fb9fdc5f950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc5f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb9fdc63780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fb9fdc65150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb9fdc65150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdc654d0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdc65660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fb9fdc659f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fb9fdc659f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdc65d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdc64020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdc641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdc64340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdc64660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdc647f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdc64980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fb9fdc67ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc67ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb9fdc3fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fb9fdc3da90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb9fdc3da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb9fdc3c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fdc2c020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fdc2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fdc2ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fdc2b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fdc2b340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fdc2bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fb9fdc27530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb9fdc27530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fdc263d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fdc26d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fdc26890"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fdc24260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb9fdc20020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb9fdc20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fdc203a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb9fdc20530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb9fdc206c0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc20850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb9fdc209e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fdc20b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb9fdc20d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fdc1e020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fdc1e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb9fdc1e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb9fdc1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb9fdc23e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fdc23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344a20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb9ff344d90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fdc22ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fdc21670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fdc211b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fdc21b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fb9fdc6a590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fb9fdc6a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdc6a910"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdc6aaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdc6ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdc6adc0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc1a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdc1a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdc1a340"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdc1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb9fdc18c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb9fdc18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdc17020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdc171b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb9fdc17340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdc174d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdc17660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb9fdc177f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdc17980"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc17b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb9fdc17ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb9fdc17e30"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdc16020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb9fdc161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb9fdc16340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb9fdc165d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdc16760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb9fdc199e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb9fdc199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdc19d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdc18020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdc181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdc18340"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdc184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdc18660"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdc187f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdc18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fdc1ba20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fdc1ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdc1bda0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdc11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fdc02cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fdc02cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fdc010a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fdc01230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fdc013c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fdc01550"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fdc016e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fdc01870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb9fdbfe990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb9fdbfe990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdbfed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fb9fdc02020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb9fdc02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fdc023a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fdc02530"/>
        <function-ref name="modify" scoped="" ref="0x7fb9fdc026c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fdc02850"/>
        <function-ref name="resend" scoped="" ref="0x7fb9fdc029e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fdc056c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fdc056c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdc05a40"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdc05bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb9fdc00150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb9fdc00150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdc004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fdbf3970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fdbf3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fdbf3cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fdbf3e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fdbf2030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fdbf21c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fdbf2350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fdbf24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb9fdbeb950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb9fdbeb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fdbe8020"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fdbe8750"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fdbea780"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbe8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb9fdbd3020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdbd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd33a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb9fdbd3890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdbd3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd3c10"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb9fdbf2900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb9fdbf2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdbf2c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fb9fdbd7530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdbd7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdbd78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fb9fdbe6880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb9fdbe6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb9fdbe6c00"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fdbe6d90"/>
        <function-ref name="captured" scoped="" ref="0x7fb9fdbe5020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb9fdbe51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fb9fdbf1ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fb9fdbf1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fdbed390"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fdbef360"/>
        <function-ref name="startAt" scoped="" ref="0x7fb9fdbefce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fdbef820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb9fdbed850"/>
        <function-ref name="start" scoped="" ref="0x7fb9fdbf0970"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdbf0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb9fdbedd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fdbedd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fdbec0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fdbec230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fdbec3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fdbec550"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fdbec6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fdbec870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fb9fdbd9550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdbd9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd98d0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb9fdbd9e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdbd9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd81c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fb9fdbcbd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdbcbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fdbce0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb9fdbce270"/>
        <function-ref name="sfd" scoped="" ref="0x7fb9fdbce400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fdbf4bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fdbf4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fdbf3020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fdbf31b0"/>
        <function-ref name="modify" scoped="" ref="0x7fb9fdbf3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fdbf34d0"/>
        <function-ref name="resend" scoped="" ref="0x7fb9fdbf3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fb9fdbdbd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdbdbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fdbda0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fdbda270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fdbda400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fb9fdbd7c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdbd7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdbd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb9fdbde820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb9fdbde820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdbdeba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdbded30"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdbdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdbdd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdbdd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdbdd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbdd660"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdbdd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fdbf6c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fdbf6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fdbf4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fdbecbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fdbecbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fdbeb020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fdbeb1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fdbeb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fb9fdbe0be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fdbe0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fdbe6020"/>
        <function-ref name="isSet" scoped="" ref="0x7fb9fdbe61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fdbe6340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbe64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb9fdbd63e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdbd63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd6960"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd6af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb9fdbdb020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb9fdbdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdbdb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdbdb530"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdbdb6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdbdb850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdbdb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fb9fdbe5500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb9fdbe5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdbe5980"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdbe5b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdbe5ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdbe5e30"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdbde020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdbde1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbde340"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdbde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb9fdbd2130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdbd2130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd24b0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd2640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fb9fdbd29c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdbd29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd2d40"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb9fdbd86d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdbd86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdbd8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fb9fdbddb40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb9fdbddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdbdc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdbdc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdbdc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdbdc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdbdc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdbdc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbdc980"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdbdcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fdbce6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fdbce6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fdbcea40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fdbcebd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fdbced60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fdbcd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fdbcd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdbcd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fdbcd4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fdbcdb10"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdbcd660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fdbcd7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fdbcd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb9fdbd55e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdbd55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdbd5960"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbd5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fdbf4320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fdbf4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdbf46a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdbf4830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fb9fdbda780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdbda780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdbdab00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdbdac90"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdbdae20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdbd9020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdbd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fb9fdbd8de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fdbd8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdbd7180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fb9fdbd6e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fdbd6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdbd5220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb9fdbf10f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb9fdbf10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdbf1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb9fdb31c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fdb31c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb30210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb9fdb3a020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb9fdb3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb9fdb34c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fdb34c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb33020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb9fdb2e670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdb2e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb9fdb27e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb9fdb27e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb26210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb9fdb2ee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb9fdb2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2d210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb9fdb1a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdb1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1a670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb9fdb1d2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdb1d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1d670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb9fdb39370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fdb39370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb396f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb9fdb23670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb9fdb23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb239f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb9fdb1e2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fdb1e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1e670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb9fdb33c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fdb33c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb32020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb9fdb32c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fdb32c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb31020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb9fdb28670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fdb28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb289f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb28b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb9fdb2be50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb9fdb2be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2a210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb9fdb2d670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fdb2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fdb3d8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fdb3d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fdb3dc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fdb3de00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fdb3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb9fdb38d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fdb38d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb9fdb37370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fdb37370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb9fdb22a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fdb22a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb22df0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb9fdb37ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fdb37ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb37e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb9fdb1ead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdb1ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1ee50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb9fdb38060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fdb38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb383e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb9fdb24e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb9fdb24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb23210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb9fdb32480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fdb32480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb32800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb32990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb9fdb33480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fdb33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb33800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb33990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb9fdb3c940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fdb3c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb3ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb9fdb25e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fdb25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb24210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb9fdb26670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb9fdb26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb269f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb26b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb9fdb24670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fdb24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb249f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb24b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb9fdb1cad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fdb1cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1ce50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb9fdb1dad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdb1dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1de50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb9fdb2a670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb9fdb2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb9fdb26e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb9fdb26e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb25210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb9fdb1fad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fdb1fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1fe50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb9fdb2c670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fdb2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb9fdb1aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdb1aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdb1ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdb19020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb191b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdb19340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdb194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb9fdb3c2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdb3c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb3c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb9fdb34490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb9fdb34490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb34810"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb349a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb9fdb31480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fdb31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb31800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb31990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb9fdb28e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fdb28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb27210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb9fdb2de50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fdb2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2c210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb9fdb27670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fdb27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb279f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb27b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb9fdb30670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fdb30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb309f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb30b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb9fdb3a670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fdb3a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb3a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb9fdb30e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdb30e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2e210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fdb3ec30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fdb3ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdb3d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdb3d1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdb3d340"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdb3d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdb3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb9fdb35160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdb35160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb354e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb9fdb35e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb9fdb35e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb341c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb9fdb1f2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fdb1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1f670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb9fdb20ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fdb20ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb20e50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb9fdb386b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdb386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb38a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb9fdb202f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fdb202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb20670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb20800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb9fdb1c2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb9fdb1c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb1c670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb1c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb9fdb2ae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fdb2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb28210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb9fdb25670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb9fdb25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb259f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb9fdb3acc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fdb3acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb390a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb9fdb399c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fdb399c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb39d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb9fdb2ce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fdb2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2b210"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb9fdb357b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fdb357b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdb35b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb9fdb2b670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb9fdb2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb2b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb2bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb9fdb23e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb9fdb23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdb22610"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb227a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb9fdb197a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fdb197a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdb19b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdb19cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdb19e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdb18020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdb181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb9fdb0ddf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdb0ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fdb0a1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb9fdb0a350"/>
        <function-ref name="sfd" scoped="" ref="0x7fb9fdb0a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fdb0a7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fdb0a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fdb0ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb9fdb09020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb9fdb09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdb093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fdb0d5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fdb0d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdb0d940"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdb0dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fb9fdb02380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb9fdb02380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdb02700"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdb02890"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdb02a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdb02bb0"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdb02d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdb01020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdb011b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdb01340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb9fdafab90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fdafab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb9fdaf9020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb9fdaf91b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb9fdaf9340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb9fdaf94d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb9fdaf9660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb9fdaf97f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb9fdaf9980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb9fdaf9b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb9fdaf9ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb9fdaf9e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb9fdaf8020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb9fdaf81b0"/>
        <function-ref name="sync" scoped="" ref="0x7fb9fdaf8340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb9fdaf85d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb9fdaf8760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fb9fdae39d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fb9fdae39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fdae3d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fdae2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb9fdaf8d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb9fdaf8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fdaf6330"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fdaf6a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fdaf7ba0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdaf4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fb9fdb016b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb9fdb016b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdb01a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdb01bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdb01d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdb00020"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdb001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdb00340"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdb004d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdb00660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb9fdaf3cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fdaf3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf20a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb9fdaf2590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fdaf2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf2910"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fb9fdaf16d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fdaf16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf1a50"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb9fdafb330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fdafb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fdafb6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fdafb840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fdafb9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fdafbb60"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fdafbcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fdafbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb9fdb05550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb9fdb05550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fdb058d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb9fdb05a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fb9fdb05bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fb9fdafc3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fdafc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdafc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb9fdb03020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb9fdb03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb9fdb033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb9fdb03530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb9fdb036c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb9fdb03850"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdb039e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb9fdb03b70"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdb03d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb9fdb02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fb9fdaf0020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fdaf0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf03a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fdb06620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fdb06620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fdb069a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fdafa1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fdafa1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fdafa560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fdafa6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fdafa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fdb04020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fdb04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fdb043a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb9fdaff6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb9fdaff6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fdaffa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fdaffbf0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fdaffd80"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fdafe020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fdafe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb9fdaf2e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fdaf2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf11c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fb9fdafe530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fdafe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fdafe8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fdafea40"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdafebd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fdafed60"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fdafc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb9fdaf08b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fdaf08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdaf0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb9fdb047c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb9fdb047c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb9fdb04b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fdaef150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fdaef150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fdaef4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fdaef660"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fdaef7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fdaef980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fdaefb10"/>
        <function-ref name="get" scoped="" ref="0x7fb9fdaefca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fdaefe30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fdaee4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fdaee020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fdaee1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fdaee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb9fdaf33e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fdaf33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fdaf3760"/>
        <function-ref name="write" scoped="" ref="0x7fb9fdaf38f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fb9fdaf4b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fdaf4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdaf3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fb9fdb00a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb9fdb00a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb9fdb00dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fb9fdaff020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb9fdaff1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb9fdaff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fb9fdafcad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fdafcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fdafb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb9fdb06ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb9fdb06ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb9fdb050a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fdb05230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb9fda82a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fda82a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb9fda82df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb9fda87670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fda879f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fda87b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fda87d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fda84020"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fda841b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fda84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb9fda81550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda81550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fda80b00"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fda7f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fda803d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda7f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb9fda820c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda820c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fda82440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fda825d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fda82760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb9fda79480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fda79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda79800"/>
        <function-ref name="isSet" scoped="" ref="0x7fb9fda79990"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fda79b20"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda79cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb9fda7d660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fda7d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fda7cce0"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fda7b460"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fda7c5b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda7bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb9fda846e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb9fda846e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fda84a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fda84bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fda84d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb9fda73020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb9fda73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb9fda733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb9fda78d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fda78d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fda750e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fda75270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fda75400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fda75590"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fda75720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fda758b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb9fda6a4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fda6a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fda6a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fda6a9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fda6ab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fda6acd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fda6ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb9fda73a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb9fda73a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fda71020"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fda71750"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fda728d0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda71e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb9fda74640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fda74640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fda749c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fda74b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fda74ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb9fda6b8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb9fda6b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda6bc30"/>
        <function-ref name="isSet" scoped="" ref="0x7fb9fda6bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fda6a020"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fb9fda693b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb9fda693b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda68020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fb9fda686e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb9fda686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda673d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb9fda6faf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb9fda6faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb9fda6d0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fb9fda6d800"/>
        <function-ref name="isValid" scoped="" ref="0x7fb9fda6e970"/>
        <function-ref name="set" scoped="" ref="0x7fb9fda6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb9fda75c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb9fda75c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fda74020"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fda741b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fda74340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb9fda18cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb9fda18cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda17980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb9fda16020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb9fda16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff344270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb9ff3445e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb9fda16e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb9fda15800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb9fda15340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb9fda15cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb9fda110b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb9fda110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9ff345680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb9ff345df0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb9fda0e630"/>
        <function-ref name="fired" scoped="" ref="0x7fb9fda10b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb9fda0f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb9fda0f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb9fda0c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb9fda0eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb9fda0f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb9fda11ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb9fda0e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb9fda101b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fda10680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb9fd9fc620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb9fd9fc620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fcba0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb9fda07940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb9fda07940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda07cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb9fd9ff620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb9fd9ff620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ff9a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ffb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb9fd9fa060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb9fd9fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fa3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb9fd9f3840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb9fd9f3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f3bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb9fd9fa840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb9fd9fa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fabc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb9fd9e7c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb9fd9e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e6020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb9fd9e9c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb9fd9e9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e8020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb9fda06cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb9fda06cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda040a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb9fd9ee060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb9fd9ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ee3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ee570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb9fd9eac60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb9fd9eac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e9020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb9fd9fe620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb9fd9fe620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fe9a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9feb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb9fd9fd620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb9fd9fd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fd9a0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb9fd9f4060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb9fd9f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f43e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb9fd9f6840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb9fd9f6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f6bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb9fd9f9060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb9fd9f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f93e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb9fda082b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb9fda082b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb9fda08630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb9fda087c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb9fda08950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb9fda036b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb9fda036b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda03a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb9fda03d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb9fda03d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda021c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb9fd9ed480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb9fd9ed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ed800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ed990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb9fda02490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb9fda02490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda02810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb9fd9e9480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb9fd9e9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e9800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb9fda049c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb9fda049c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda04d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb9fd9ef840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb9fd9ef840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9efbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9efd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb9fd9fee00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb9fd9fee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fd1c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fd350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb9fd9ffe00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb9fd9ffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fe1c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fe350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb9fda072f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb9fda072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda07670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb9fd9f0840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb9fd9f0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f0bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb9fd9f1060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb9fd9f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f13e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb9fd9ef060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb9fd9ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ef3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ef570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb9fd9e7480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb9fd9e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e7800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb9fd9e8480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb9fd9e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e8800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb9fd9f5060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb9fd9f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f53e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb9fd9f1840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb9fd9f1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f1bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb9fd9ea480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb9fd9ea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ea800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ea990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb9fd9f7060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb9fd9f7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f73e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb9fd9e6480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb9fd9e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fd9e6800"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fd9e6990"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e6b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fd9e6cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd9e6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb9fda08c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb9fda08c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb9fda01e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb9fda01e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ff1c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ff350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb9fd9fde00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb9fd9fde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fc1c0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fc350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb9fd9f4840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb9fd9f4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f4bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb9fd9f9840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb9fd9f9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f9bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb9fd9f3060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb9fd9f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f33e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb9fd9fb060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb9fd9fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fb3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fb570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb9fda06020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb9fda06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb9fd9fb840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb9fd9fb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9fbbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9fbd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fda09520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fda09520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fda098a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fda09a30"/>
        <function-ref name="request" scoped="" ref="0x7fb9fda09bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fda09d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fda08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb9fda02ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb9fda02ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda02e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb9fda017b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb9fda017b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda01b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb9fd9ecc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb9fd9ecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ea020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb9fd9ec480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb9fd9ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ec800"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ec990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb9fda03060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb9fda03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda033e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb9fd9edc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb9fd9edc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ec020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb9fd9e8c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb9fd9e8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9e7020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb9fd9f5840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb9fd9f5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f5bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb9fd9f0060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb9fd9f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f03e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb9fda06670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb9fda06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda069f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb9fda04370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb9fda04370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda046f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb9fd9f7840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb9fd9f7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f7bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb9fda01160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb9fda01160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb9fda014e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb9fd9f6060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb9fd9f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9f63e0"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9f6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb9fd9ee840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb9fd9ee840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb9fd9ed020"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb9fd9e5160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb9fd9e5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb9fd9e54e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb9fd9e5670"/>
        <function-ref name="write" scoped="" ref="0x7fb9fd9e5800"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb9fd9e5990"/>
        <function-ref name="readDone" scoped="" ref="0x7fb9fd9e5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb9fd9bba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb9fd9bba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb9fd9bbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb9fd9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb9fd9b9920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb9fd9b9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd9bb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd9bf990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd9bf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd9bfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb9fd9b4a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb9fd9b4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb9fd9b4da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb9fd9b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb9fd9b5940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb9fd9b5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd9b4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd9b5080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd9b5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd9b5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fd9bdaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fd9bdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fd9bde20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fd9b7020"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fd9b71b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fd9b7340"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fd9b74d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fd9b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd99d020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd99d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd99d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd99d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd99d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd99d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd99d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd99e220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd99e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd99e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd99e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd99e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd99ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd99ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd999e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd999e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd998210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd9983a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd998530"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd9986c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd998850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd99ca10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd99ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd99cd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd999020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd9991b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd999340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd9994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb9fd9978f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb9fd9978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb9fd997c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fb9fd997e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd999750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd999750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd999ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fd995170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd995170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd9954f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fd995680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fd995810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fb9fd998ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fd998ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fd998e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fd997020"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fd9971b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fd997340"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fd9974d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fd997660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fd99a690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fd99a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fd99aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fd99aba0"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fd99ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fd980020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fd9801b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fd980340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd97a950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd97a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd97acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd97daa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd97daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd97de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb9fd97a200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb9fd97a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd97a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd9753f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd9753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd975770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd976b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd976b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd975020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd979e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd979e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd9761e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fd975a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd975a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd975df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fd974020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fd9741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb9fd976570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb9fd976570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd9768f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd946020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd946020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd9463a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd9466b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd9466b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd946a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd946bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd946d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd945020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd9451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd94b8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd94b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd94bc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd94bdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd94a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd94a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd94a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb9fd94ac90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fd94ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd9490a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd949230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd9493c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd949550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd9496e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd94a5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd94a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd94a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd94cbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd94cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd94b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd94b1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd94b340"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd94b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd94b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb9fd949a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fd949a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd949dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb9fd947170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb9fd947170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd9474f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd947680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd947810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd9479a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd947b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd93dd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd93dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd93c180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd93c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd93c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd93c630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd93c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd93cb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd93cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd93b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fb9fd90ddb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fb9fd90ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd90c180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd90c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb9fd93b2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fd93b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fd93b670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fd93b800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fd93b990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fd93bb20"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fd93bcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fd93be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb9fd93fa20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb9fd93fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd93fda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd93e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd93e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd93e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd93e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb9fd939b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb9fd939b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd938020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd9381b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd938340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd9384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fd939170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd939170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd9394f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fd939680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fd939810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb9fd93f370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb9fd93f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd93f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb9fd9417b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb9fd9417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd941b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd941cc0"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd941e50"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd940020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd9401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb9fd9404d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb9fd9404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd940850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd9409e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd940b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd940d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd93f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb9fd93e840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb9fd93e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd93ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb9fd93d020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb9fd93d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd93d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd93d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd93d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd93d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd93d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb9fd8eddd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb9fd8eddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb9fd8ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb9fd8ec410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb9fd8ec410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb9fd8ec790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb9fd8ec920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb9fd8ecab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb9fd8ecc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb9fd8e1b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb9fd8e1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fd8e0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fd8e01b0"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd8e0340"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd8e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd8df860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8df860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8dfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8dfd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8de020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8de1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd8de690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd8de690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd8dea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd8e5ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd8e5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8e20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8e2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8e23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8e2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb9fd8e1080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fd8e1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb9fd8e1400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb9fd8e1590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb9fd8e1720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb9fd8e18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fb9fd8e0800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fb9fd8e0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fd8e0b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fd8e0d10"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fd8df020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fd8df1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fd8df340"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fd8df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb9fd8ded90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb9fd8ded90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb9fd8dd180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb9fd8dd310"/>
        <function-ref name="start" scoped="" ref="0x7fb9fd8dd4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb9fd8dd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd8e2980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd8e2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd8e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb9fd8d92d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb9fd8d92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb9fd8d9650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb9fd8d97e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb9fd8d9970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb9fd8d9b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb9fd8db580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb9fd8db580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb9fd8db900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb9fd8dba90"/>
        <function-ref name="isState" scoped="" ref="0x7fb9fd8dbc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb9fd8dbdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb9fd8da020"/>
        <function-ref name="forceState" scoped="" ref="0x7fb9fd8da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd8ccd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8ccd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8cb180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8cb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8cb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8cb630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd8cf350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd8cf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8cf6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8cf860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8cf9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8cfb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8cfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb9fd8cc020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb9fd8cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb9fd8cc3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb9fd8cc530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb9fd8cc6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb9fd8cc850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb9fd8cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fb9fd8c61c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb9fd8c61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fd8c6540"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fd8c66d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fd8c6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb9fd8ca410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb9fd8ca410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb9fd8ca790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb9fd8ca920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb9fd8caab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb9fd8cac40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb9fd8cadd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb9fd8a6690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb9fd8a6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd8a6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb9fd8a8860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb9fd8a8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8a8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8a8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8a6020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8a61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb9fd8a4610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb9fd8a4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb9fd8a4990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb9fd8a4b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb9fd8a4cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb9fd8a4e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb9fd8a3020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb9fd8a31b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb9fd8a3340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb9fd8a34d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb9fd8a3660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb9fd8a37f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb9fd8a3980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb9fd8a3b10"/>
        <function-ref name="sync" scoped="" ref="0x7fb9fd8a3ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb9fd8a2020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb9fd8a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb9fd8a98b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb9fd8a98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fd8a9c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fd8a9dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fd8a8020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fd8a81b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fd8a8340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fd8a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fb9fd8aace0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fb9fd8aace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fb9fd8a90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fb9fd8a11f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fb9fd8a11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb9fd8a1570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb9fd8a1700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb9fd8a1890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb9fd8a1a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fb9fd8a1bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb9fd8a1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fd8aba80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fd8aba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd8abe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd8aa020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8aa1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8aa340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd8aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fd8ae020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fd8ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd8ae3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8ae530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd8ae6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd8ae850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd8ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb9fd8addf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb9fd8addf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd8ac1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb9fd8a6ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb9fd8a6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb9fd8a50a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb9fd8a5230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb9fd8a53c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb9fd8a5550"/>
        <function-ref name="getPower" scoped="" ref="0x7fb9fd8a56e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb9fd8a5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fb9fd8a24d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb9fd8a24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb9fd8a2950"/>
        <function-ref name="changed" scoped="" ref="0x7fb9fd8a2ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb9fd8a2c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb9fd8a2e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb9fd8a5b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb9fd8a5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd8a4020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb9fd8a41b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb9fd8a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd8ad210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd8ad210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd8ad590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb9fd8a0d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb9fd8a0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb9fd89f0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb9fd89f270"/>
        <function-ref name="led1On" scoped="" ref="0x7fb9fd89f400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb9fd89f590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb9fd89f720"/>
        <function-ref name="get" scoped="" ref="0x7fb9fd89f8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb9fd89fa40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb9fd89e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb9fd89fbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb9fd89fd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fb9fd89e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fd8ac470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd8ac470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fd8ac7f0"/>
        <function-ref name="source" scoped="" ref="0x7fb9fd8ac980"/>
        <function-ref name="address" scoped="" ref="0x7fb9fd8acb10"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fd8acca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fd8ace30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fd8ab020"/>
        <function-ref name="type" scoped="" ref="0x7fb9fd8ab1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fd8ab340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fd8ab4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fd8ab660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fd8ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fb9fd8a00f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fb9fd8a00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb9fd8a0470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb9fd8a0600"/>
        <function-ref name="request" scoped="" ref="0x7fb9fd8a0790"/>
        <function-ref name="granted" scoped="" ref="0x7fb9fd8a0920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb9fd8a0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fd78e020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fd78e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd78e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd78e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd78e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd78e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd78e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fd78ec30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fd78ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd78d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd78d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd78d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd78d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd78d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fd78d8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd78d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fd78dc30"/>
        <function-ref name="source" scoped="" ref="0x7fb9fd78ddc0"/>
        <function-ref name="address" scoped="" ref="0x7fb9fd78c020"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fd78c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fd78c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fd78c4d0"/>
        <function-ref name="type" scoped="" ref="0x7fb9fd78c660"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fd78c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fd78c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fd78cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fd78cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb9fd78b020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb9fd78b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fd78b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fd78b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fd78b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fcc31b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fcc31b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fcc2f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fcc2f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fcc2f340"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fcc2f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fcc2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fcc2f8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fcc2f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fcc2fc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fcc2fdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fcc2e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fcc2e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fcc2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fcc2e590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fcc2e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fcc2e910"/>
        <function-ref name="source" scoped="" ref="0x7fb9fcc2eaa0"/>
        <function-ref name="address" scoped="" ref="0x7fb9fcc2ec30"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fcc2edc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fcc2d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fcc2d1b0"/>
        <function-ref name="type" scoped="" ref="0x7fb9fcc2d340"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fcc2d4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fcc2d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fcc2d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fcc2d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb9fcc2dc10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb9fcc2dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb9fcc2c020"/>
        <function-ref name="noAck" scoped="" ref="0x7fb9fcc2c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb9fcc2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb9fcc23640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fcc23640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fcc239c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fcc23b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fcc23ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fcc23e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fcc22030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fb9fcc222e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fcc222e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fcc22660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fcc227f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fcc22980"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fcc22b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fcc22ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb9fcc21020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fcc21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fcc213a0"/>
        <function-ref name="source" scoped="" ref="0x7fb9fcc21530"/>
        <function-ref name="address" scoped="" ref="0x7fb9fcc216c0"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fcc21850"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fcc219e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fcc21b70"/>
        <function-ref name="type" scoped="" ref="0x7fb9fcc21d00"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fcc20020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fcc201b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fcc20340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fcc204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd7f0930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd7f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd7f0cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd7f0e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd7ed020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd7ed1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd7ed340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb9fd7a3400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb9fd7a3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd7a37a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd7a3930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd7a3ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd7a3c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd7a3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb9fd7a44b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb9fd7a44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb9fd7a4850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd7a49e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd7a4b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fb9fd7a4d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb9fd7a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb9fd7a0720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fd7a0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd7a0aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd7a0c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd7a0dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd79f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd79f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fb9fd79f480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fb9fd79f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd79f800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd79f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fb9fd79fc60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fb9fd79fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb9fd79e020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb9fd79e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb9fd7a2060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd7a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fd7a23e0"/>
        <function-ref name="source" scoped="" ref="0x7fb9fd7a2570"/>
        <function-ref name="address" scoped="" ref="0x7fb9fd7a2700"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fd7a2890"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fd7a2a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fd7a2bb0"/>
        <function-ref name="type" scoped="" ref="0x7fb9fd7a2d40"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fd7a0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fd7a01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fd7a0340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fd7a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb9fd781020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb9fd781020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb9fd7813a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb9fd781530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb9fd7816c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb9fd781850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb9fd7819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb9fd788910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb9fd788910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb9fd788c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb9fd781c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb9fd781c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb9fd780020"/>
        <function-ref name="source" scoped="" ref="0x7fb9fd7801b0"/>
        <function-ref name="address" scoped="" ref="0x7fb9fd780340"/>
        <function-ref name="destination" scoped="" ref="0x7fb9fd7804d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb9fd780660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb9fd7807f0"/>
        <function-ref name="type" scoped="" ref="0x7fb9fd780980"/>
        <function-ref name="setType" scoped="" ref="0x7fb9fd780b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb9fd780ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb9fd780e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb9fd77f020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fb9ff28fc80" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb9ff28fa00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fb9ff28c2a0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb9ff28c020" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb9ff28f020" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb9ff28e520" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fb9ff32f190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fb9ff2b4e80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff2b4c00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fb9ff2b1020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff2b2c90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb9ff2ad490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff2aee50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9ff2ad1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb9ff2ae560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fb9ff2b05e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff2b0020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9ff2b0350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9ff298020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb9ff2995e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fb9ff299960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9ff299c90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb9ff294660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff294060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9ff294390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb9ff293790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb9ff297390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff297110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb9ff2958b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff2952d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb9ff295620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb9ff311e30" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff311e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb9ff30b720" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb9ff30a5d0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff311e30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9ff30a020" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb9ff30a340" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff311e30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb9ff28a670" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
              <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9ff29acc0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb9ff28a060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9ff28a390" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb9ff314cb0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff314cb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7fb9ff310e10" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fb9ff3105f0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7fb9ff30f840" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff314cb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb9ff30f5c0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff314cb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb9ff320690" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff320690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb9ff312020" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9ff320690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fb9ff31c7b0" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fb9ff31a020" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fb9ff31a800" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fb9ff3197d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fb9ff317020" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb9ff317830" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fb9ff319020" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb9ff3153f0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb9ff315170" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fb9ff31c020" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fb9ff318020" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fb9ff3187b0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fb9ff29ed30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff29eab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fb9ff2a8a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a8790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fb9ff304e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fb9ff2ab950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2ab6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fb9ff2a53a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a7d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb9ff2a5110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fb9ff2a6e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a6870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb9ff2a6bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fb9ff2a2810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a2590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fb9ff2a0b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a05e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fb9ff2a0900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb9ff2c61b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fb9ff2a3600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff2a3380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fb9ff29d2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb9ff29fcf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fb9ff29d060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fb9ff29b190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9ff32e350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9ff32e350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb9ff3261f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb9ff32ba60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fb9ff329820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb9ff329250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb9ff329590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fb9ff32aa60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fb9ff325270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fb9ff326980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb9ff32a270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fb9ff32c020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb9ff32ec40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fb9ff327820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb9ff327250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb9ff327590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fb9ff32cae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb9ff32c860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb9ff32b350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb9ff2551f0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fb9ff228420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fb9ff22b700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fb9ff229ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fb9ff22b020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fb9ff22be70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fb9ff22c0e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fb9ff22c7c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fb9ff2295c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fb9ff458020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fb9ff71dc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fb9ff1d6020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb9ff1d8cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fb9ff1da390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb9ff221ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb9ff220940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb9ff1d6890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fb9ff1d57b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fb9ff1d8560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb9ff1d5020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fb9ff1dab30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fb9ff1d9350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fb9ff1d9da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb9ff221ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb9ff220940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb9ff1d9b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb9ff221ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb9ff220940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb9ff1c80e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fb9ff1c5730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fb9ff1c54b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb9ff1c42e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb9ff1c4060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb9ff1c7ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb9ff1c73e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fb9ff1c8a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb9ff1c8810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb9ff1cf3e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fb9ff1cfd60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb9ff1cfae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fb9ff1ce790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb9ff1ce510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fb9ff1cc2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb9ff1cc020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb9ff1cc990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb9ff1e0810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb9ff1de2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fb9ff1de020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb9ff1df020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb9ff1e6aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb9ff1df760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb9ff1e39b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb9ff1e0120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb9ff1e3270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb9ff1e20e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fb9ff1e29f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb9ff1e2770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fb9ff1decb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fb9ff1dea30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb9ff1a29f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fb9ff37ba80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fb9ff37a1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fb9ff37b2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fb9ff594810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb9ff7d6020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fb9ff7d5020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fb9ff7d6790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fb9ff7ca270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fb9ff7caac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb9ff076e30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb9ff0755c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb9ff076020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb9ff074480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb9ff076720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb9ff075ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb9ff078120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb9ff0787f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb9ff04a020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb9ff04a770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fb9ff0452e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb9ff045060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb9ff04c770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb9ff049780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fb9ff045bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb9ff049020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb9ff04b820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fb9ff046020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fb9ff04b020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb9ff0508b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fb9ff047020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fb9ff0467c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fb9ff0477e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb9ff04c020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fedfcc40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fedfcc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb9fedf85a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fedf35d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fedf35d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb9fedf3810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb9fedee390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb9fedf03b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fb9fedef9d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb9fedef400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fb9fedef740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb9fedf0b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fb9fedeeb80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb9fedf1390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb9fedf1110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fedf3810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb9fedf1bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fed814f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fed814f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb9fed81730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fed81730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb9fed80070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fed81730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb9fed7f190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb9fed808f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb9fed7f8f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb9fec5e020" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb9fec5e830" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fb9fec52390" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fb9fec52110" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9fec582a0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb9fec58020" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fb9fec58ae0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb9fec579a0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb9fec573b0" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fb9fec57710" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fb9fec55840" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9fec45050" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fec48a60" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fec48da0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fb9fec42cc0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb9fec42a40" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb9fec40ae0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fec40510" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fec40850" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fb9fec41930" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fb9fec3f3b0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fec3ea60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fec3eda0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb9fec3f110" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fb9fec42270" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb9fec44950" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fec44020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fec44360" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb9fec446b0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fb9febeaae0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb9febe34e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb9febe0890" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb9fec09e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb9fec072b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb9febe6350" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fb9febe8350" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fb9febeb980" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb9febe8b40" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb9febe6db0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fb9febd7020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb9febd8750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fb9febcfd70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9febcfaf0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fb9febcf350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fb9feba9390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fb9febb5020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fb9febc4de0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec37190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb9fec379d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb9febc4b60" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec37190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb9fec379d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fb9febb70e0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fb9febbf2a0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec32110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb9fec32950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb9febbf020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec32110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb9fec32950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fb9febae750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fb9febaccf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fb9febc0830" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec34080"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb9fec34810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fb9febbfa90" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec32110"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb9fec32950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fb9febbb830" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fb9febbb5b0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fb9febbce40" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fb9febae020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fb9febc0040" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec34080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb9fec34810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb9febc1da0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec34080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb9fec34810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fb9febbdc80" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fb9febaee80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fb9febbc690" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fb9febbc410" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fb9febb8190" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fb9febb8910" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fb9febb0070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fb9febb2020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fb9febb6070" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fb9febb07b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fb9febb5800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fb9febad5c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb9febba070" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb9fec3a120"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fb9fec39810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fb9febadd60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fb9febaabd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fb9febbd4d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fb9febbd250" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fb9feba9d30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9feba9ab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fb9febc1600" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fec37190"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb9fec379d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fb9febb7850" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fb9febb3020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fb9febb1800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb9fec09e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb9fec072b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9febb1580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb9fec09e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb9fec072b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fb9febb2af0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb9fec1a020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb9fec1a440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9febb2870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb9fec1a020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb9fec1a440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fb9feba8730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fb9febac570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fb9febba880" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fb9febaa480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fb9febb3790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fb9febb6850" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb9feb31420" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb9feb31c70" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fb9fea8c020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fb9fea8c880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb9fea75420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb9fea5b270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fb9fea5a350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb9fea5e9c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb9fea5bae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb9fea5ac80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fb9fea4e110" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb9fea573f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb9fea4fe30" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb9fea573f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fb9fea50120" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fb9fea50c20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb9fea573f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb9fea509a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb9fea573f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb9fea4f580" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fb9fea573f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fb9fe9e2770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fb9fe997b30" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fb9fe980910" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe980340" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb9fe980680" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fb9fe97f190" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fb9fe981b50" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fb9fe9824e0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fb9fe97daa0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb9fe97d820" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fb9fe984270" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fb9fe97c5c0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe97c340" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fb9fe97d020" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe97f9c0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb9fe97fcf0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fb9fe984c40" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe9849c0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fb9fe9812f0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe982cd0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb9fe981060" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb9fe93ab10" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb9fe93a350" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fb9fe93cb70" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fb9fe93c2b0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb9fe8817b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb9fe87e2b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb9fe881020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fb9fe87fa60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fb9fe87f7e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fb9fe884820" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fb9fe87f020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb9fe71cbf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe71cbf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fb9fe715020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe71cbf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe718650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb9fe7189d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe71cbf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fb9fe718d30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fb9fe719b10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe71cbf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fe719520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe71cbf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fb9fe719880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fb9fe717d90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fb9fe717b10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb9fe714660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe714020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fb9fe7143d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fb9fe6ebd20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fb9fe6ebd20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fb9fe6e8730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fb9fe6ebd20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb9fe6e0390" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe6e0390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb9fe6e0c90" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb9fe6dfa20" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe6e0390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb9fe6df470" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb9fe6df790" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb9fe6e0390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fb9fe6cbdf0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fb9fe6d4aa0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fe6d4820" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fb9fe6d1020" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fe6d3990" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fb9fe6d3d00" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fb9fe6cca70" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fe6ce7e0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fb9fe6cc0d0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb9fe6cc450" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb9fe6cc7c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fb9fe6c8770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fb9fe6c80d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb9fe6c8460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fb9fe6cf3c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fe6d0150" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fb9fe6d09f0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb9fe6d0d80" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb9fe6cf110" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fb9fe6caad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe6ca850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fb9fe678ce0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb9fe678020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fe70c110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fb9fe70c5e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fe67b970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb9fe70d4e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb9fe70eb70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fb9fe67bd60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fe70c110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fb9fe70c5e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fb9fe67a110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fb9fe67a4b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb9fe67a860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb9fe67abd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fb9fe677d40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fb9fe677720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb9fe677ab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fb9fe675780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fb9fe674020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fb9fe65c120" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f3ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb9fe6f17a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fb9fe65a2a0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fe70c110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fb9fe70c5e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb9fe65a020" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fb9fe6578a0" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fb9fe656aa0" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fb9fe6562e0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fb9fe656060" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fb9fe65c940" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f0e20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb9fe6ef770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fb9fe65b760" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fe70c110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fb9fe70c5e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb9fe65b110" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fb9fe65b4d0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb9fe70c110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fb9fe70c5e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fb9fe655b40" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fb9fe661e40" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f3ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb9fe6f17a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fb9fe661bc0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f3ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb9fe6f17a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fb9fe65ad70" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb9fe65aaf0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fb9fe659840" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fb9fe6595c0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fb9fe6570e0" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fb9fe6552b0" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fb9fe654350" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fb9fe65e8c0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f0e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb9fe6ef770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fb9fe65e640" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb9fe6f0e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb9fe6ef770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fe2c31e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fe2c31e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb9fe2c3420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fe2c3420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fb9fe2bf2a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fe2c3420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2bf020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fb9fe2bd430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2bd1b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fb9fe2c0020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2c3d60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb9fe2bc740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fe2c3420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2bc150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fb9fe2bc4b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fe2c3420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fb9fe2b0990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2b0370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fb9fe2b0700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fb9fe2aeb30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2ae8b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fb9fe2b1ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fb9fe2b1120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fb9fe2b4e80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fb9fe2c65f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2c6370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fb9fe2c57d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2c5550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fb9fe2c2940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2c26c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fb9fe288980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe288700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fb9fe28bc30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe28b9b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fb9fe28c350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb9fe28c0d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fb9fe28e800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb9fe28e580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fb9fe28cd80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fb9fe28cb00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fb9fe289b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe289890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fb9fe27b2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fb9fe286c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fb9fe27b020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fb9fe297810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe297230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fb9fe297580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fb9fe293e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe293820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fb9fe293b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fb9fe296350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fba002a1110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe2960d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fb9fe294d30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe294ab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fb9fe2989c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe298740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fb9fe296e80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe296c00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fb9fe27fb30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe27f8b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fb9fe284bc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2845a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fb9fe284930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fb9fe283ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe283850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fb9fe283020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe2829c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fb9fe282d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fb9fe27eb70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe27e8f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fb9fe290780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe290500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9fe275dc0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe275800" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fe275b30" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb9fe26d620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe26d020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fe26d350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb9fe26c660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb9fe2702a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe270020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb9fe26f750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe26f170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb9fe26f4c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9fe24eca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe24e6e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fb9fe24ea10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb9fe24c020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fb9fe249930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb9fe24bab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb9fe249360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fe249690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb9fe24b2b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb9fe24cbb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb9fe24b020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fb9fe24d780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fb9fe24d500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fb9fe246b50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fb9fe246350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fb9fe23f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe241c90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fb9fe241490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fb9ff301960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fb9ff2ff390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe241190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fb9fe23e360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fb9ff2ffe90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fb9ff2fc7e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fe23e060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fb9fe2546e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fb9fe252840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fb9fe252070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fb9fe259e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fb9fe255e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fb9fe253020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fb9fe253840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fb9fe2556c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fb9fe239a70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fb9fe23a020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fb9fe2392a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fb9fe239020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fb9fe23a790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fb9fe243ca0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb9fe243a20" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fb9fe23b7a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb9fe23b520" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fb9fe1de640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fb9fe1de060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fb9fe1de3b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fb9fe1df020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fb9fe1e0690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fb9fe1e0020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fb9fe1e0400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fb9fe1e6a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb9fe1e67c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fb9fe1df8a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fb9fe1e2540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb9fe1e22c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fb9fe1e5b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fb9fe1e5910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fb9fe1dc8a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fb9fe1e16b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb9fe1e1430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fb9fe1dc070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fb9fe1e4350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb9fe2b3e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb9fe2ab5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fb9fe1e4b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fb9fe1e6020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fb9fe1e51f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fb9fe1e2ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb9fe1bfce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe1bfa60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb9fe1b87f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe1b8570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fb9fe1cfab0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb9fe2b3e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb9fe2ab5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fb9fe1c1860" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fb9fe1c07d0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fb9fe1c0070" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fb9fe1c1020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fb9fe1c5980" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb9ff2c6590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fb9fe1c5cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb9ff2c6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fb9fe1b4e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb9fe1bd020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb9fe1be110" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb9fe1be980" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe1becd0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb9fe1bc780" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb9fe1bd8f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb9fe1bc190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe1bc4e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fb9fe0a7bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb9fe0a6d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb9fe0a65c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb9fe0a6340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fb9fe0a7350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fb9fe0750e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fb9fe075930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fb9fe0741f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fb9fe04eb60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe04e580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe04e8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fb9fe048dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe048490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe0487e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb9fe048b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb9fe04a6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe04a0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe04a420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fb9fe04f730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb9ff3069e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe04f150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe04f4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb9fe04b2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fe04c930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb9fe04cc80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb9fe04b020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb9fe02edf0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb9fe02e480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb9fe02e810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fe02eb50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb9fe02a3c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb9fe02b6a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb9fe02ba30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fe02bd70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb9fe02a110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fb9fe032c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fb9fe032a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb9fdf95120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb9fec1a020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb9fec1a440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fb9fdf9dd60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fdf9dae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fb9fdf992a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fdf99020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fb9fdf9a610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb9fdf99d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fdf99ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fb9fdef29d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fb9fdf04420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fb9fdef9620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb9fdef93a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fb9fdf0daf0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fb9fdef6c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fb9fdefe5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fb9fdf05540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fb9fdf032d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb9fdf07500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fb9fdf07280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fb9fdf09a10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fb9fdf00070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fb9fdef7550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fb9fdef2270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fb9fdefac30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fb9fdeed350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fb9fdeea9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fb9fdf0c980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fb9fdf028b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fb9fdeff1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fb9fdf07dc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fb9fdf0f8c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fb9fdefa460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb9fdefa1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fb9fdf0f190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fb9fdef64d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fb9fdef1190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fb9fdeecb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fb9fdeea270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fb9fdef5b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fb9fdef18c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fb9fdef9db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fb9fdeef390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fb9fdf0b0e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fb9fdefd7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fb9fdef07b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fb9fdef4ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fb9fdeffde0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fb9fdeffb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fb9fdeeb2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fb9fdefba60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fb9fdef5420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fb9fdf0d390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb9febf4b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb9febf3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb9fdf0d110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb9febf4b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb9febf3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fb9fdf02190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fb9fdf092a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb9fdf09020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fb9fdf009d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb9fdf00750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fb9fdeefb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fb9fdf08b50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fb9fdf0b850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fb9fdefb2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fb9fdefb020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fba002a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fb9fdf0c270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fb9fdef0020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fb9fdef4350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fb9fdef7cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fb9fdefd020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fb9fdefed30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fb9fdf039f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fb9fdf05c80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fb9fdeeba40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fb9fdf083c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb9fdf08140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fb9fdeedb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fb9fdf04b50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fb9fdeec350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb9fdc8e5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb9fdc8e360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb9fdc7ab00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fb9fdc7a1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb9fdc7a530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fdc7a860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb9fdc79880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb9fdc792c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb9fdc795f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb9fdc61530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb9fdc61530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb9fdc61770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fdc61770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fb9fdc5f2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fdc61770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb9fdc5f060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb9fdc61770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fb9fdbfe580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb9fdbcb9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fb9fdbcb020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fb9fdbcb750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fb9fdbcc7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fb9fdbcc020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb9fdbd1d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fba002a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fb9fdbe33d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fba002a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fdbe3150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fb9fdbe43d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb9ff7da090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fdbe4150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb9fdbe0350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fdbe00d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb9fdbe1390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb9fdbe1110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb9ff2b6e00"/>
                <typename><typedef-ref name="message_t" ref="0x7fb9ff2b4450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fb9fd9bc5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb9fd9bc5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fb9fd9b92a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb9ff7d1c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb9fd9bc5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fb9fd9b9020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb9fd9bc5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
