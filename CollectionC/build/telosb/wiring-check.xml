<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe4b5695560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe4b55c41f0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe4b55c41f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe4b53f8590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b567b8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b53e7020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b568b770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b517f640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b517f640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SensorAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fe4b5670b70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fe4b4a94310"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fe4b4a94310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fe4b34b38d0"/></to>
    </wire>
    <wire loc="20:SensorAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7fe4b566f420"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe4b4a8c750"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe4b4a8c750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe4b33c7bd0"/></to>
    </wire>
    <wire loc="21:SensorAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7fe4b566ed00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fe4b4a92240"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fe4b4a92240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fe4b34b1790"/></to>
    </wire>
    <wire loc="24:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7fe4b5678500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fe4b4684920"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7fe4b4684920"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fe4b464e020"/></to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7fe4b5675d60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fe4b4681b80"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7fe4b4681b80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fe4b464d270"/></to>
    </wire>
    <wire loc="31:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b56105f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b3afac30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b3afac30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b2f9b8b0"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b56014e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3af98b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3af98b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b2f9a590"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b55f65a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b3afa020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b3afa020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b2f9cb60"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fe4b55f26f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b463ec00"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b463ec00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b460d2f0"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b55eedf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3af4910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b3af4910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b4638020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3c59dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3ce2b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3d03750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3d1f080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3e72620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3f62c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b449b7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3106020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b432c020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b45413c0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b4751150"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3392060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b49d6c60"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b341a1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b4d0b3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b34f7020"/></to>
    </wire>
    <wire loc="45:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b4fc5020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b516d400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe4b53f8c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe4b5b3b3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe4b5b3b3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe4b56e6140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe4b53f76c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b55c35a0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b55c35a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b55bf9b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b53f7dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe4b55bc0f0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fe4b559e020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe4b559e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b559b020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe4b55bc7d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b55bec70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fe4b55bb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b53c0c40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b559b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b5586cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe4b55946c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe4b55843d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe4b57be4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe4b5583680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fe4b55405a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b547d6d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fe4b552d020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b5475b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fe4b5536700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b5482160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fe4b551aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b545ccb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fe4b553eaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b5483480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fe4b5520020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b545c020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fe4b5517a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b5444cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fe4b55285a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b5455220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fe4b5541b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b54d29d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fe4b551ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b546a2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fe4b55223e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b546b610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fe4b552c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b546d220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fe4b5535700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b547a7a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fe4b5519a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b54532f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fe4b552bbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b54656d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fe4b553c890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b547bac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fe4b5551060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54e1c80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fe4b5520da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b5454610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fe4b55470c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b5484020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fe4b5527a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b544e6d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fe4b55306d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b548aa90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fe4b551ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b54637a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fe4b5538cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b548bde0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fe4b55211f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b5464ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fe4b5518a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b544b7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fe4b55290c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b545eb30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fe4b551fb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b544dac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fe4b551da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b5473cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fe4b551ea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b5444020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fe4b5524570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe4b5473020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fe4b5525020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe4b5446b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe4b54dfc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54df5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe4b54de2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe4b543fa90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe4b54de940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe4b543c260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5489930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54e1c80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b5487020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54df5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5481020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54e1c80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54807a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54df5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5479610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54e1c80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b5478c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54df5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe4b54d7c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe4b54d62f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe4b543c9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe4b54d6940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe4b543b240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5472b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54702f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5469160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54687a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5462610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b5461c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b545ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54582f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5452160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54517a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b544a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b5449c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b5443b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe4b54412f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b56e4040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fe4b56e0490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fe4b5ad23b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b53c0c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b53eb8d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe4b53df7b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fe4b53c3360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe4b53c3360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b51a8440"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe4b53e5980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fe4b53c26a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe4b53c26a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b5193020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe4b53e4ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fe4b53c19c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe4b53c19c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b518eb90"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b5197610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fe4b5368200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fe4b5368200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5244740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b51922f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fe4b5366200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fe4b5366200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b523f100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b518dde0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fe4b5364200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fe4b5364200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b523bd10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe4b53a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52de100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe4b5395020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52aed10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fe4b534b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a0d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fe4b5327570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5214100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fe4b5349580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b529b740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fe4b5391020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a4100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fe4b537c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5275e00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fe4b5358200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b521ed10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fe4b5343580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5292d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fe4b5333570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5231100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fe4b531e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5210d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe4b53a3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52cf100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fe4b5341580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b528c740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe4b539f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52c6740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fe4b538b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5296100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fe4b5376200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5266d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fe4b5362200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5236740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fe4b5351200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5210d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe4b53ad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52e8d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe4b5399020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52b8860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fe4b5385020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5287100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fe4b534d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a0d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fe4b532d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5223100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fe4b5320570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5210d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fe4b5339580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b524ad10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fe4b5380020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b527ea60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fe4b536c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b524e100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fe4b535c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5228740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fe4b532b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b521ed10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fe4b533f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5258d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe4b53a7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52dad10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe4b5393020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a9740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fe4b5360200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5231100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fe4b538f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a0d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fe4b537a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5270740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fe4b5356200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5219740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fe4b533b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b524e100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe4b53ba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52f16d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe4b539d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52c1100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fe4b5389020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5292d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fe4b5374200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5261740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fe4b5337580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5287100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fe4b5331570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b522dd10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fe4b5325570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5210d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fe4b5370200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5258d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fe4b5335580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5283d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe4b53ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52e3740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe4b5397020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52b2270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fe4b5382020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5283d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fe4b533d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5253740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fe4b5329570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5219740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fe4b537e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5279460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fe4b536a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b524ad10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fe4b535a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5223100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe4b53a5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52d4740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fe4b535e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b522dd10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe4b53a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52cbd10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fe4b538d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b529b740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fe4b5378200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b526b100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fe4b5353200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5214100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe4b53af020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52ec100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe4b539b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52bdd10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fe4b5387020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b528c740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fe4b5372200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b525c100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fe4b5345560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5296100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fe4b532f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5228740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fe4b5347580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5296100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fe4b536e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5253740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fe4b5322570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5214100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fe4b531c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b5236740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fe4b534f1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe4b52a4100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b516c1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b516c1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b4ff6690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b516d400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b5072760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe4b5164a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe4b4fe8cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b5072760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3619380"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe4b4ff1c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b5046cf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b503f1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b5071020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b5071020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b3612020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b4fdd020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b50ef020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b50ef020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b50b30f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b3619380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b35fda30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b360c780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b3619bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b3619bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b35fc340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b360e3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b50ef020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b35f94c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b36037b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b36037b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b35f7a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3601da0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3601da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b35f6da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b35ff0c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b35ff0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fe4b552d020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fe4b5524570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fe4b552bbe0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fe4b55211f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fe4b55290c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fe4b5520020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fe4b55285a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fe4b5520da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fe4b5527a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fe4b551fb80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fe4b5525020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fe4b551ea20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe4b50b0540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe4b50e6020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe4b50e6020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b50e10a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b50d22c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fe4b503c490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fe4b4febe80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc9c50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc6810"/></to>
    </wire>
    <wire loc="48:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7fe4b4fccdc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc8870"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc8870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b4d1c080"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe4b4fc1c40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe4b4fb3e10"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe4b4fb3e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe4b4d21440"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fe4b4d0e080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fe4b4fbe6e0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe4b4d21440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe4b4f42d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe4b4faae10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe4b4d22440"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe4b4d22440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe4b4f45670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4d20020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4d1c8e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4d1b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4d23020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4d23020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4f4cc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4d23c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b3565c70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b3565c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4debd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4f3e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4d20020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b355ed70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4f438e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe4b4f41e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3565020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b3565020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4deca60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4f3a710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b355e5d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b355e5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4defcd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4f438e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4eb5a20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fe4b4f42d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fe4b4eb3570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fe4b4f45670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fe4b4eb43e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4f4cc80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4eb6b10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4eb1020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4f3e1d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe4b4eb2230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fe4b4f41e50"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4eac290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4f3a710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fe4b4eb1690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b4e9c900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b4e9c900"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe4b4e94020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b4eacc90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b4e07110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b4e07110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe4b50e6020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b4ea9dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4e993b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4e90dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4e9c0d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4e98710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe4b4e8f6d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fe4b533d580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fe4b4e8d670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fe4b533b580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe4b4e8b670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fe4b5339580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fe4b4e89670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fe4b5335580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fe4b4e87670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fe4b5337580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b3564be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b4e9c900"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3564440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4de9590"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4de9590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d57400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4de8370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b355ed70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4debd50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4d58020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4d58020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b34f36c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4defcd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4de50d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4deca60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4d59210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4d59210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b34f4850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d57400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b34f2a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fe4b4dd30a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4e993b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4d57cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4de8370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4dd2020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d57400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d3c9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d587a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d587a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b34f3e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4d52b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4e9c0d0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b34f1400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4d57cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe4b34f1bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b34f7630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe4b34efde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b34be470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4d52b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b34bebd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b4d3c400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b34bd270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d3c9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b34bde80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d3b720"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fe4b4d0ba00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fe4b4d0e080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fe4b4a91900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fe4b34b1020"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fe4b4a93aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fe4b34b3160"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fe4b34b0e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4cb5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fe4b34ad7b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4cb42c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fe4b34afaf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4cb5020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fe4b34acc50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4cb42c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4cb42c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4c38c90"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4cb5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4c251d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4c251d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4ae6b60"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fe4b4c362f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fe4b4c24020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fe4b4c24020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c20330"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fe4b4c35480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fe4b4c23370"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fe4b4c23370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c1bd60"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fe4b4c34610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fe4b4c22730"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fe4b4c22730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe4b4af6a30"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b4c32240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b4aa51e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b4aa51e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b4c2d450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fe4b4c2b2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fe4b4c2cac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4ae6b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3418970"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c1f490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fe4b53a7020"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c19020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fe4b53a5020"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c15de0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fe4b53a3020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7fe4b4c08510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c16b60"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fe4b4c07830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c20330"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fe4b4c06b40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c1bd60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b4c0d080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b4bf95a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b4bf95a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b4af5610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fe4b4be7710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe4b4be7710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fe4b4bd3710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b4ade280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b4c0e3e0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ab1020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ae3e80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ae3e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3415c30"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ab22f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ae3270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ae3270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b3415020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fe4b4c04700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe4b4be8710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe4b4bd4710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe4b4bdd8a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fe4b4bca8a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe4b4be5710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fe4b4bd1710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe4b4be3710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fe4b4bcf710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe4b4bee710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fe4b4bd6710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe4b4bdf710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fe4b4bcc710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe4b4bdc8a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fe4b4bc98a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe4b4bea660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe4b4bd86b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe4b4be1710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fe4b4bce710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe4b4be9710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fe4b4bd5710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe4b4bde8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fe4b4bcb8a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe4b4be6710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fe4b4bd2710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe4b4be4710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fe4b4bd0710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe4b4bef710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fe4b4bd7710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe4b4be0710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fe4b4bcd710"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4ae49e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b3416850"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b3414590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4ae2770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe4b3414d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b341a7c0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe4b3411020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b33e00f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b4ade280"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b33e0b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b4aded00"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b33df270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ab22f0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b33dfe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ab1020"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fe4b33de680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fe4b33dee60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe4b33c7bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe4b4a50390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fe4b4688020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fe4b33c2840"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fe4b33c2840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fe4b475d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7fe4b4a8c020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7fe4b46948b0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33c54a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b4691300"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33bf5c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b4691300"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe4b4a44020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33c54a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b4a42450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b33b9730"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b33b9730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49db1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fe4b4a48640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b33baaf0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b33baaf0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fe4b4844d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33b69a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33c54a0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fe4b4a16e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fe4b33b8720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49da960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fe4b33b6060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fe4b49d8920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fe4b483b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b49e8cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fe4b33a6300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33b69a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe4b483a740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fe4b33a7060"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49da960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49d01d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fe4b49d7760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fe4b49ce020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe4b49d8920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fe4b49cf1d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49db1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49d3980"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b49e8cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b485e520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b485e520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b338f6c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fe4b49ce940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b485cb20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b485cb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b338ecb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b49c0650"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b48ed020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fe4b49b9140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7fe4b5360200"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fe4b49b7200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7fe4b535e200"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fe4b49b5200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7fe4b535c200"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fe4b49b3200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7fe4b535a200"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fe4b49b1200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7fe4b5358200"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fe4b49af200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7fe4b5356200"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fe4b49ad200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7fe4b5353200"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fe4b49ab200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7fe4b5351200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fe4b49cb4f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fe4b5551060"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fe4b49bed30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7fe4b5541b10"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fe4b49bc160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fe4b55470c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fe4b49bb530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7fe4b5538cf0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fe4b49ba3a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7fe4b553eaa0"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b485c3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b338e530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b338d610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b485b570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe4b338ddd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe4b3392670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe4b338c900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fe4b4844d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fe4b47daca0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fe4b47d6030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fe4b483b1d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe4b47d2020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fe4b483a740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fe4b47d6d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fe4b4835240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fe4b47d59c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fe4b4835e00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fe4b4832a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b47a14e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b47a14e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fe4b482c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b479a020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b479a020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fe4b48276c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe4b4794b40"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b4794b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b48349a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b48ed020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fe4b47d07f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b3350280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33bf5c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b47595e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33bf5c0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4755280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3353360"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b3353360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fe4b4844d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b4758c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b3352020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b3352020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49db1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fe4b475d1d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fe4b46dacb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b474bb10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b47595e0"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b46aa8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4755280"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fe4b46afbf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fe4b4751e70"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b474c1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b4758c90"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b4748020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b46e3970"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b46e3970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b333d020"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fe4b471f380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fe4b472daa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fe4b4727100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b46e3120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3344450"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b3344450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3328ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b3337780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b3344ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b3344ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b33275b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b33393d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b50ef020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3323710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b332d880"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b332d880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3322da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b332b020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b332b020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b33200c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b332a440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b332a440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fe4b3351020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49da960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fe4b3351910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fe4b49d8920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fe4b483b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b49e8cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fe4b32dd120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b3350280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fe4b483a740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fe4b32e0dc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fe4b46548f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7fe4b467a080"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fe4b467a080"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe4b46732e0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4655660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b467ee80"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b467ee80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4678140"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7fe4b464ce20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7fe4b4659b10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7fe4b4649130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fe4b4658ca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b46772f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fe4b5393020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b4673de0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fe4b4bdc8a0"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7fe4b4653480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b460d2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45e4020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b463bca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b460c320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b460c320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b3c1a020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe4b4638c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe4b46091d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe4b46091d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe4b3c19df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b46372b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b4607020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b4607020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b3c17a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b4634430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ded550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ded550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ddfa80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b4618430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45f3170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45f3170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45d2080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b4638020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b460b510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b460b510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3c19210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b462d350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b4606020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b4606020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b45d3020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4609800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4609800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3c18470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b4624660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b3de9660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b3de9660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b3ddbaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45e4020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b3c4db80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b46052c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3c158b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe4b45f11d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe4b3c16ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45fe0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45d4020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45d4020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45d2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b3c4d080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b45d3020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe4b3def6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe4b45e9430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe4b45d2b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe4b45d2b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe4b3c38020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b45f9170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b45d39d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b45d39d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b3deea70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fe4b3c0c0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b45e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c13860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b45df990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b45df990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b3cb5c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3c12690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b45d7840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b45d7840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b3cb4a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b3c0e4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b4018b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3c12ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3de4d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3c11b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3de0640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b3c10610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b4548b80"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b4548b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b45407e0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fe4b3c0d1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b45cc330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b45cc330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b45c77e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b3c0cd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b3c4db80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fe4b3c49d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b3deea70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b3ddf020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe4b3c38020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe4b3c36410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b3cb5c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b3caba20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b3c4d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b3c452d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fe4b45e0500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3cb55e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b3cb55e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fe4b3cab370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe4b3def6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe4b3de1c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b45e31d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3cb8be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b3cb8be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3cad7b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fe4b45d56f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3cb78e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b3cb78e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fe4b3cac4d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fe4b45e0bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fe4b3cb3170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fe4b3cb3170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fe4b3ca8020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b3cb4a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b3caa840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe4b3c49d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45ce390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45ce390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45cbe70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3cb26b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3d08220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b3d08220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3d06a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3d07020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3c3b350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b3c3b350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c38d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c38d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3c51ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b3c51ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c4a860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c4a860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b45cee80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b45cee80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b45c8990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3cb2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3c4e980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b3c4e980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3c49690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3c49690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3ce9aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b3ce9aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3ce5e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ce6950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b45cdb40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b45cdb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3e767c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe4b3e767c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe4b3e70020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b45c6640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4558720"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4558720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4541a30"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b45beb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b4553a60"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b4553a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b453e5b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe4b45c2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f716c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe4b45c2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b3e795c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe4b3e795c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b3e72ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f716c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f60320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe4b45b5d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe4b3f6e020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe4b3f6e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3f60bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fe4b45bcae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3f6ecb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3f6ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3f5f970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45b0020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b45aa660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe4b45b4020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe4b3d25a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe4b3d25a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe4b3d1ea20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fe4b45a5e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b3d27aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b3d27aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b45b47f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fe4b45a09e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fe4b45a1a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fe4b45a2a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fe4b4547e60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fe4b453d9b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fe4b453a7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4497220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4497220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4491af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe4b4536a40"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe4b4452e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe4b4452e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4444b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe4b4535ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fe4b444d6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe4b444d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4435d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fe4b4533020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fe4b444bce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fe4b444bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b442b710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fe4b4532400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fe4b4415d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fe4b4415d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe4b43f48a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe4b451e1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b40a4e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b40a4e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b451d2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fe4b409e7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b409e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b451d9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b409dae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b409dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b451fa40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b409fad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b409fad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b451f120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b409c160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b409c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4524be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4093870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4093870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4526550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4091880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4091880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4526e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b40900a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b40900a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4523710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4098e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4098e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4522020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4097670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4097670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b452e5a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fe4b4083500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b4083500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4527c00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4084ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4084ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b45228e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4095e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4095e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b45211c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fe4b4097e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b4097e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4521a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4096e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4096e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fe4b451cd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4071a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4071a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fe4b451c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b40459e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b40459e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b452caf0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b4018b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b453bde0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b4017d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b4017d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b3ffd310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fe4b4510820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fe4b4512940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b449b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b4491260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b4491260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b329c450"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4491af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b329cca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b329c450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b32943d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b329cca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b328d020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b32943d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3279ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b3287780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b3294c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe4b3294c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe4b32785b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b328a3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b447a080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b447a080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b4475cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3274710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b327e9d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b327e9d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3273da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b327c120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b327c120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b32710c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b327b440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b327b440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe4b44720f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe4b50e6020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fe4b4450090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b443f710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fe4b444f390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b443a1d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fe4b4499b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4448020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fe4b444c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4430b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b44472f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe4b53a9020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4443de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fe4b537c200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b443e930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fe4b53ab020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4439480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe4b53ba020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4433020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fe4b5374200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b442fde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fe4b537e200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b442a930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fe4b5376200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fe4b4415150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe4b440da20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe4b4414a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe4b43f18b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b43fc5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fe4b552c5a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fe4b43fb8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fe4b551ca20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b43f97a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fe4b537e200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b43f3480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe4b4be8710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b43f0480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe4b4bea660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe4b409e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4092880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe4b408a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe4b40910a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b407e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b4081500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b409d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe4b4087880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b4082500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b408c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe4b408e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b40a0a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43a9920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b409ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b409b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4085c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b409bbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4082ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe4b40870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4096670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b40880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe4b408a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b4088880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b4080ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b4081ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe4b408e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe4b40890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4083ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b4090880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b407ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b409f480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe4b4098670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4095670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b408b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b408b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b40920a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b40992f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe4b4098020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b409c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b4084500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe4b4080500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b408c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe4b4089880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b409ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b408f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b4099940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe4b408f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe4b40850a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b407d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43a4bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43a2020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43a2db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43a5810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43a1ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fe4b439c020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b4334770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b4334770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe4b439f400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b4311c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b4311c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b31a7770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe4b439d080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe4b40ca8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe4b40ca8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe4b31a6be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b4394680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b40c9020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b40c9020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b3182d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b439cdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fe4b438f120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b432cb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b3182d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b42fb850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe4b31a6be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe4b42fc020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b31a7770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b42ff430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b31a6440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b317ad90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b317ad90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b41a62c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe4b42fc020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe4b42a0a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b31822b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b42fc6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b42fc6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b429e060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b42f9a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b31815a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b316b5d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b42fd6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe4b42fa690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b317a140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b317a140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b41a7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b42f72a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b3173760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b3173760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b41a94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b42fd6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b42a0250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b42fb850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b429ec50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b42ff430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b42a1470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b429c3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b42f9a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe4b429d5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fe4b42fa690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4297480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b42f72a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fe4b429ca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b428d020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b428d020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe4b4287c70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b4297c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fe4b42952f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe4b42885e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b427e150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4289d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b427f780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe4b4250bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fe4b534d580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fe4b424eb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fe4b5349580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe4b424cb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fe4b5347580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fe4b424ab20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fe4b5341580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fe4b4248b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fe4b5343580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fe4b4255d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fe4b4187430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe4b3172020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b41a83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe4b3172630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe4b4193540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe4b4193540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fe4b4187430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b3178d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b428d020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b31785a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b41a6ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b41a6ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b419cc30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b41a58a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b316b5d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b41a62c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b419d850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b419d850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b31026c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fe4b41a94d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe4b41a2060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b41a7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b419ea80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b419ea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3103850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b41a83f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b41a2990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b419cc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3101a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b419a570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b41a58a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b41a1e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b419cc30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fe4b41a1060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4289d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fe4b41a1840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe4b42885e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b419c020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b3102e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b3100400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b419a570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe4b3100bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b3106630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe4b30fdde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fe4b4180250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe4b4287c70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe4b417cd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fe4b534d580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe4b417acb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fe4b5347580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4064c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe4b406fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4068b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4062670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe4b405be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe4b4062e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b404e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b40502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b406c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe4b4056670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b40512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b4066c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4065c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b405c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe4b405ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4061670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b4070760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b406baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b406a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4055a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b406a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4051ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b406cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe4b4057e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4065480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4066480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b406f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b4058e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe4b4059670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b4057670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b404fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b4050ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe4b405d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe4b4059e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4053ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b405f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b404ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b406f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe4b4068370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4064480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b405ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4061e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b405b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4063670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b406e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b4063e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b4069020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe4b4069cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b40532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4054ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b406b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b40542f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe4b404f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b405de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe4b4058670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b406eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b406c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b405fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b4069670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe4b405e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe4b4056e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b404d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4038c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe4b4042da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b403bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4035670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe4b402ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe4b4035e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b40212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b40242f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b4040120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe4b4029670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b40252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b403ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4039c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b402f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe4b4032e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4034670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b4043760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b403faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b403d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4028a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b403d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4025ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b4040dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe4b402be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4039480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b403a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b4042750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b402ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe4b402d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b402b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b4022ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b4024ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe4b4030670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe4b402de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4026ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b4033670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b4021ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b4042100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe4b403b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4038480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b402fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4034e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b402e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4036670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b4041450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b4036e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b403c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe4b403ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b40262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4027ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b403f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b40272f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe4b40222f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b4030e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe4b402c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b4041aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b4040770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b4033e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b403c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe4b4032670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe4b4029e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b40207a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3ffa880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3fef020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3fef020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3fe9140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fe4b3fe5bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fe4b3feec50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fe4b3feec50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fe4b3fd0150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fe4b3fe8530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f87a20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fe4b3fd5540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fe4b3fd6590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fe4b3fd6590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b3f859e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fcb950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fd2ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fd2ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fa9a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fe4b3fd09f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fe4b3fd5540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b3f98020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe4b3f93530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe4b3f93530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b3f8fe50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3f8b020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fe4b5551060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b3f84c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fe4b5399020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe4b3f6a990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe4b3f5e900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fe4b3f6c150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fe4b3f5d0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fe4b3f5dae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4497220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fe4b3f51500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fe4b4499b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe4b3f4a820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe4b4452e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fe4b3f49b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fe4b444c9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fe4b3f52880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fe4b4415150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe4b3f47020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3eaac30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b3eaac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3f47d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3ea88f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3ea88f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b3f446d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fe4b3ea72f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b3ea72f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b3f44de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fe4b3ea6cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b3ea6cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3f43530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3ea5370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3ea5370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3f43c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3ea4d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3ea4d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3f45e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3e9ec60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3e9ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3f46780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3e857a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3e857a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3f45550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3e8a2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3e8a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3f413e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3e9f480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3e9f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3f405e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3e9be50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3e9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3f3f020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3e9a670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3e9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b3f41e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fe4b3ea17b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b3ea17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3f3e9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3e87ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3e87ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b3f3f890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fe4b3e892f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b3e892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b3f3e130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fe4b3e89ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b3e89ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3f39d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3e79df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3e79df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3e71550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3f59d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3f58bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe4b3f57950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ded550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3f4cbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3de5480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3de5480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3dd78b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b3f3c6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b3e9dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe4b3ea6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b3ea0c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe4b3e93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe4b3e9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3e862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe4b3e8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b3e9fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b3e94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe4b3e97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b3e99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b3ea2370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b3e8da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b3ea2ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3e8aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b3ea4060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe4b3e90e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b3e9e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b3ea7940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b3e91e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe4b3e92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b3e90670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe4b3e95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe4b3e92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b3e8bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b3e98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3e86ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe4b3ea0490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b3e9d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b3e94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b3e99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b3e93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b3e9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b3ea6670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3ea1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe4b3ea1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b3e8b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b3e8cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3ea46b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b3e8c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe4b3e872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b3e95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe4b3e91670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b3ea59c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b3e98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe4b3e97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe4b3e8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fe4b3e75020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fe4b3e707c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe4b3e5b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe4b3e6f020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe4b4452e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fe4b3e6e380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fe4b4450090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fe4b3e6c6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fe4b444f390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe4b3e6ba50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe4b4414a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe4b3e6a6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b3d75520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe4b3d75520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3e69530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3d52480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3d52480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3e68ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3d6f060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3d6f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b3e683a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fe4b3d6fd00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe4b3d6fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3e67330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3e661e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe4b3e64d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ded550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b3e66b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b4548b80"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3e5f3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3d67840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3d67840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3e5fcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3d66060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3d66060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3e60b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3d6eae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3d6eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3e5d6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3d53c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3d53c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b3e5e590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fe4b3d55c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe4b3d55c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b3e5ee00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fe4b3d54480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe4b3d54480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3e5c020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3d55480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3d55480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b3e5c8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fe4b3d74c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe4b3d74c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fe4b3e4f9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe4b3d82020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe4b447a080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fe4b3dd53b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe4b3d84cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe4b3dd46e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe4b5164a80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe4b3d7d0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b3d68620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe4b3d73940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b3d6b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe4b3d5e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe4b3d66840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3d71cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe4b3d5a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3d56c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe4b3d6a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3d69620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b3d60060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe4b3d62840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b3d64060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3d742b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3d6f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b3d59480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b3d6e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b3d709c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe4b3d5b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b3d6ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3d6be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b3d732f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b3d5c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe4b3d5d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b3d5b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3d53480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe4b3d61060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe4b3d5d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b3d56480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b3d63060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe4b3d6de00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b3d69e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b3d60840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b3d64840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b3d5e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b3d67060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe4b3d71020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe4b3d6d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe4b3d57c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b3d57480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b3d59c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe4b3d54c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b3d61840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe4b3d5c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe4b3d71670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b3d70370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b3d63840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe4b3d6d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe4b3d62060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe4b3d5a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3d50160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fe4b3d23920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fe4b3d1f940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe4b3d29990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe4b3d1f080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3d03e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe4b3d07020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b3d01ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b3d04690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b3d04690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe4b3d008f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe4b3d25a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3cff170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe4b3ce6200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe4b3ce2570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ce13f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ce6950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3ce1a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe4b3ca8d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe4b3cb26b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ca7b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3cb2020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3ca62f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3ca5170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe4b3ca5b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b3c58410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fe4b3c79db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fe4b3c4c800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b3c47580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe4b3c47580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b3c321c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b45d3020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b2f9cb60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b2f8f640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b2f9b8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b46372b0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b2f9a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe4b3af7020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe4b2f99c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe4b2f99c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b462d350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b2f8e2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3b5e930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b2f8d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe4b3b5e930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe4b3b104b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe4b3b0e400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe4b463bca0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3b0d060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b3b0c720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b46372b0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fe4b3b0b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fe4b3b0bc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe4b3aed020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe4b46372b0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3aedc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:../../../tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:../../../tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:../../../tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.TempSensor" loc="45(SensorAppC.TempSensor):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.TempSensor.SensirionSht11ReaderP" loc="45(SensorAppC.TempSensor.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor" loc="40(SensorAppC.LightSensor):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC" loc="47(SensorAppC.LightSensor.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC" loc="47(SensorAppC.LightSensor.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fe4b5512230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fe4b55125d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fe4b5512980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fe4b5512d00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fe4b55110d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fe4b5511440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fe4b55117d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fe4b5511b60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fe4b550f020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fe4b54d4950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fe4b54d4d20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fe4b53179f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fe4b5317da0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fe4b53161a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fe4b5316550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fe4b53168c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe4b51249c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe4b51249c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe4b50e0120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe4b50e0120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe4b50cfa50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe4b50cfa50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe4b50cc290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe4b50cc290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe4b50cc680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe4b50cc680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe4b50cce60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe4b50cce60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe4b50ca260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fe4b50caa60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fe4b50caa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe4b50f0ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe4b50f0ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe4b50a92d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe4b50a92d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe4b50a96c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe4b50a96c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe4b50a8020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe4b50a8020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe4b50a83f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b506a4f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b506a4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b5039d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b5039d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe4b50360d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b4fe61f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b4fe61f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe4b4dd09b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fe4b4dc3910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fe4b4da7d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe4b48b6850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fe4b48ae3b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fe4b46dd660" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fe4b46dd9b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b46dd9b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b3fa6020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b3fa6020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe4b3fa67b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b3fa67b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe4b3b82660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe4b3b79360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe4b3b720d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fe4b3b57c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe4b3af3330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7fe4b55f26f0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fe4b55f26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b55f2a70"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b55f2c00"/>
        <function-ref name="start" scoped="" ref="0x7fe4b55f2d90"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b5600020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe4b5695560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe4b5695560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe4b56958e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe4b56105f0" loc="28:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b56105f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5610970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b5610b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b5610c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b5610e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b566a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe4b55f65a0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b55f65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b55f6920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b55f6ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b55f6c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b55f6dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b561d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7fe4b566ed00" loc="24:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7fe4b566ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b566d940"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b566ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fe4b55eedf0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b55eedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b55f7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7fe4b5675d60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fe4b5675d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fe4b5679e00"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b5679980"/>
        <function-ref name="notify" scoped="" ref="0x7fe4b5677300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7fe4b5678500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fe4b5678500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b567a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b567b8d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b567b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b567bc50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b567bde0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b5687020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b56871b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b5687340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b56874d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b5687660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b5687ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b56877f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b5687980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b5687b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fe4b5670b70" loc="22:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7fe4b5670b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b5672790"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b5672c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe4b56014e0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b56014e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b5601860"/>
        <function-ref name="source" scoped="" ref="0x7fe4b56019f0"/>
        <function-ref name="address" scoped="" ref="0x7fe4b5601b80"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b5601d10"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b5669020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b56691b0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b5669340"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b56694d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b5669660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b56697f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b5669980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x7fe4b566f420" loc="23:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7fe4b566f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b566e090"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b566e510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b568b770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b568b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b5689c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b56961e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b5689020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b5696ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b5688590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b5688110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b5696660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b5697390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b5689630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b5697860"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b5697d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe4b55c16a0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b55c16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55c1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe4b55c41f0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe4b55c41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe4b55c4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b55c35a0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b55c35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55c3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fe4b55bc7d0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fe4b55bc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55bcb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b55bf9b0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b55bf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55bfd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fe4b55bc0f0" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe4b55bc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55bc470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fe4b55bb020" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fe4b55bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b55bec70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b55bec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fe4b559e020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe4b559e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b559e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe4b55946c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe4b55946c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe4b559a660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe4b5594bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe4b5594d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe4b559a020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe4b5594a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe4b559a1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe4b559a340"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe4b559a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b559b020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b559b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b559b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe4b55843d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe4b55843d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe4b5583340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe4b55848e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe4b5584a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe4b5584c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe4b5584750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe4b5584d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe4b5583020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe4b55831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fe4b5583680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe4b5583680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe4b5583a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b5586cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b5586cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b55840a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fe4b55405a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fe4b55405a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5540920"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5540ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5540c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5540dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b553f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b553f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b553f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b553f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b553f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fe4b552d020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fe4b552d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b552d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b552d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b552d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b552d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b552d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b552db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b552dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b552c020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b552c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fe4b5536700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fe4b5536700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5536a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5536c10"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5536da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5535020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55351b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5535340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fe4b551aa20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fe4b551aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5519020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b55191b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5519340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55194d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5519660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fe4b553eaa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fe4b553eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b553ee20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b553c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b553c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b553c340"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b553c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fe4b5520020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fe4b5520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b55203a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5520530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b55206c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5520850"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b55209e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fe4b5517a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fe4b5517a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5517da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5516020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b55161b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5516340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55164d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5516660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fe4b55285a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fe4b55285a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5528920"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5528ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5528c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5528dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5527020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b55271b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5527340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b55274d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5527660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fe4b5541b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fe4b5541b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5548020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b55481b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5548340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b55484d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5548660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b55487f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5548980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5548b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5548ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fe4b551ca20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fe4b551ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b551b020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b551b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b551b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b551b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b551b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fe4b55223e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fe4b55223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5522760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b55228f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5522a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5522c10"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5522da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fe4b552c5a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fe4b552c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b552ca20"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b552cbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b552cd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b552b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b552b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b552b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b552b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b552b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b552b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fe4b5535700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fe4b5535700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5535a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5535c10"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5535da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b552f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b552f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b552f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fe4b5519a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fe4b5519a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5519da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5518020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b55181b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5518340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55184d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5518660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fe4b552bbe0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fe4b552bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b552a020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b552a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b552a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b552a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b552a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b552a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b552a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b552ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b552aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fe4b553c890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fe4b553c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b553cc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b553cda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5537020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b55371b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5537340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fe4b5551060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fe4b5551060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b55513e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5551570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5551700"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5551890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5551a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5551bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5551d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5550020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b55501b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5550340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b55504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fe4b5520da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fe4b5520da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b551f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b551f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b551f630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b551f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fe4b55470c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fe4b55470c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5547440"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b55475d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5547760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b55478f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5547a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5547c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5547da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5540020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b55401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fe4b5527a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fe4b5527a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5527dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5526020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b55261b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5526340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b55264d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5526660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b55267f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5526980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5526b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fe4b55306d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fe4b55306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5530a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5530be0"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5530d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5536020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55361b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5536340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fe4b551ba20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fe4b551ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b551a020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b551a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b551a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b551a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b551a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fe4b5538cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fe4b5538cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b553e0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b553e230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b553e3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b553e550"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b553e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fe4b55211f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fe4b55211f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5521570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5521700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5521890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5521a20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5521bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fe4b5518a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fe4b5518a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5518da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5517020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b55171b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5517340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b55174d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5517660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fe4b55290c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fe4b55290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5529440"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b55295d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5529760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b55298f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5529a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5529c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5529da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5528020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b55281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fe4b552f6c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fe4b552f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b552fa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b552fbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b552fd60"/>
        <function-ref name="get" scoped="" ref="0x7fe4b552e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b552e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b552e340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b552e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b552e660"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b552e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b552e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b552eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fe4b551fb80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fe4b551fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b551e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b551e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b551e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b551e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fe4b551da20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fe4b551da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b551c020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b551c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b551c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b551c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b551c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fe4b551ea20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fe4b551ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b551d020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b551d1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b551d340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b551d4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b551d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fe4b5524570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fe4b5524570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b55248f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5524a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5524c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5524da0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5522020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fe4b5525020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fe4b5525020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b55253a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5525530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b55256c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5525850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b55259e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5525b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5525d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5524020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b55241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe4b54de2f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe4b54de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54de670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe4b54dfc20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe4b54dfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe4b54de940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe4b54de940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54decc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe4b54df5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54df5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54df950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b54e1c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b54e1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b54e00a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b54e0230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b54e03c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54e0550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b54e06e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54e0870"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b54e0a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54e0b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b54e0d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b54df020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b54df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe4b54d62f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe4b54d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54d6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe4b54d7c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe4b54d7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe4b54d6940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe4b54d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54d6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe4b54d75b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54d75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b54dac80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b54dac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b54d80a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b54d8230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b54d83c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54d8550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b54d86e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54d8870"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b54d8a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54d8b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b54d8d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b54d7020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b54d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b548aa90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b548aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b548ae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5489020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b54891b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5489340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54894d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5489660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b54d29d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b54d29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b54d2d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b548b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b548b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b548b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b548b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b548b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b548b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b548b980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b548bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b5487020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b5487020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b54873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b548bde0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b548bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b548a180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b548a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b548a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b548a630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b548a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5489930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5489930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5489cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5489e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5488020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54881b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5488340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54884d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5488660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54887f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5488980"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5488b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5488ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b5482160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b5482160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b54824e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5482670"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5482800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5482990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5482b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5482cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b5484020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b5484020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b54843a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5484530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b54846c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5484850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b54849e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5484b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5484d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5483020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b54831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54807a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54807a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5480b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b5483480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b5483480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5483800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5483990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5483b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5483cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5483e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5481020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5481020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b54813a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5481530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b54816c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5481850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b54819e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5481b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5481d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5480020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b54801b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5480340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b54804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b547a7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b547a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b547ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b547acb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b547ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5479020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54791b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5479340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b547d6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b547d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b547da50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b547dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b547dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b547b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b547b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b547b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b547b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b547b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b547b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b5478c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b5478c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5477020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b547bac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b547bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b547be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b547a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b547a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b547a340"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b547a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5479610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5479610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5479990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5479b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5479cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5479e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5478020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54781b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5478340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54784d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5478660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b54787f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5478980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b5473cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b5473cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b54720a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5472230"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b54723c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5472550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54726e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5472870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b5475b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b5475b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5474020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b54741b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5474340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b54744d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5474660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b54747f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5474980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5474b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5474ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54702f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5470670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b5473020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b5473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b54733a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5473530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b54736c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5473850"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b54739e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5472b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5472b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5471020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b54711b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5471340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54714d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5471660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54717f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5471980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5471b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5471ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5471e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5470020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b546a2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b546a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b546a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b546a800"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b546a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b546ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b546acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b546ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b546d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b546d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b546d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b546d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b546d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b546da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b546dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b546dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b546b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b546b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b546b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54687a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54687a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5468b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b546b610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b546b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b546b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b546bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b546bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b546be40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b546a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5469160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5469160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b54694e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5469670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5469800"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5469990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5469b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5469cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5469e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5468020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b54681b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5468340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b54684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b54637a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b54637a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5463b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5463cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5463e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5462020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54621b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5462340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b54656d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b54656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5465a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5465be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5465d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5464020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b54641b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5464340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b54644d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5464660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b54647f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b5461c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b5461c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b5464ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b5464ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5464e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5463020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b54631b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5463340"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b54634d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5462610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5462610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5462990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5462b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5462cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5462e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5461020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54611b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5461340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54614d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5461660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b54617f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5461980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b545ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b545ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b545a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b545a230"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b545a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b545a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b545a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b545a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b545eb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b545eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b545d020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b545d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b545d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b545d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b545d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b545d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b545d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b545db10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b545dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54582f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5458670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b545c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b545c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b545c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b545c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b545c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b545c850"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b545c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b545ab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b545ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5459020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b54591b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5459340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54594d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5459660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54597f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5459980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5459b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5459ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5459e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b54532f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b54532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5453670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5453800"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b5453990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5453b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5453cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5453e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b5455220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b5455220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b54555a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5455730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b54558c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5455a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5455be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5455d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5454020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b54541b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5454340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54517a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5451b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b5454610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b5454610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b5454990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5454b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b5454cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5454e40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5453020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5452160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5452160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b54524e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b5452670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5452800"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5452990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5452b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5452cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5452e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5451020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b54511b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5451340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b54514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b544b7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b544b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b544bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b544bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b544be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b544a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b544a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b544a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b544e6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b544e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b544ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b544ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b544ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b544d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b544d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b544d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b544d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b544d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b544d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b5449c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b5449c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5448020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b544dac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b544dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b544de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b544b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b544b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b544b340"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b544b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b544a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b544a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b544a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b544ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b544acb0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b544ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5449020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54491b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5449340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54494d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5449660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b54497f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5449980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b5444cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b5444cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b54430a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b5443230"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b54433c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b5443550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b54436e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b5443870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe4b5446b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe4b5446b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5445020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b54451b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5445340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b54454d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5445660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b54457f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5445980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b5445b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5445ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe4b54412f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe4b54412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b5441670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe4b5444020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe4b5444020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b54443a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b5444530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b54446c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b5444850"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b54449e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b5443b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5443b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5442020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b54421b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5442340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b54424d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5442660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b54427f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5442980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b5442b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5442ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b5442e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5441020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fe4b543b240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe4b543b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b543b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fe4b543fa90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe4b543fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b543fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fe4b543c260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe4b543c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b543c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fe4b543c9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe4b543c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b543cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fe4b57be4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe4b57be4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe4b57be840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fe4b5ad23b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe4b5ad23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe4b5ad2730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe4b5ad28c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe4b5ad2a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fe4b58fabc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fe4b58fabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe4b5a36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fe4b559cb40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe4b559cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe4b5403b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe4b54031b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe4b5403340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe4b54034d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe4b5403020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe4b5403660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe4b54037f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe4b5403980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe4b53f7dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe4b53f7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b53f6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe4b53f8590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe4b53f8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe4b53f8910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fe4b53f76c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fe4b53f76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b53f7a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fe4b53f8c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe4b53f8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b53f7020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe4b53f71b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe4b53f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe4b5baa410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b5baa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b5baa790"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b5baa920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe4b5b3b3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe4b5b3b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b5b3b720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe4b5b3b8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe4b5b3ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe4b56e4040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe4b56e4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b56e43c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b56e4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fe4b56e0490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe4b56e0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe4b56e0810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe4b56e09a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe4b56e0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe4b56e6140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe4b56e6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b56e64c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe4b56e6650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe4b56e67e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe4b55c5590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b55c5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b55c5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b55c5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b55c5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b55c5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b53ec020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53ec1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b53ec340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b53ec980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53ec4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b53ec660"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b53ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fe4b53df7b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe4b53df7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53dfb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53dfcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53dfe50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53e5020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53e5340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53e54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b53eb8d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b53eb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b53ebc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fe4b53e5980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe4b53e5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53e5d00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53e4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53e41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53e4340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53e44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53e4660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53e47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53e4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe4b53e7020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b53e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b53e73a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b53e7530"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b53e76c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b53e7850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b53e79e0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53e7b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b53e7d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b53e64d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53e6020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b53e61b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b53e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fe4b53e4ca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe4b53e4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53de0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53de230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53de3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53de550"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53de6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53de870"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53dea00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53deb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fe4b53c3360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe4b53c3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53c36e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53c3870"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53c3a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53c3b90"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53c3d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53c2020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fe4b53c26a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe4b53c26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53c2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53c2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53c2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53c1020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53c11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53c1340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53c14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53c1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fe4b53c0c40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b53c0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b53bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fe4b53c19c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe4b53c19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53c1d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53c01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53c0340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53c0660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53c07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53c0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe4b53a9020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe4b53a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53a9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53a96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53a9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53a99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53a9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53a9d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53a8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53a81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53a8340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53a84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53a8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53a87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53a8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe4b5395020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe4b5395020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5395530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53956c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5395850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5395b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5395d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5394020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5394340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5394660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5394a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5394c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fe4b534b560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fe4b534b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b534b8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b534ba70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b534bc00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b534bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b534a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b534a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b534a340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b534a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b534a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b534a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b534a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b534ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b534aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5349020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fe4b5327570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fe4b5327570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53278f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5327a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5327c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5327da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5326020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5326340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5326660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53267f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5326980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5326b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5326ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5325020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fe4b5349580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fe4b5349580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5349900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5349a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5349c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5349db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5348020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5348340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53484d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5348660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53487f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5348980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5348b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5348ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5347020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fe4b5391020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fe4b5391020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5391530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53916c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5391850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53919e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5391b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5391d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5390020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5390340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5390660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5390a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5390c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fe4b537c200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fe4b537c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b537c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b537c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b537c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b537ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b537cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b537cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b537b020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b537b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b537b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b537b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b537b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b537b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b537b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b537bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b537bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fe4b5368200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fe4b5368200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5368580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5368710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53688a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5368a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5368bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5368d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5367020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5367340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53674d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5367660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53677f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5367980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5367c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5367da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fe4b5358200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fe4b5358200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5358580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5358710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53588a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5358a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5358bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5358d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5357020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5357340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53574d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5357660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53577f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5357980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5357c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5357da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fe4b5343580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fe4b5343580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5343900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5343a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5343c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5343db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5342020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5342340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53424d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5342660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53427f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5342980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5342b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5342ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5341020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fe4b5333570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fe4b5333570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53338f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5333a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5333c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5333da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5332020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5332340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5332660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53327f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5332980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5332b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5332ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5331020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fe4b531e580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fe4b531e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b531e900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b531ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b531ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b531edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b531d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b531d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b531d340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b531d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b531d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b531d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b531d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b531db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b531dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b531c020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b531c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe4b53a3020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe4b53a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53a3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53a36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53a3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53a39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53a3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53a3d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53a2340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fe4b5341580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fe4b5341580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5341900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5341a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5341c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5341db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5340020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5340340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53404d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5340660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53407f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5340980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5340b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5340ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b533f020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b533f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe4b539f020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe4b539f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b539f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b539f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b539f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b539f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b539f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b539fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b539fd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b539e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b539e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b539e340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b539e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b539e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b539e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b539ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b539ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fe4b538b020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fe4b538b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b538b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b538b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b538b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b538b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b538b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b538bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b538bd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b538a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b538a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b538a340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b538a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b538a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b538a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b538aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b538ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fe4b5376200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fe4b5376200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5376580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5376710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53768a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5376a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5376bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5376d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5375020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53751b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5375340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53754d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5375660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53757f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5375980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5375c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5375da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fe4b5362200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fe4b5362200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5362580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5362710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53628a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5362a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5362bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5362d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5361020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5361340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53614d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5361660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5361980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5361c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5361da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fe4b5351200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fe4b5351200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5351580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5351710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53518a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5351a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5351bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5351d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5350020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53501b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5350340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53504d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5350660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53507f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5350980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5350c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5350da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe4b53ad020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe4b53ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53ad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53ad530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53ad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53ad850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53ad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53adb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53add00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53ac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53ac340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53ac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53ac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53aca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53acc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe4b5399020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe4b5399020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53994a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5399630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53997c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5399950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5399ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5399c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5399e00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5398020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5398340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5398660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5398a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5398c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fe4b5385020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fe4b5385020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5385530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53856c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5385850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53859e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5385b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5385d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5384020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5384340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5384660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5384a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5384c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fe4b534d580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fe4b534d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b534d900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b534da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b534dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b534ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b534c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b534c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b534c340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b534c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b534c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b534c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b534c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b534cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b534cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b534b020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b534b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fe4b532d570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fe4b532d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b532d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b532da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b532dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b532dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b532c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b532c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b532c340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b532c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b532c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b532c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b532c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b532cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b532cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b532b020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b532b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fe4b5320570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fe4b5320570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53208f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5320a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5320c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5320da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b531f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b531f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b531f340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b531f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b531f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b531f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b531f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b531fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b531fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b531e020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b531e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fe4b5339580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fe4b5339580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5339900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5339a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5339c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5339db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5338020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5338340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53384d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5338660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53387f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5338980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5338b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5338ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5337020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fe4b5380020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fe4b5380020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53805a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5380730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53808c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5380a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5380be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5380d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b537f020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b537f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b537f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b537f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b537f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b537f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b537f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b537fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b537fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fe4b536c200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fe4b536c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b536c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b536c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b536c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b536ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b536cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b536cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b536b020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b536b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b536b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b536b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b536b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b536b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b536b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b536bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b536bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fe4b535c200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fe4b535c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b535c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b535c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b535c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b535ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b535cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b535cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b535b020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b535b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b535b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b535b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b535b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b535b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b535b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b535bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b535bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fe4b532b570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fe4b532b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b532b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b532ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b532bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b532bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b532a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b532a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b532a340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b532a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b532a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b532a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b532a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b532ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b532aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5329020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fe4b533f570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fe4b533f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b533f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b533fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b533fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b533fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b533e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b533e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b533e340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b533e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b533e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b533e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b533e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b533eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b533eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b533d020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b533d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe4b53a7020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe4b53a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53a73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53a7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53a76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53a7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53a79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53a7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53a7d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53a61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53a6340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53a64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53a6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53a67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53a6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe4b5393020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe4b5393020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5393530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53936c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5393850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53939e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5393b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5393d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5392020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5392340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5392660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5392a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5392c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fe4b5360200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fe4b5360200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5360580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5360710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53608a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5360a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5360bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5360d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b535f020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b535f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b535f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b535f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b535f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b535f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b535f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b535fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b535fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fe4b538f020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fe4b538f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b538f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b538f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b538f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b538f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b538f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b538fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b538fd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b538e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b538e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b538e340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b538e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b538e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b538e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b538ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b538ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fe4b537a200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fe4b537a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b537a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b537a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b537a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b537aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b537abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b537ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5379020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5379340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53794d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5379660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53797f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5379980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5379c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5379da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fe4b5366200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fe4b5366200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5366580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5366710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53668a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5366a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5366bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5366d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5365020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53651b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5365340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53654d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5365660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5365980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5365c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5365da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fe4b5356200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fe4b5356200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5356580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5356710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53568a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5356a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5356bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5356d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5355020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5355340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53554d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5355660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53557f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5355980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5355c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5355da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fe4b533b580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fe4b533b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b533b900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b533ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b533bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b533bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b533a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b533a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b533a340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b533a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b533a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b533a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b533a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b533ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b533aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5339020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe4b53ba020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe4b53ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53ba530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53ba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53ba850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53ba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53bab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53bad00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53b9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53b91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53b9340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53b94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53b9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53b97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53b9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe4b539d020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe4b539d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b539d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b539d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b539d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b539d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b539d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b539db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b539dd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b539c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b539c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b539c340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b539c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b539c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b539c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b539ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b539cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fe4b5389020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fe4b5389020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5389530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53896c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5389850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53899e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5389b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5389d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5388020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5388340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5388660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5388a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5388c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fe4b5374200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fe4b5374200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5374580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5374710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53748a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5374a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5374bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5374d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5373020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53731b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5373340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53734d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5373660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53737f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5373980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5373c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5373da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fe4b5337580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fe4b5337580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5337900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5337a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5337c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5337db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5336020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5336340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5336660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53367f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5336980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5336b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5336ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5335020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fe4b5331570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fe4b5331570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53318f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5331a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5331c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5331da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5330020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5330340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5330660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53307f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5330980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5330b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5330ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b532f020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b532f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fe4b5325570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fe4b5325570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53258f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5325a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5325c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5325da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5323020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5323340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5323660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53237f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5323980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5323b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5323ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5322020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fe4b5370200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fe4b5370200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5370580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5370710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53708a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5370a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5370bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5370d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b536f020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b536f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b536f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b536f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b536f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b536f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b536f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b536fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b536fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fe4b5335580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fe4b5335580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5335900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5335a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5335c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5335db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5334020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5334340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5334660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53347f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5334980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5334b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5334ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5333020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe4b53ab020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe4b53ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53ab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53ab530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53ab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53abd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53aa340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe4b5397020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe4b5397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5397530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53976c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5397850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53979e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5397b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5397d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5396020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5396340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5396660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5396a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5396c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fe4b5382020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fe4b5382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5382530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53826c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5382850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5382b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5382d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5381020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5381340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5381660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5381a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5381c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fe4b533d580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fe4b533d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b533d900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b533da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b533dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b533ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b533c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b533c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b533c340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b533c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b533c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b533c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b533c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b533cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b533cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b533b020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b533b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fe4b5329570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fe4b5329570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53298f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5329a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5329c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5329da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5328020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5328340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53284d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5328660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53287f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5328980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5328b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5328ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5327020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fe4b537e200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fe4b537e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b537e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b537e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b537e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b537ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b537ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b537ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b537d020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b537d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b537d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b537d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b537d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b537d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b537d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b537dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b537dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fe4b536a200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fe4b536a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b536a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b536a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b536a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b536aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b536abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b536ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5369020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5369340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53694d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5369660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5369980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5369c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5369da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fe4b535a200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fe4b535a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b535a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b535a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b535a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b535aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b535abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b535ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5359020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5359340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53594d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5359660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5359980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5359c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5359da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe4b53a5020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe4b53a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53a5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53a56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53a5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53a59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53a5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53a5d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53a4340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53a4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fe4b535e200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fe4b535e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b535e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b535e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b535e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b535ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b535ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b535ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b535d020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b535d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b535d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b535d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b535d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b535d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b535d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b535dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b535dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe4b53a1020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe4b53a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53a1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53a16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53a1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53a19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53a1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53a1d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53a0340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53a0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fe4b538d020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fe4b538d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b538d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b538d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b538d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b538d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b538d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b538db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b538dd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b538c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b538c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b538c340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b538c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b538c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b538c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b538ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b538cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fe4b5378200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fe4b5378200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5378580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5378710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53788a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5378a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5378bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5378d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5377020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5377340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53774d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5377660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5377980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5377c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5377da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fe4b5364200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fe4b5364200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5364580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5364710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53648a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5364a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5364bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5364d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5363020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5363340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53634d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5363660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53637f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5363980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5363c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5363da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fe4b5353200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fe4b5353200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5353580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5353710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53538a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5353a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5353bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5353d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5352020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53521b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5352340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53524d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5352660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53527f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5352980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5352c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5352da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe4b53af020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe4b53af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53af3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b53af530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53af6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b53af850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53af9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53afb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b53afd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53ae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53ae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53ae340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53ae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53ae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53ae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b53aea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53aec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe4b539b020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe4b539b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b539b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b539b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b539b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b539b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b539b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b539bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b539bd00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b539a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b539a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b539a340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b539a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b539a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b539a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b539aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b539ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fe4b5387020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fe4b5387020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5387530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53876c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5387850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b53879e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5387b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5387d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5386020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b53861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5386340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b53864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5386660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b53867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5386a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5386c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fe4b5372200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fe4b5372200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5372580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5372710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b53728a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5372a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5372bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5372d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5371020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53711b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5371340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53714d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5371660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b53717f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5371980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5371c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5371da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fe4b5345560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fe4b5345560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53458e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5345a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5345c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5345d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5344020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5344340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53444d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5344660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53447f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5344980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5344b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5344ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5343020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fe4b532f570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fe4b532f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b532f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b532fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b532fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b532fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b532e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b532e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b532e340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b532e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b532e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b532e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b532e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b532eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b532eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b532d020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b532d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fe4b5347580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fe4b5347580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5347900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5347a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5347c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5347db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5346020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5346340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53464d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5346660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53467f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5346980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5346b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5346ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5345020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fe4b536e200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fe4b536e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b536e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b536e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b536e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b536ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b536ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b536ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b536d020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b536d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b536d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b536d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b536d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b536d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b536d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b536dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b536dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fe4b5322570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fe4b5322570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b53228f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5322a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5322c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5322da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5321020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b53211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5321340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b53214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5321660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b53217f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5321980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5321b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5321ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5320020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b53201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fe4b531c580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fe4b531c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b531c900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b531ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b531cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b531cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b531b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b531b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b531b340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b531b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b531b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b531b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b531b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b531bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b531bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b531a020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b531a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fe4b534f1f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fe4b534f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b534f970"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b534fb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b534fc90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b534fe20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b534e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b534e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b534e340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b534e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b534e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b534e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b534e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b534eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b534eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b534d020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b534d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52f16d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52f16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52f1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52f1be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52f1d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52f01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52f0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52f04d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52f0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52f07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52f0980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52f0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52f0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52f0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52ef120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52ec100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52ec480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52ec610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52ec7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52ec930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52ecac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52ecc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52ecde0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52eb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52eb340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52eb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52eb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52eb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52eba80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52e8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52e8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52e70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52e7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52e7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52e7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52e7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52e78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52e7a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52e7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52e7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52e6020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52e61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52e6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52e64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52e6760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52e3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52e3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52e3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52e3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52e3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52e21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52e2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52e24d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52e2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52e27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52e2980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52e2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52e2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52e2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52e1120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52de100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52de480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52de610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52de7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52de930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52deac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52dec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52dede0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52dd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52dd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52dd340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52dd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52dd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52dd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52dda80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52ddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52dad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52dad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52d8400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52d8a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52d7020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52d7760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52d4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52d3980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52d2120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52cf100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52cf480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52cf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52cf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52cfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52cfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52cfde0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52ce340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52cea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52cbd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52cbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52ca0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52ca270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52ca400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52ca590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52ca720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52ca8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52caa40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52cabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52cad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52c9020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52c9760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52c6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52c6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52c6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52c6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52c5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52c54d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52c5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52c57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52c5980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52c5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52c5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52c5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52c4120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52c1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52c1480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52c1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52c17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52c1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52c1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52c1de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52c0340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52c0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52bdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52bdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52bc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52bc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52bc400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52bc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52bc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52bc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52bca40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52bcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52bcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52bb020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52bb760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52b8860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52b8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52b8be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52b8d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52b7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52b7660"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52b77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52b7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52b7b10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52b7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52b7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52b6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52b62b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52b6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52b2270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52b2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52b25f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52b2780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52b2910"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52b2aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52b2c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52b2dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52b1020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52b11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52b1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52b14d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52b1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52b17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52b1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52b1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52b1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52aed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52ad400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52ada40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52add60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52ac020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52ac760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52a9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52a9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52a9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52a9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52a84d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52a8980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52a7120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52a4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52a4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b52a4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52a47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b52a4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52a4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52a4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52a4de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b52a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b52a3340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b52a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b52a3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b52a0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b52a0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b529f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b529f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b529f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b529f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b529f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b529f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b529fa40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b529fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b529fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b529e020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b529e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b529e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b529e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b529e760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b529e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b529b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b529b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b529bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b529bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b529bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b529a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b529a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b529a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b529a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b529a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b529a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b529a980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b529ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b529aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b529ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5299120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5296100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5296100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5296480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5296610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52967a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5296930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5296ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5296c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5296de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5295020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5295340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5295660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5295a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5295c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5292d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5292d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5290270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5290400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5290590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5290720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5290a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5290bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5290d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b528f020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b528f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b528f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b528f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b528f760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b528f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b528c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b528c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b528cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b528cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b528cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b528b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b528b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b528b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b528b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b528b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b528b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b528b980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b528bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b528bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b528be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b528a120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b528a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5287100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5287100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5287480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5287610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52877a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5287930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5287ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5287c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5287de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5286020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5286340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5286660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5286a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5286c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5283d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5283d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52820e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5282270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5282400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5282590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5282720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5282a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5282bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5282d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5281020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5281340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5281760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b527ea60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b527ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b527ede0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b527d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b527d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b527d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b527d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b527d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b527d7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b527d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b527db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b527dca0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b527de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b527c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b527c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b527c440"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b527c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5279460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5279460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52797e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5279970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5279b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5279c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5279e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5278020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52781b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5278340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52784d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5278660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52787f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5278980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5278b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5278da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5277020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5275e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5275e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52741c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5274350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52744e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5274670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5274800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5274990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5274b20"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5274cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5274e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5273020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5273340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5273760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5270740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5270740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5270ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5270c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5270de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b526f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b526f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b526f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b526f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b526f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b526f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b526f980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b526fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b526fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b526fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b526e120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b526e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b526b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b526b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b526b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b526b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b526b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b526b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b526bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b526bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b526bde0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5269020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5269340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5269660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5269a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5269c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5266d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5266d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52650e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5265270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5265400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5265590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5265720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52658b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5265a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5265bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5265d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5264020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5264340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5264760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5261740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5261740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5261ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5261c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5261de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5260020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52601b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5260340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52604d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5260660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52607f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5260980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5260b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5260ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5260e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b525f120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b525f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b525c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b525c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b525c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b525c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b525c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b525c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b525cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b525cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b525cde0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b525b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b525b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b525b340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b525b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b525b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b525b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b525ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b525bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5258d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5258d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52570e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5257270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5257400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5257590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5257720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52578b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5257a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5257bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5257d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5256020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5256340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5256760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5253740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5253740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5253ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5253c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5253de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5252020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5252340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52524d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5252660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52527f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5252980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5252b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5252ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5252e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5251120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b524e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b524e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b524e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b524e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b524e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b524e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b524eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b524ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b524ede0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b524d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b524d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b524d340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b524d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b524d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b524d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b524da80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b524dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b524ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b524ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b52490e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5249270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5249400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5249590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5249720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b52498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5249a40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5249bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5249d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5248020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5248340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5248760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5244740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5244740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5244ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5244c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5244de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5243020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5243340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52434d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5243660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5243980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5243b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5243ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5243e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5242120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b523f100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b523f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b523f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b523f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b523f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b523f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b523fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b523fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b523fde0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b523e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b523e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b523e340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b523e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b523e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b523e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b523ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b523ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b523bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b523bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b523a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b523a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b523a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b523a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b523a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b523a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b523aa40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b523abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b523ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5239020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5239340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5239760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5236740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5236740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5236ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5236c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5236de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5235020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5235340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52354d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5235660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5235980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5235b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5235ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5235e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5234120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5231100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5231100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5231480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5231610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52317a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5231930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5231ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5231c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5231de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5230020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5230340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5230660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5230a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5230c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b522dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b522dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b522c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b522c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b522c400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b522c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b522c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b522c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b522ca40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b522cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b522cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b522b020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b522b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b522b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b522b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b522b760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b522b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5228740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5228740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5228ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5228c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5228de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5227020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5227340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52274d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5227660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5227980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5227b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5227ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5227e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5226120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5223100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5223100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5223480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5223610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52237a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5223930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5223ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5223c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5223de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5221020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5221340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5221660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5221a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5221c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b521ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b521ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b521d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b521d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b521d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b521d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b521d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b521d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b521da40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b521dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b521dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b521c020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b521c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b521c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b521c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b521c760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b521c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5219740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5219740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5219ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5219c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5219de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5218020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b52181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5218340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b52184d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5218660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5218980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5218b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5218ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5218e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5217120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b52172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5214100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5214100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5214480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5214610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b52147a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5214930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5214ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5214c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5214de0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5213020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b52131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b5213340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b52134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5213660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b52137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5213a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5213c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe4b5210d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe4b5210d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b520f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b520f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b520f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b520f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b520f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b520f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b520fa40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b520fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b520fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b520e020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b520e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b520e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b520e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b520e760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b520e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b5197610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b5197610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5197990"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5197b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5197cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5197e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5196020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b51961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5196340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b51964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5196660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b51967f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5196980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b5196b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5196ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5195020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b51951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b51a8440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b51a8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b51a87c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b51a8950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b51a8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b51a8c70"/>
        <function-ref name="get" scoped="" ref="0x7fe4b51a8e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5197020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b51971b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5197340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b51922f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b51922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b5192670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5192800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b5192990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b5192b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5192cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b5192e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5191020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b51911b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b5191340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b51914d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5191660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b51917f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b5191980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b5191c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5191da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b5193020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b5193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b51933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b5193530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b51936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b5193850"/>
        <function-ref name="get" scoped="" ref="0x7fe4b51939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b5193b70"/>
        <function-ref name="set" scoped="" ref="0x7fe4b5193d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b5192020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b518dde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b518dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b518c180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b518c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b518c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b518c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b518c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b518c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b518cae0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b518cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b518ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b518b020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b518b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b518b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b518b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b518b760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b518b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b518eb90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b518eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b518d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b518d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b518d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b518d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b518d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b518d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b518d980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b518db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b517f640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b517f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4fd2c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4fd31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4fd2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4fd3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4fd1590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4fd1110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4fd3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4fd5390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4fd2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4fd5860"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fd5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe4b5176610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b5176610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b5172c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b51741e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b5172020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b5174ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b5171590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b5171110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b5174660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b5175390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b5172630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b5175860"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b5175d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe4b516c1d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe4b516c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b5169630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b516bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b516a9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b516a550"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b5167020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b5169ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b516a0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b516cdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b5169020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b516b2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b516b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe4b5164a80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe4b5164a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b51666f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b516d400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b516d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b516d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b5071020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b5071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b506e870"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b5070840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b506e220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b5070d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b506ed30"/>
        <function-ref name="start" scoped="" ref="0x7fe4b5071e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b5070380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b5072760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b5072760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b5072ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b3619bd0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b3619bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b36154e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b36174e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3617e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b36179a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b36159a0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3618a80"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3619380" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3619380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3619700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe4b35ff0c0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b35ff0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b35ff440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b35ff5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b35ff760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b35ff8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b35ffa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe4b36037b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b36037b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3603b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b3603cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b3603e50"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3601020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b36011b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3601340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b36014d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3601660"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b36017f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b3601980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b3601b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe4b3601da0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3601da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b3600180"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b3600310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b36004a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b3600630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b36007c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b3600950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b3600ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b3600c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b3600e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe4b5140ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b5140ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b513f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b513f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b513f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b513f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b513f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe4b51444d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b51444d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b5144850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b51449e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5144b70"/>
        <function-ref name="get" scoped="" ref="0x7fe4b5144d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5143020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b51431b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b5143340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b51434d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b5143660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b51437f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b5143980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe4b5141280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b5141280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b5141600"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b5141790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b5141920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b5141ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b5141c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b5141dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b5140020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b51401b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b5140340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe4b35f6da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b35f6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b35f5180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b35f5310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b35f54a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b35f5630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b35f57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe4b35f94c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b35f94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b35f9840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b35f99d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b35f9b60"/>
        <function-ref name="get" scoped="" ref="0x7fe4b35f9cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b35f9e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b35f7030"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b35f71c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b35f7350"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b35f74e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b35f7670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b35f7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b35fc340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b35fc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b35faba0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b35fbb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b35fa550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b35fa090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b35f9090"/>
        <function-ref name="start" scoped="" ref="0x7fe4b35fb1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b35fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b35fda30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b35fda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b35fddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe4b35f7a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b35f7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b35f7e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b35f6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b35f61b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b35f6340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b35f64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b35f6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b35f67f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b35f6980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b35f6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b50ef020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b50ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b50efe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50ee800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50ee340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50eecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fe4b50e6020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe4b50e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b50e6e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50e4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50e4340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50e4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe4b50d22c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b50d22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b50d2640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b50d27d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b50d2960"/>
        <function-ref name="get" scoped="" ref="0x7fe4b50d2af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b50d2c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50d2e10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b50d1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50d11b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50d1340"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b50d14d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b50d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b50e10a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b50e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b50d4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50d49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50d44e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50d4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe4b50b0540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fe4b50b0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b50af3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50afd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50af890"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50ad260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b50b30f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b50b30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b50b1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b50b19a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b50b14e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b50b1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b3612020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b3612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3610870"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3611840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3610220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b3611d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b3610d30"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3612e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3611380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe4b360c780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b360c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3608020"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b360a020"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b360a9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b360a4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b36084e0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b360b5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b360bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b360e3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b360e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b360d240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b360dbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b360d700"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b360c0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fe4b503c490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fe4b503c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b503c810"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b503c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe4b503f1d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b503f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b503db30"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b503e9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b503d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b503d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b503c020"/>
        <function-ref name="start" scoped="" ref="0x7fe4b503e020"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b503e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b5046cf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b5046cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b5041220"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b50437c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b5042590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b5042110"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b5041b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b50416a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b5043c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b5044940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b5042ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b5044e10"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b5043340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fe4b4febe80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fe4b4febe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4fea220"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4fea3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe4b4ff1c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fe4b4ff1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4feb110"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4fee6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4fed4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4fed020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4feba10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4feb590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4feeb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4fef860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4fedab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4fefd30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fee220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b4ff6690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4ff6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4ff2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4ff4260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4ff2090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4ff4ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4ff1680"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4ff11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4ff4700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4ff5390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4ff26c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4ff5880"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4ff5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe4b4fe8cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe4b4fe8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4fe7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b4fdd020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b4fdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4fdde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b4fdc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b4fdc340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4fdccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b4fc9c50" loc="38:../../../tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4fcc020"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fe4b4fbe6e0" loc="44:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fe4b4fbe6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fe4b4fbea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7fe4b4fc1c40" loc="39:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fe4b4fc1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4fc6020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fe4b4fc61b0"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4fc6340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fe4b4fc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b4fc5020" loc="43:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b4fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b4fc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7fe4b4fccdc0" loc="38:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7fe4b4fccdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4fc7180"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fc7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b4fc6810" loc="42:../../../tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4fc6b90"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fc6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe4b4fb3e10" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fe4b4fb3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4fb21c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fe4b4fb2350"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4fb24e0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fe4b4fb2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe4b4faae10" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fe4b4faae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4fb31c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe4b4fb3350"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4fb34e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe4b4fb3670"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe4b4fb3800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe4b4fb3990"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b4fb3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b4fc8870" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b4fc8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4fc8bf0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4fc8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b4d23c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4d23c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b4d22020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4d221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe4b4d21440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fe4b4d21440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4d217c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fe4b4d21950"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4d21ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fe4b4d21c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fe4b4d20020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4d20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b4d203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe4b4d22440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fe4b4d22440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4d227c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe4b4d22950"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4d22ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe4b4d22c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe4b4d22e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe4b4d21020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b4d211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4d23020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4d23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4d233a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4d23530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4d236c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4d23850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4d239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe4b4f438e0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4f438e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b4f43c60"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b4f43df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe4b4f42d00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fe4b4f42d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4f410a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fe4b4f41230"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4f413c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fe4b4f41550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fe4b4f3e1d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4f3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b4f3e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe4b4f45670" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fe4b4f45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4f459f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe4b4f45b80"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4f45d10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe4b4f42020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe4b4f421b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe4b4f42340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b4f424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe4b4f41e50" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe4b4f41e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4f40210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4f403a0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4f40530"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4f406c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4f40850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4f4cc80" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4f4cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4f480a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4f48230"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4f483c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4f48550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4f486e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe4b4f3a710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4f3a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4f3aa90"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4f3ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe4b4eb5a20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4eb5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b4eb5dc0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b4eb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fe4b4eb3570" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fe4b4eb3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4eb3910"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fe4b4eb3aa0"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4eb3c30"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fe4b4eb3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fe4b4eb1020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4eb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b4eb13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fe4b4eb1690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe4b4eb1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b4eb1a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b4eb1ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b4eb1d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b4eb0020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b4eb01b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b4eb0340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b4eb04d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b4eb0660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b4eb07f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b4eb0980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b4eb0b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b4eb0ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b4eb0e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b4eaf120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b4eaf2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b4eaf440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b4eaf5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b4eaf760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b4eaf8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b4eafa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b4eafc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b4eafda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b4eae020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b4eae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b4eae340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b4eae6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b4eae860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b4eae9f0"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b4eaeb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b4eaed10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b4ead020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b4ead1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b4ead340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b4ead4d0"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b4ead660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4ead7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b4ead980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b4eadb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b4eadca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b4eade30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fe4b4eb43e0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fe4b4eb43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4eb4780"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fe4b4eb4910"/>
        <function-ref name="receive" scoped="" ref="0x7fe4b4eb4aa0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fe4b4eb4c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fe4b4eb4dc0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fe4b4eb3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b4eb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b4eacc90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b4eacc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4eaaac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b4ea94e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b4ea9020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4ea99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe4b4eb2230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe4b4eb2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4eb25d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4eb2760"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4eb28f0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4eb2a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4eb2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4eb6b10" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4eb6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4eb5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4eb51b0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4eb5340"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4eb54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4eb5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe4b4eac290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4eac290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4eac630"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4eac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b4ea9dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b4ea9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b4ea8180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b4ea8310"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b4ea84a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b4ea8630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b4ea87c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4ea8950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b4ea8ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b4ea71b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4ea8e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b4ea8c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b4ea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe4b4e993b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4e993b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4e99730"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4e998c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe4b4e9c0d0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4e9c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4e9c450"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4e9c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe4b4e9c900" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b4e9c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b4e9cc80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b4e9ce10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b4e9f020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b4e9f1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b4e9f340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b4e9f4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b4e9f660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b4e9f7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b4e9f980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b4e9fb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b4e9fca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b4e9fe30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b4e9e020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b4e9e2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b4e9e440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b4e9e5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b4e9e760"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b4e9e8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b4e9ea80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b4e9ec10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b4e9eda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b4e9b020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b4e9b1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b4e9b340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b4e9b4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b4e9b860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b4e9b9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b4e9bb80"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b4e9bd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b4e9a020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b4e9a1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b4e9a340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b4e9a4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b4e9a660"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b4e9a7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4e9a980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b4e9ab10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b4e9aca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b4e9ae30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b4e99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe4b4e8b670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe4b4e8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4e8b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4e8bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4e8bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4e8a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4e8a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4e8a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4e8a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4e8a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4e8a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4e8a980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4e8ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4e8aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4e8ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4e89120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4e892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b4e90dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4e90dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4e8f180"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4e8f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fe4b4e89670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fe4b4e89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4e899f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4e89b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4e89d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4e88020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4e881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4e88340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4e884d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4e88660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4e887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4e88980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4e88b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4e88ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4e88e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4e87120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4e872b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fe4b4e87670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fe4b4e87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4e879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4e87b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4e87d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4e86020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4e861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4e86340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4e864d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4e86660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4e867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4e86980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4e86b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4e86ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4e86e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4e85120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4e852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fe4b4e94020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe4b4e94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b4e943a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b4e94530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b4e946c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b4e94850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b4e949e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b4e94b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b4e94d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b4e93020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b4e931b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b4e93340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b4e934d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b4e93660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b4e937f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b4e93a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b4e93c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b4e93da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b4e92020"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b4e921b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b4e92340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b4e924d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b4e92660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b4e927f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b4e92980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b4e92b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b4e92ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b4e91220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b4e913b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b4e91540"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b4e916d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b4e91860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b4e919f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b4e91b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b4e91d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b4e90020"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b4e901b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4e90340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b4e904d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b4e90660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b4e907f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b4e90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe4b4e98710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4e98710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4e98a90"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4e98c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fe4b4e8d670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fe4b4e8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4e8d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4e8db80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4e8dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4e8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4e8c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4e8c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4e8c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4e8c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4e8c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4e8c980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4e8cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4e8cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4e8ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4e8b120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4e8b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe4b4e8f6d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe4b4e8f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4e8fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4e8fbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4e8fd70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4e8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4e8e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4e8e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4e8e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4e8e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4e8e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4e8e980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4e8eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4e8eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4e8ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4e8d120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4e8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b4e07110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b4e07110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4e06020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b4e069a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b4e064e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4e06e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b3565c70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b3565c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b3564020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b35641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b355ed70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b355ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b355d180"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b355d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe4b355e5d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b355e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b355e950"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b355eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3565020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b35653a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3565530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b35656c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3565850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b35659e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe4b3564be0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b3564be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b3562020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b35621b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b3562340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b35624d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b3562660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b35627f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b3562980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b3562b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b3562ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b3562e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b3561020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b35611b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b3561340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b35615d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b3561760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b35618f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b3561a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b3561c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b3561da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b3560020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b35601b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b3560340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b35604d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b3560660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b35607f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b3560b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b3560d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b355f020"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b355f1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b355f340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b355f4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b355f660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b355f7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b355f980"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b355fb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b355fca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b355fe30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b355e020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b355e1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b355e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b3564440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3564440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b35647c0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b3564950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b4debd50" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4debd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b4de9100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4de9290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b4de8370" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4de8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b4de86f0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b4de8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b4defcd0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4defcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4dec0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4dec230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4deca60" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4deca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4decde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4deb020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4deb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4deb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4deb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b4de9590" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4de9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4de9910"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4de9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b4dd2020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4dd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4dd23a0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4dd2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b4de50d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b4de50d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4de5470"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4de5600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fe4b4dd3880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fe4b4dd3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4dd3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe4b4de5a00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b4de5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4de5da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fe4b4dd30a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fe4b4dd30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4dd3420"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4dd35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b4d58020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b4d583c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4d58550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b4d57cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4d57cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b4d560a0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b4d56230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b4d587a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4d58b20"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b4d58cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4d58e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4d57020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4d571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4d59210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4d59210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4d595b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4d59740"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4d598d0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4d59a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4d59bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b4d57400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d57400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4d57780"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4d57910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b34f7020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b34f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b34f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe4b34f7630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b34f7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b34f79b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b34f7b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b34f7cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b34f7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b34f36c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b34f36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b34f3a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b34f3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b34f1400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b34f1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b34f17a0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b34f1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe4b34f1bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe4b34f1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b34f0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b34f01b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b34f0340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b34f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b34f3e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b34f3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34f21e0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b34f2370"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34f2500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34f2690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b34f2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b34f0720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b34f0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b34f0aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b34f0c30"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b34f0dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b34ef020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b34ef1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b34ef340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b34ef4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b34efb10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b34ef7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b34ef660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b34ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b34f4850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b34f4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34f4bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b34f4d80"/>
        <function-ref name="request" scoped="" ref="0x7fe4b34f3020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34f31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b34f2a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b34f2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b34f2df0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b34f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe4b34efde0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fe4b34efde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b34ed180"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b34ed310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe4b4d3c400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b4d3c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe4b4d3c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe4b4d3c9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4d3c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4d3cd50"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b4d3b020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4d3b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4d3b340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4d3b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe4b4d52b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b4d52b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4d3c020"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4d3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b4d3b720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4d3b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4d3baa0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4d3bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe4b34bebd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b34bebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe4b34bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe4b34bd270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b34bd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34bd5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b34bd780"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34bd910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34bdaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b34bdc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe4b34be470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe4b34be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b34be7f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b34be980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b34bde80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b34bde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b34bc220"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b34bc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fe4b4d1c8e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fe4b4d1c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b4d1cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe4b4d1b020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4d1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4d1b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4d1b530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4d1b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4d1b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4d1b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b4d1c080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b4d1c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b4d1c400"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4d1c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fe4b4d0e080" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fe4b4d0e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fe4b4d0e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b4d0b3a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b4d0b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b4d0b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fe4b4d0ba00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fe4b4d0ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fe4b4d0bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fe4b4a91900" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fe4b4a91900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b4a91c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fe4b4a92240" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fe4b4a92240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4a92e30"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b4a91300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fe4b4a93aa0" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fe4b4a93aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b4a93e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fe4b4a94310" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fe4b4a94310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4a93020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b4a934a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fe4b34acc50" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7fe4b34acc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fe4b34ab020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fe4b34ab1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fe4b34ab340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fe4b34ab4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fe4b34ab660"/>
        <function-ref name="reset" scoped="" ref="0x7fe4b34ab7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fe4b34ab980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fe4b34abb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7fe4b34abca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fe4b34abe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fe4b34b1020" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fe4b34b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b34b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fe4b34b1790" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fe4b34b1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b34b03b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b34b0830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fe4b34b3160" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fe4b34b3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b34b34e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fe4b34b0e30" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7fe4b34b0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34af1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b34af370"/>
        <function-ref name="request" scoped="" ref="0x7fe4b34af500"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34af690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34af820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fe4b34ad7b0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7fe4b34ad7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fe4b34adb30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fe4b34adcc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fe4b34ade50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fe4b34ac020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fe4b34ac1b0"/>
        <function-ref name="reset" scoped="" ref="0x7fe4b34ac340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fe4b34ac4d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fe4b34ac660"/>
        <function-ref name="resetDone" scoped="" ref="0x7fe4b34ac7f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fe4b34ac980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fe4b34afaf0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7fe4b34afaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34afe70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b34ad030"/>
        <function-ref name="request" scoped="" ref="0x7fe4b34ad1c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34ad350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34ad4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fe4b34b38d0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fe4b34b38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b34b2560"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b34b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fe4b4cb42c0" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4cb42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fe4b4cb4640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fe4b4cb47d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fe4b4cb4960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fe4b4cb4af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fe4b4cb4c80"/>
        <function-ref name="reset" scoped="" ref="0x7fe4b4cb4e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fe4b4cb3020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fe4b4cb31b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fe4b4cb3340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fe4b4cb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4cb5020" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4cb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4cb53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4cb5530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4cb56c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4cb5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4cb59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fe4b4c34610" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fe4b4c34610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4c34990"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4c34b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4c34cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4c34e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fe4b4c2b2f0" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7fe4b4c2b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4c2b670"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4c2b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fe4b4c2cac0" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7fe4b4c2cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4c2ce40"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4c2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fe4b4c35480" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7fe4b4c35480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c35800"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c35990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c35b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c35cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c35e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c34020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c341b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c34340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fe4b4c38c90" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fe4b4c38c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fe4b4c370a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fe4b4c37230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fe4b4c373c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fe4b4c37550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fe4b4c376e0"/>
        <function-ref name="reset" scoped="" ref="0x7fe4b4c37870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fe4b4c37a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fe4b4c37b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7fe4b4c37d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fe4b4c36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fe4b4c362f0" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fe4b4c362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c36670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c36800"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c36990"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c36b20"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c36cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c36e40"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c35020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b4c2d450" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b4c2d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b4c2d7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b4c2d960"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b4c2daf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b4c2dc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b4c2de10"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c2c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b4c2c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b4c2c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c2c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b4c2c340"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b4c2c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b4c32240" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4c32240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4c2f6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4c31c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4c30a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4c305f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4c2d020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4c2fb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4c30170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4c32e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4c2f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4c31340"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4c31810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fe4b4c22730" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fe4b4c22730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4c22ab0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4c22c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4c22dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4c21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fe4b4c23370" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fe4b4c23370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c236f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c23880"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c23a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c23ba0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c23d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c22020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c221b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c22340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fe4b4c24020" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fe4b4c24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c24530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c246c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c24850"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c249e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c24b70"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c24d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4c251d0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4c251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4c25550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4c256e0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4c25870"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4c25a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4c25b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4c1f490" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c1f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c1f810"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c1f9a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4c1fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c1fcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c1fe50"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4c1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c1d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c1d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4c1d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4c1d660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c1d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4c1d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4c1db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4c1dda0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4c20330" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c20330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c206b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c20840"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c209d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c20b60"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c20cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c20e80"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c1f030"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c1f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4c19020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c19530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4c196c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c19850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4c19b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c19d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4c181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4c18340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4c18660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4c187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4c18a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4c1bd60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c1bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c1a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c1a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c1a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c1a630"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c1a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c1a950"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c1aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c1ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4c15de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4c15de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c14180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c14310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4c144a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c14630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c147c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4c14950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c14ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c14c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4c14e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4c13020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4c13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4c134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4c13760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4c16b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4c16b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c15020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c15340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c154d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c15660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c157f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c15980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c15b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b4c0e3e0" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b4c0e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b4c0e760"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b4c0e8f0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b4c0ea80"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4c0ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fe4b4c04700" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fe4b4c04700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4c04a80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4c04c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fe4b4c06b40" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fe4b4c06b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c05020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c05340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c054d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c05660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c057f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c05980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c05b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7fe4b4c08510" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7fe4b4c08510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c08890"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c08a20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c08bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c08d40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c071b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c07340"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c074d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fe4b4c07830" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fe4b4c07830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4c07bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4c07d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4c06020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4c061b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4c06340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4c064d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4c06660"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4c067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe4b4c0d080" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4c0d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4c09630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4c0cac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4c0a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4c0a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4c08020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4c09ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4c0a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4c0dc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4c09020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4c0c170"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4c0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b4bf95a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4bf95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4bf5a80"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bf6090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4bf6e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4bf6990"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4bf44a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4bf4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4bf6510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4bf8200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4bf5470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4bf86d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4bf8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe4b4be8710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe4b4be8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be8a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be8c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be8db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be7020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe4b4bdd8a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe4b4bdd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bddc20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bdddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bdc020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bdc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bdc340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bdc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe4b4be5710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe4b4be5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be5a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be5c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be5db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be4020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe4b4be3710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe4b4be3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be3a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be3c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be3db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be1020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe4b4bee710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe4b4bee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4beea90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4beec20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4beedb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be9020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe4b4bdf710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe4b4bdf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bdfb90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bdfd20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bde020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bde1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bde340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe4b4be7710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe4b4be7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be7a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be7c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be7db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be6020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe4b4bdc8a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe4b4bdc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bdcc20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bdcdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bdb020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bdb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bdb340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bdb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe4b4bea660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe4b4bea660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bea9e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4beab70"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bead00"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bef020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bef1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe4b4be1710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe4b4be1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be1a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be1c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be1db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be0020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe4b4be9710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe4b4be9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be9a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be9c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be9db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be8020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe4b4bde8a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe4b4bde8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bdec20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bdedb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bdd020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bdd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bdd340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bdd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe4b4be6710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe4b4be6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be6a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be6c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be6db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be5020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe4b4be4710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe4b4be4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be4a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be4c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be4db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4be3020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4be31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4be3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe4b4bef710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe4b4bef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4befa90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4befc20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4befdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bee020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bee1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe4b4be0710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe4b4be0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4be0a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4be0c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4be0db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bdf020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bdf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bdf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe4b4bd4710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe4b4bd4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd4a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd4c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd4db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd3020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe4b4bca8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe4b4bca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bcac20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bcadb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bc9020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bc91b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bc9340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe4b4bd1710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe4b4bd1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd1a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd1c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd1db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd0020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe4b4bcf710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe4b4bcf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bcfa90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bcfc20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bcfdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bce020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bce1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe4b4bd6710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe4b4bd6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd6a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd6c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd6db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd5020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe4b4bcc710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe4b4bcc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bccb90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bccd20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bcb020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bcb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bcb340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bcb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe4b4bd3710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe4b4bd3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd3a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd3c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd3db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd2020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe4b4bc98a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe4b4bc98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bc9c20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bc9db0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bc7020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bc71b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bc7340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe4b4bd86b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe4b4bd86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd8a30"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd8bc0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd8d50"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd7020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe4b4bce710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe4b4bce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bcea90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bcec20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bcedb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bcd020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bcd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bcd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe4b4bd5710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe4b4bd5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd5a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd5c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd5db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd4020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe4b4bcb8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe4b4bcb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bcbc20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bcbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bca020"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bca1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bca340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe4b4bd2710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe4b4bd2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd2a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd2c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd2db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd1020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe4b4bd0710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe4b4bd0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd0a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd0c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd0db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bcf020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bcf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bcf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe4b4bd7710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe4b4bd7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bd7a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bd7c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bd7db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bd6020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bd61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe4b4bcd710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe4b4bcd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4bcda90"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4bcdc20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4bcddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4bcc020"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4bcc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4bcc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe4b4af5610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b4af5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4af5990"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4af5b20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4af5cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4af5e40"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4ae8020"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4ae81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe4b4af6a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe4b4af6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4af6db0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4af5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4af51b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4af5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b4ae49e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b4ae49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b4ae4d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4ae3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b4ae2770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b4ae2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b4ae2b10"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b4ae2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b4ae3270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ae3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4ae35f0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b4ae3780"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4ae3910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4ae3aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4ae3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4ae6b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4ae6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4ae4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4ae41b0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4ae4340"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4ae44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4ae4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b4ae3e80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ae3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4ae2220"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4ae23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b341a1b0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b341a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b341a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe4b341a7c0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b341a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b341ab40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b341acd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b341ae60"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b3419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b3416850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b3416850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b3416bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b3416d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b3414590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b3414590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b3414930"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b3414ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe4b3414d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe4b3414d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b3413100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b3413290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b3413420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b34135b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b3415020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b3415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b34153a0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b3415530"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b34156c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3415850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b34159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b3413800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b3413800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b3413b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b3413d10"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b3412020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b34121b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b3412340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b34124d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b3412660"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b3412ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3412980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b34127f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b3412b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3418970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3418970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3418d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3416020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b34161b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3416340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b34164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b3415c30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3415c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b3414020"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b34141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe4b3411020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fe4b3411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b34113a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b3411530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fe4b4ade280" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b4ade280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b4ade600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b4ade790"/>
        <function-ref name="start" scoped="" ref="0x7fe4b4ade920"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4adeab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe4b4aded00" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b4aded00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe4b4ab20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe4b4ab22f0" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b4ab22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4ab2670"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b4ab2800"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4ab2990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4ab2b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b4ab2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b4ab1020" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b4ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b4ab13a0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b4ab1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fe4b33e00f0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b33e00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b33e0470"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b33e0600"/>
        <function-ref name="start" scoped="" ref="0x7fe4b33e0790"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b33e0920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe4b33e0b70" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe4b33e0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe4b33df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fe4b33de680" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fe4b33de680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b33dea00"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b33deb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe4b33df270" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b33df270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b33df5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b33df780"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b33df910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b33dfaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b33dfc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fe4b33dee60" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7fe4b33dee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b33dd210"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b33dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fe4b33e1970" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b33e1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b33e1cf0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b33e1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b33dfe80" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b33dfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b33de220"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b33de3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b4aa51e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4aa51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4aa1630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4aa4c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4aa39d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4aa3550"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4aa0020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4aa1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4aa30d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4aa5dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4aa1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4aa42e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4aa47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe4b4a8c750" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fe4b4a8c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b468a390"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b468a810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fe4b4688020" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fe4b4688020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b4687ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b4688c10"/>
        <function-ref name="read" scoped="" ref="0x7fe4b46875e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b46865a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fe4b4a8c020" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fe4b4a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b4a8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe4b33c7bd0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fe4b33c7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b33c6860"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b33c6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b33c54a0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33c54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b33c3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fe4b4a47960" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fe4b4a47960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4a47ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4a47e70"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4a45030"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4a451c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4a45350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe4b4a50390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fe4b4a50390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4a4f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b4a4f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fe4b4a4e530" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fe4b4a4e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4a4d1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b4a4d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fe4b4a492c0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fe4b4a492c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4a49640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4a497d0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4a49960"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4a49af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4a49c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe4b4a44020" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fe4b4a44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b4a44c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fe4b4a42450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b4a42450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b4a427d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b4a42960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b4a42af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b4a42c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b4a42e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b4a41020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b4a411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fe4b4a48640" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fe4b4a48640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4a489c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4a48b50"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4a48ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4a48e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4a47030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fe4b4a16e40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fe4b4a16e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4a151e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4a15370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fe4b33b8720" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fe4b33b8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b33b8aa0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b33b8c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe4b33b8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fe4b33b9730" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b33b9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b33b9ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b33b9c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b33b9dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b33b8020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b33b81b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b33b8340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b33b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fe4b33b6060" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fe4b33b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fe4b33b63e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fe4b33b6570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b33b69a0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33b69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b33b5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b33baaf0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b33baaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b33bae70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b33b9030"/>
        <function-ref name="request" scoped="" ref="0x7fe4b33b91c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b33b9350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b33b94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fe4b49da960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49da960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b49dace0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b49dae70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe4b49d8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fe4b49d7760" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fe4b49d7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b49d7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b49d7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fe4b49d8920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe4b49d8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fe4b49d8ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fe4b49d8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fe4b49db1d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49db1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b49db550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b49db6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b49db870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b49dba00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b49dbb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b49dbd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b49da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b49e8cc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b49e8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b49dc0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b49dc230"/>
        <function-ref name="request" scoped="" ref="0x7fe4b49dc3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b49dc550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b49dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fe4b49d01d0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fe4b49d01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b49d0550"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b49d06e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe4b49d0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fe4b49c0650" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b49c0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fe4b49c09d0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fe4b49c0b60"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fe4b49c0cf0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fe4b49c0e80"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fe4b49cc030"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fe4b49cc1c0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fe4b49cc350"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe4b49cc4e0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fe4b49cc670"/>
        <function-ref name="getMem" scoped="" ref="0x7fe4b49cc800"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fe4b49cc990"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fe4b49ccb20"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fe4b49cccb0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fe4b49cb020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fe4b49cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fe4b49b1200" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fe4b49b1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49b1580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49b1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49b18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49b1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49b1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49b1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49b0020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49b04d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49b0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49b07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49b0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49b0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fe4b49ba3a0" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fe4b49ba3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b49ba720"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b49ba8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b49baa40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b49babd0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b49bad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fe4b49bed30" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fe4b49bed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b49bd0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b49bd270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b49bd400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b49bd590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b49bd720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b49bd8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b49bda40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b49bdbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b49bdd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fe4b49ce020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fe4b49ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b49ce3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b49ce530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fe4b49b5200" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fe4b49b5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49b5580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49b5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49b58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49b5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49b5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49b5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49b4020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49b41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49b4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49b44d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49b4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49b47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49b4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49b4c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fe4b49cf1d0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe4b49cf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fe4b49cf550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fe4b49cf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fe4b49ab200" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fe4b49ab200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49ab580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49ab710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49ab8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49aba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49abbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49abd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49aa020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49aa4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49aa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49aa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49aa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49aac10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49aada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fe4b49b9140" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fe4b49b9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49b95c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49b9750"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49b98e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49b9a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49b9c00"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49b9d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49b8020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49b81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49b8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49b84d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49b8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49b87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49b8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49b8c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b49d6c60" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b49d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b49d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fe4b49af200" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fe4b49af200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49af580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49af710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49af8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49afa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49afbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49afd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49ae020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49ae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49ae340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49ae4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49ae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49ae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49ae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49aec10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fe4b49cb4f0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fe4b49cb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b49cb870"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b49cba00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b49cbb90"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49cbd20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b49be020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b49be1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b49be340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b49be4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b49be660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b49be7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b49be980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fe4b49ce940" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fe4b49ce940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b49cecc0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b49cee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fe4b49bc160" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fe4b49bc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b49bc4e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b49bc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b49bc800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b49bc990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b49bcb20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b49bccb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b49bce40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b49bb020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b49bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fe4b49d3980" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b49d3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b49d3d00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b49d2020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b49d21b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b49d2340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b49d24d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b49d2660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b49d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fe4b49b3200" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fe4b49b3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49b3580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49b3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49b38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49b3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49b3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49b3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49b2020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49b21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49b2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49b24d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49b2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49b27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49b2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49b2c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fe4b49bb530" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fe4b49bb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b49bb8b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b49bba40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b49bbbd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b49bbd60"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b49ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fe4b49b7200" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fe4b49b7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49b7580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49b7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49b78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49b7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49b7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49b7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49b6020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49b61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49b6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49b64d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49b6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49b67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49b6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49b6c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fe4b49ad200" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fe4b49ad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b49ad580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b49ad710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b49ad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b49ada30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b49adbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b49add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b49ac020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b49ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b49ac340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b49ac4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b49ac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b49ac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b49ac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b49acc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b49acda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fe4b48ed020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b48ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fe4b48ed3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fe4b48ed530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fe4b48ed6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fe4b48ed850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fe4b48ed9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fe4b48edb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fe4b48edd00"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe4b48ec020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fe4b48ec1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fe4b48ec340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fe4b48ec4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fe4b48ec660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fe4b48ec7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fe4b48eca80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fe4b48ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b485c3a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b485c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b485c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b485c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b485b570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b485b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b485b910"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b485baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b485e520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b485e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b485e8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b485ea50"/>
        <function-ref name="request" scoped="" ref="0x7fe4b485ebe0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b485ed70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b485c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b485cb20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b485cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b485b020"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b485b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3392060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3392060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b33923e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fe4b3392670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe4b3392670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b33929f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b3392b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b3392d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b3391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b338e530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b338e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b338e8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b338ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b338d610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b338d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b338d9b0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b338db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe4b338ddd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe4b338ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b338c180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b338c310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b338c4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b338c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b338f6c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b338f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b338fa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b338fbf0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b338fd80"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b338e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b338e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b338ecb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b338ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b338d0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b338d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe4b338c900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fe4b338c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b338cc80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b338ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe4b483a740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fe4b483a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b48393d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fe4b483b1d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fe4b483b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b483b550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b483b6e0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b483b870"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b483ba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b483bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fe4b4844d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fe4b4844d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b48410e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4841270"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4841400"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4841590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4841720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fe4b48349a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fe4b48349a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fe4b4834d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fe4b4833020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fe4b48331b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fe4b4833340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fe4b48334d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fe4b4833660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fe4b48337f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe4b4833980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fe4b4833b10"/>
        <function-ref name="getMem" scoped="" ref="0x7fe4b4833ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fe4b4833e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fe4b4832020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fe4b48321b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fe4b4832440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fe4b48325d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fe4b482c020" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fe4b482c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4828630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b482ba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b482a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b482a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4827020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4828ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b482a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b482cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4828020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b482b110"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b482b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fe4b4835e00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fe4b4835e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b48341c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b4834350"/>
        <function-ref name="start" scoped="" ref="0x7fe4b48344e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4834670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fe4b48276c0" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fe4b48276c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4823c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b48251e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4823020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4825ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4822590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4822110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4825660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4826390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4823630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4826860"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4826d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fe4b4835240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fe4b4835240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b48355c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b4835750"/>
        <function-ref name="start" scoped="" ref="0x7fe4b48358e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4835a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fe4b4832a90" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fe4b4832a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b482d020"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4830510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b482f300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4830e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b482d920"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b482d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4830990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b48316b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b482f910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4831b80"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4830090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fe4b47d2020" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fe4b47d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b47d2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fe4b47d59c0" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fe4b47d59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b47d5d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b47d4020"/>
        <function-ref name="start" scoped="" ref="0x7fe4b47d41b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b47d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fe4b47d6030" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fe4b47d6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b47d63b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b47d6540"/>
        <function-ref name="request" scoped="" ref="0x7fe4b47d66d0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b47d6860"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b47d69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fe4b47daca0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fe4b47daca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b47d70a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b47d7230"/>
        <function-ref name="request" scoped="" ref="0x7fe4b47d73c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b47d7550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b47d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fe4b47d07f0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fe4b47d07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b47d0b70"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b47d0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fe4b47d6d80" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fe4b47d6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b47d5180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b47d5310"/>
        <function-ref name="start" scoped="" ref="0x7fe4b47d54a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b47d5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b47a14e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b47a14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b479da20"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b479f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b479fda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b479f920"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b479c4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b479c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b479f4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b47a0110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b479d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b47a05e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b47a0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b479a020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b479a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4796630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4799a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b4798920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b47984a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b4795020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b4796ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4798020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b479ac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4796020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4799110"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b47995e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b4794b40" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b4794b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b478f110"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b47925b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b47904a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b4790020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b478fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b478f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4792a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b4793750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b4790ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b4793c20"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4792130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fe4b33a7060" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fe4b33a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b33a7c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fe4b33a6300" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fe4b33a6300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b33a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b33bf5c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b33bf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b33bd240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fe4b33c2840" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fe4b33c2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b33c0340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b33c1480"/>
        <function-ref name="read" scoped="" ref="0x7fe4b33c1df0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b33c0df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fe4b4758c90" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b4758c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b47570a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b4757230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b47573c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b4757550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b47576e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b4757870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b4757a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b47595e0" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b47595e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b4758240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fe4b475d1d0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fe4b475d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b475cc40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b475ddc0"/>
        <function-ref name="read" scoped="" ref="0x7fe4b475c770"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b475a730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe4b4755280" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4755280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4755600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4755790"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4755920"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4755ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b4755c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fe4b471f380" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fe4b471f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b471f700"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b471f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fe4b472daa0" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fe4b472daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b472de20"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b472c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fe4b4727100" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fe4b4727100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4727480"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4727610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe4b4748020" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b4748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4746870"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4747840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b4746220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4747d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b4746d30"/>
        <function-ref name="start" scoped="" ref="0x7fe4b4748e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4747380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b4751150" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b4751150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fe4b5b3f800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fe4b5b3f800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b47514d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b474bb10" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b474bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b4749790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fe4b474c1d0" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fe4b474c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b474c550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b474c6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b474c870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b474ca00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b474cb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b474cd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b474b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fe4b4751e70" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fe4b4751e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b474e910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b4750a90"/>
        <function-ref name="read" scoped="" ref="0x7fe4b474e440"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b474d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b46e3970" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b46e3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b46df1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b46e11b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b46e1b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b46e1670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b46df670"/>
        <function-ref name="start" scoped="" ref="0x7fe4b46e27c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b46e2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b46e3120" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b46e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b46e34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b3344ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b3344ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b33404e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b33414e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3341e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b33419a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b33409a0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3342ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3344450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3344450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b33447d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe4b332a440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b332a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b332a7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b332a950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b332aae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b332ac70"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b332ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe4b332d880" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b332d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b332dc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b332dd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b332c020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b332c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b332c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b332c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b332c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b332c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b332c980"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b332cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b332cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe4b332b020" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b332b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b332b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b332b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b332b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b332b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b332b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b332bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b332bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b332a020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b332a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe4b33200c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b33200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b3320440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b33205d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b3320760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b33208f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3320a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe4b3323710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3323710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3323a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b3323c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b3323db0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3322020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b33221b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3322340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b33224d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3322660"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b33227f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b3322980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b3322b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b33275b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b33275b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3325df0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3326df0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b33257a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b33252e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b33232e0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3326420"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3326930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3328ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3328ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b33270a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe4b3322da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3322da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b3321180"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b3321310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b33214a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b3321630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b33217c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b3321950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b3321ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b3321c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b3321e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b333d020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b333d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b333a870"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b333c840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b333a220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b333cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b333ad30"/>
        <function-ref name="start" scoped="" ref="0x7fe4b333de30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b333c380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe4b3337780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b3337780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3333020"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3334020"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b33349a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b33344e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b33334e0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b33365d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3336ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b33393d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b33393d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3338240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3338bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3338700"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b33370d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fe4b46afbf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fe4b46afbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b46ac710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b46ad860"/>
        <function-ref name="read" scoped="" ref="0x7fe4b46ac220"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b46aa220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fe4b46dacb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fe4b46dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fe4b46b0850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fe4b46b1940"/>
        <function-ref name="read" scoped="" ref="0x7fe4b46b0360"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b46af360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe4b46aa8f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b46aa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b46aac90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b46aae20"/>
        <function-ref name="request" scoped="" ref="0x7fe4b46a9020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b46a91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b46a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fe4b3351020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fe4b3351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b33513a0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b3351530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe4b33516c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fe4b3352020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fe4b3352020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe4b33523a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fe4b3352530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fe4b33526c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fe4b3352850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fe4b33529e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fe4b3352b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fe4b3352d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fe4b3351910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fe4b3351910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fe4b3351c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fe4b3351e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fe4b3350280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b3350280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b334f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3353360" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3353360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b33536e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3353870"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3353a00"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3353b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3353d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fe4b32e0dc0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fe4b32e0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b32dfac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fe4b32dd120" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fe4b32dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b32ddd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fe4b4691300" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fe4b4691300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fe4b4690020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fe4b46948b0" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fe4b46948b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fe4b4694c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fe4b4681b80" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fe4b4681b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fe4b467fc10"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b467f790"/>
        <function-ref name="notify" scoped="" ref="0x7fe4b467e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fe4b4684920" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fe4b4684920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4681560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7fe4b467a080" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fe4b467a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b467a400"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b467a590"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b467a720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b467a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b467ee80" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b467ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b467b220"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b467b3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b467b540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b467b6d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b467b860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b467b9f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b467bb80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b467bd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b46772f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b46772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4677670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4677800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4677990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4677b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4677cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4677e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4676020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b46761b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4676340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b46764d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4676660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b46767f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4676980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4676c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4676da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4678140" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4678140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b46784c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4678650"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b46787e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4678970"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4678b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4678c90"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4678e20"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4677020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe4b4673de0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b4673de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4671180"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4671310"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b46714a0"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b4671630"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b46717c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b4671950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe4b46732e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe4b46732e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4673660"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b46737f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4673980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4673b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7fe4b4653480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7fe4b4653480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4653800"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4653990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7fe4b46548f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fe4b46548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4654c70"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4654e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4653020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b46531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fe4b4658ca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fe4b4658ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fe4b4657d40"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b46578c0"/>
        <function-ref name="notify" scoped="" ref="0x7fe4b46551e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fe4b4659b10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fe4b4659b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4658750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fe4b4655660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4655660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b46559e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4655b70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4655d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4654020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b46541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4654340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b46544d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4654660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7fe4b464ce20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7fe4b464ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b464aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fe4b464d270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fe4b464d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fe4b464c310"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b464de60"/>
        <function-ref name="notify" scoped="" ref="0x7fe4b464c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7fe4b4649130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7fe4b4649130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fe4b46481e0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b4649d20"/>
        <function-ref name="notify" scoped="" ref="0x7fe4b4648660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7fe4b464e020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7fe4b464e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b569a770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fe4b56990d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b464ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b463ec00" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b463ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b463b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b463b1b0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b463b340"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b463b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b463bca0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b463bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b463a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b463a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b463a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b463a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b463a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe4b4638c00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe4b4638c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b4637020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b46372b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b46372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b4637630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b46377c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b4637950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b4637ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b4637c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe4b4634430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b4634430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b4633b00"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b46252a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b46333d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b46259d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe4b4618430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b4618430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe4b46187b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe4b4618940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe4b4618ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe4b4618c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b4638020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b4638020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b46383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe4b462d350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b462d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b462d6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b462d860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b462d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b4636020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4636020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b46363a0"/>
        <function-ref name="source" scoped="" ref="0x7fe4b4636530"/>
        <function-ref name="address" scoped="" ref="0x7fe4b46366c0"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b4636850"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b46369e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b4636b70"/>
        <function-ref name="type" scoped="" ref="0x7fe4b4636d00"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b4635020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b46351b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b4635340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b46354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe4b4624660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b4624660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b4623ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b4621460"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b46235b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4621b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b460d2f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b460d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b460d670"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b460d800"/>
        <function-ref name="start" scoped="" ref="0x7fe4b460d990"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b460db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b46052c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b46052c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b4605640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b46057d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b4605960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b4605af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b4605c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b4605e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe4b45f11d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fe4b45f11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe4b45f1650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b4607020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b4607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b46073a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b4607530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b46076c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b4607850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b46079e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b460c320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b460c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b460c6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b460c830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b460c9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b460cb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b460cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe4b46091d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe4b46091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b4609550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe4b45fe0f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45fe0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b45fe470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b45fe600"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b45fe790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b45fe920"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b45feab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b45fec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe4b45f3170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45f3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe4b45f34f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe4b45f3680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe4b45f3810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe4b45f39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b460b510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b460b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b460b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe4b4606020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b4606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b46063a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b4606530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b46066c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe4b45e9430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe4b45e9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe4b45e97b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe4b45e9940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe4b45e9ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe4b45e9c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe4b45e9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b4609800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b4609800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b4609b80"/>
        <function-ref name="source" scoped="" ref="0x7fe4b4609d10"/>
        <function-ref name="address" scoped="" ref="0x7fe4b4608020"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b46081b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b4608340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b46084d0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b4608660"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b46087f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b4608980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b4608b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b4608ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe4b45f9170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b45f9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe4b45f94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b45e4020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b45e43a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b45e4530"/>
        <function-ref name="start" scoped="" ref="0x7fe4b45e46c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b45e4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe4b45d39d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b45d39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe4b45d3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe4b45d2b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe4b45d2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe4b45d1020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe4b45d11b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe4b45d1340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe4b45d14d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe4b45d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe4b45d4020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b45d43a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b45d4530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b45d46c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b45d4850"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b45d49e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b45d4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe4b45df990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b45df990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b45dfd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45d7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b45d71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b45d7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b45d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe4b45d2080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b45d2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe4b45d2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe4b45d2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe4b45d2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe4b45d28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe4b45e0500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fe4b45e0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b45e0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe4b45d3020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b45d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b45d33a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b45d3530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b45d36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b45e31d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b45e31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b45e3550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b45e36e0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b45e3870"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b45e3a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b45e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe4b45d56f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fe4b45d56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b45d5a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45d5c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b45d5d90"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b45e0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b45e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe4b45e0bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe4b45e0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b45df020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b45df1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45df340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b45df4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b45df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe4b45d7840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b45d7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b45d7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b45ce390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45ce390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b45ce710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b45ce8a0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b45cea30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b45cebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b45cc330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b45cc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b45cc6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b45cc840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b45cc9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b45ccb60"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b45cccf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b45cce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b45cee80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b45cee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b45cd220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45cd3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b45cd540"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b45cd6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b45cd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b45cdb40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b45cdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b45cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b45cbe70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b45cbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b45c8220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b45c83b0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b45c8540"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b45c86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b45c77e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b45c77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b45c7b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b45c7cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b45c7e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b45c6030"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b45c61c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b45c6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fe4b45bcae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fe4b45bcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b45bce60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b45bb020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b45bb1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b45bb340"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b45bb4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b45bb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe4b45b0020" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b45b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b45b03a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b45b0530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b45b06c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b45b0850"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b45b09e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b45b0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fe4b45b5d30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe4b45b5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b45bc0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b45bc270"/>
        <function-ref name="modify" scoped="" ref="0x7fe4b45bc400"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b45bc590"/>
        <function-ref name="resend" scoped="" ref="0x7fe4b45bc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b45c8990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b45c8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b45c8d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45c7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b45c71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b45c7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b45c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe4b45b4020" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe4b45b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe4b45b43a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe4b45b4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe4b45c2020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fe4b45c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b45c23a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b45c2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b45aa660" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b45aa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b45aa9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b45aab70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b45aad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fe4b45beb50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b45beb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe4b45c3020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe4b45c31b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe4b45c3340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe4b45c34d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe4b45c3660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe4b45c37f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe4b45c3980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe4b45c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b45b47f0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b45b47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b45b4b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b45b4d00"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b45b3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b45b31b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b45b3340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b45b34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b45b3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b45b3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b45b37f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b45b3980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b45b3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe4b45c6640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b45c6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b45c69c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b45c6b50"/>
        <function-ref name="request" scoped="" ref="0x7fe4b45c6ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b45c6e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b45c4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fe4b45a5e40" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fe4b45a5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b45ad310"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b45ad4a0"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b45ad630"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b45ad7c0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b45ad950"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b45adae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fe4b45a09e0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fe4b45a09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b45a0d60"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b459f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fe4b45a1a10" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fe4b45a1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b45a1d90"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b45a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fe4b45a2a00" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fe4b45a2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b45a2d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b45a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fe4b4548b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b4548b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe4b4554020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe4b45541b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe4b4554340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe4b45544d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe4b4554660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe4b45547f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe4b4554980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe4b4554b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe4b4554ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe4b4554e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe4b4553020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe4b45531b0"/>
        <function-ref name="sync" scoped="" ref="0x7fe4b4553340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe4b45535d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe4b4553760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fe4b4547e60" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fe4b4547e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4546a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b4545020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fe4b4553a60" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b4553a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe4b4553de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe4b4547020"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe4b45471b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe4b4547340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe4b45474d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe4b4547660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe4b45477f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe4b4547980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4558720" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4558720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4558aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4558c30"/>
        <function-ref name="request" scoped="" ref="0x7fe4b4558dc0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4555020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b45551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fe4b45407e0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b45407e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe4b4540b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe4b4540cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe4b4540e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe4b453f030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe4b453f1c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe4b453f350"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe4b453f4e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe4b453f670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe4b453f800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe4b453f990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe4b453fb20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe4b453fcb0"/>
        <function-ref name="sync" scoped="" ref="0x7fe4b453fe40"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe4b453e120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe4b453e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fe4b45228e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b45228e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4522c60"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4522df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fe4b453bde0" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b453bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe4b453a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fe4b453a7f0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fe4b453a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4536090"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4537090"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b4537a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4537550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b4536550"/>
        <function-ref name="start" scoped="" ref="0x7fe4b45396a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4539bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fe4b4523710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4523710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4523a90"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4523c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fe4b4535ce0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fe4b4535ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b45340a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4534230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b45343c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4534550"/>
        <function-ref name="get" scoped="" ref="0x7fe4b45346e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4534870"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4534a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4534b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fe4b453d9b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fe4b453d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b453c5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b453ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fe4b4510820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fe4b4510820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4510ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4510d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fe4b45211c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b45211c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4521540"/>
        <function-ref name="write" scoped="" ref="0x7fe4b45216d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fe4b4521a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4521a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4521df0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4520020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fe4b4526550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4526550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b45268d0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4526a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe4b452caf0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b452caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe4b452ce70"/>
        <function-ref name="changed" scoped="" ref="0x7fe4b452f030"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe4b452f1c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe4b452f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe4b4536a40" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe4b4536a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4536dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4535020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b45351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4535340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b45354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4535660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b45357f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4535980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fe4b451f120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b451f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b451f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fe4b4533020" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fe4b4533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b45333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4533530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b45336c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4533850"/>
        <function-ref name="get" scoped="" ref="0x7fe4b45339e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4533b70"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4533d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4532020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b45413c0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b45413c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b4541740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fe4b4522020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b45223a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4522530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fe4b451fa40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b451fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b451fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe4b451e1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe4b451e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b451e550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b451e6e0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b451e870"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b451ea00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b451eb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fe4b451cd90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fe4b451cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b451b180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b451b310"/>
        <function-ref name="request" scoped="" ref="0x7fe4b451b4a0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b451b630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b451b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fe4b453e5b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe4b453e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe4b453e930"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe4b453eac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe4b453ec50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe4b453ede0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe4b453d020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe4b453d1b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe4b453d340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe4b453d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fe4b4526e00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4526e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b45231c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4523350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fe4b4524be0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4524be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4526020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b45261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fe4b451d2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b451d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b451d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b451ba80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b451ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b451be00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b451a020"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b451a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b451a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b451a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b451a660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b451a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b451ae30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b451a980"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b451ab10"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b451aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fe4b4512940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fe4b4512940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4512cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4512e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4541a30" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4541a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4541db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4540020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b45401b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4540340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b45404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fe4b452e5a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b452e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b452e920"/>
        <function-ref name="write" scoped="" ref="0x7fe4b452eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fe4b4527c00" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4527c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b452e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b452e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fe4b4532400" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fe4b4532400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4532780"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4532910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b4532aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4532c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fe4b451c020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fe4b451c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b451c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b451c530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b451c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b451c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b451c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fe4b451d9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b451d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b451dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b449b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b449b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b449bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fe4b4497220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4497220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4495b30"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4496a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b44954e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4495020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b4494020"/>
        <function-ref name="start" scoped="" ref="0x7fe4b4496090"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b44965a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b4491260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b4491260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b44915e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fe4b4491af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe4b4491af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b4456390"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b4457360"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b4457ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b4457820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b4456850"/>
        <function-ref name="start" scoped="" ref="0x7fe4b4458970"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b4458e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b329cca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b329cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b32984e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b32994e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3299e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b32999a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b32989a0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b329aae0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3299020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b329c450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b329c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b329c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b3294c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b3294c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b32914e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b32924e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3292e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b32929a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b32919a0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3293a80"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3292020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b32943d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b32943d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3294750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe4b327b440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b327b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b327b7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b327b950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b327bae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b327bc70"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b327be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe4b327e9d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b327e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b327ed50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b327d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b327d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b327d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b327d4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b327d660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b327d7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b327d980"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b327db10"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b327dca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b327de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe4b327c120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b327c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b327c4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b327c630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b327c7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b327c950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b327cae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b327cc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b327ce00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b327b020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b327b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe4b32710c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe4b32710c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b3271440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe4b32715d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe4b3271760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe4b32718f0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3271a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe4b3274710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3274710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3274a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b3274c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b3274db0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3273020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b32731b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3273340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b32734d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3273660"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b32737f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b3273980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b3273b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b32785b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b32785b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3275df0"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3276df0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b32757a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b32752e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b32742e0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3276420"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3276930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3279ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3279ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b32780a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe4b3273da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b3273da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b3272180"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b3272310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b32724a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b3272630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b32727c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b3272950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b3272ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b3272c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b3272e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b447a080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b447a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4479020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b44799a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b44794e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4479e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe4b44720f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fe4b44720f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4470020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b44709a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b44704e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4470e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b4475cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b4475cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b4474b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b4473550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b4473090"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b4473a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe4b328d020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe4b328d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b328b870"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b328c840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b328b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b328cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b328bd30"/>
        <function-ref name="start" scoped="" ref="0x7fe4b328de30"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b328c380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe4b3287780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe4b3287780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3284020"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3285020"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b32859a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b32854e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b32844e0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b32865d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3286ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b328a3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b328a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3289240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3289bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3289700"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b32870d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fe4b4450090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fe4b4450090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4450410"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b44505a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4450730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44508c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4450a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4450be0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4450d70"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b444f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fe4b444f390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fe4b444f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b444f710"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b444f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b444fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b444fbc0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b444fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b444d020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b444d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b444d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fe4b444d6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fe4b444d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b444da20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b444dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b444dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b444c020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b444c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b444c340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b444c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b444c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fe4b4452e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe4b4452e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4451210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b44513a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4451530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44516c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4451850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b44519e0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4451b70"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4451d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fe4b444bce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fe4b444bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b444a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b444a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b444a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b444a550"/>
        <function-ref name="get" scoped="" ref="0x7fe4b444a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b444a870"/>
        <function-ref name="set" scoped="" ref="0x7fe4b444aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b444ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fe4b4499b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fe4b4499b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4452020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b44521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4452340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44524d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4452660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b44527f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4452980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4452b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fe4b444c9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fe4b444c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b444cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b444b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b444b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b444b340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b444b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b444b660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b444b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b444b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b44472f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b44472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4447670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4447800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4447990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4447b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4447cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4447e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4446020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b44461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4446340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b44464d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4446660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b44467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4446980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4446c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4446da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4448020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b44483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4448530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b44486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4448850"/>
        <function-ref name="get" scoped="" ref="0x7fe4b44489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4448b70"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4448d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4447020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4443de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4443de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4442180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4442310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b44424a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4442630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44427c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4442950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4442ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4442c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4442e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4441020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b44411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4441340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b44414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4441760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b44418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4444b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4444b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4443020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b44431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4443340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44434d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4443660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b44437f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4443980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4443b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b443e930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b443e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b443ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b443ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b443d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b443d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b443d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b443d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b443d660"/>
        <function-ref name="get" scoped="" ref="0x7fe4b443d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b443d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b443db10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b443dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b443de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b443c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b443c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b443c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b443f710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b443f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b443fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b443fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b443fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b443e020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b443e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b443e340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b443e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b443e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4439480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4439480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4439800"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4439990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4439b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4439cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4439e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4437020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b44371b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4437340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b44374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4437660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b44377f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4437980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4437b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4437da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4436020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b443a1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b443a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b443a550"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b443a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b443a870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b443aa00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b443ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b443ad20"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4439020"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b44391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b4433020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b4433020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b44333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4433530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b44336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4433850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b44339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4433b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4433d00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4432020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b44321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4432340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b44324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4432660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b44327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4432a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4432c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4435d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4435d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4434180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4434310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b44344a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4434630"/>
        <function-ref name="get" scoped="" ref="0x7fe4b44347c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4434950"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4434ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4434c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b442fde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b442fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b442e180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b442e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b442e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b442e630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b442e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b442e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b442eae0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b442ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b442ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b442d020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b442d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b442d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b442d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b442d760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b442d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b4430b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b4430b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b442f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b442f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b442f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b442f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b442f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b442f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b442f980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b442fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b442a930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b442a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b442acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b442ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4429020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b44291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4429340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b44294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4429660"/>
        <function-ref name="get" scoped="" ref="0x7fe4b44297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4429980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4429b10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4429ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4429e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4428020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b44282b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4428440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b442b710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b442b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b442ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b442bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b442bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b442a020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b442a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b442a340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b442a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b442a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fe4b4415150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fe4b4415150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe4b44154d0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4415660"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b44157f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe4b4415980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fe4b4415d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fe4b4415d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4414180"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4414310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b44144a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4414630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fe4b4414a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe4b4414a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4414da0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b4410020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b44101b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b4410340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fe4b43fb8f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fe4b43fb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe4b43fbc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe4b43fbe00"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b43f9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b43f91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b43f9340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe4b43f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe4b440da20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe4b440da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe4b440dda0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b43fc020"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b43fc1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe4b43fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe4b43fc5d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe4b43fc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe4b43fc950"/>
        <function-ref name="getControl" scoped="" ref="0x7fe4b43fcae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b43fcc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe4b43fce00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe4b43fb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b43fb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe4b43fb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe4b43fb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe4b43fb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fe4b43f97a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b43f97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b43f9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b43f9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b43f9e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b43f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b43f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b43f8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b43f84d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b43f8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b43f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b43f8980"/>
        <function-ref name="set" scoped="" ref="0x7fe4b43f8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b43f8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b43f8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b43f7120"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b43f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe4b43f3480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b43f3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b43f3800"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b43f3990"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b43f3b20"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b43f3cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b43f3e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b43f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe4b43f48a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe4b43f48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b43f4c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b43f4db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b43f3020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b43f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe4b43f0480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe4b43f0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b43f0800"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b43f0990"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b43f0b20"/>
        <function-ref name="edge" scoped="" ref="0x7fe4b43f0cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fe4b43f0e40"/>
        <function-ref name="getValue" scoped="" ref="0x7fe4b43ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe4b43f18b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe4b43f18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b43f1c30"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b43f1dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b43f0020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b43f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe4b4095e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4095e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4093410"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40935a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe4b409e160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe4b409e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe4b4098e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4098e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4097210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe4b4092880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4092880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4092c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4092d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe4b408a0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe4b408a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408a420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe4b40910a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe4b40910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4091420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40915b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe4b407e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b407e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b407e880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b407ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe4b4081500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b4081500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4081880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4081a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe4b409d490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b409d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe4b4087880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe4b4087880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4087c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4087d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe4b4082500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b4082500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4082880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4082a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe4b4097e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b4097e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4096210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe4b4096e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4096e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4095210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe4b408c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b408c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408cc00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe4b408e0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe4b408e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408e420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe4b4091880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4091880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4091c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4091d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b40a0a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b40a0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b40a0e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b409f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b409f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe4b409ce00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b409ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe4b409b490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b409b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe4b4085c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4085c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40840a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4084230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe4b409bbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b409bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4099020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe4b4082ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4082ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40810a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4081230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe4b409c160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b409c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe4b40870a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe4b40870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4087420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe4b4096670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4096670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40969f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4096b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe4b4097670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4097670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40979f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4097b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe4b409fad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b409fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe4b40880a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b40880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4088420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40885b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe4b408a880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe4b408a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408ac00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe4b4088880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b4088880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4088c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4088d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe4b4080ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b4080ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b407e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b407e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe4b4081ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b4081ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40800a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4080230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe4b408e880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe4b408e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408ec00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe4b40890a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe4b40890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4089420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe4b4083ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4083ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40820a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4082230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe4b4090880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b4090880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4090c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4090d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe4b407ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b407ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b407d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b407d230"/>
        <function-ref name="write" scoped="" ref="0x7fe4b407d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b407d550"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b407d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe4b409f480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b409f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe4b4098670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe4b4098670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40989f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4098b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe4b4095670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4095670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40959f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4095b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe4b408b0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b408b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408b420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe4b40900a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b40900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4090420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe4b408b880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b408b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408bc00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe4b4093870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4093870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4093bf0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4093d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe4b409e7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b409e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe4b40920a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b40920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4092420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b40a4e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b40a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b40a01c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b40a0350"/>
        <function-ref name="request" scoped="" ref="0x7fe4b40a04e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b40a0670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b40a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe4b40992f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b40992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4099670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe4b4098020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe4b4098020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe4b4083500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b4083500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4083880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4083a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe4b4084ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4084ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40830a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4083230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe4b409c7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b409c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe4b4084500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b4084500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4084880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4084a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe4b4080500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe4b4080500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4080880"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4080a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe4b408c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b408c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408c420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe4b4089880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe4b4089880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4089c00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4089d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe4b409ee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b409ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe4b409dae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b409dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b409de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe4b408f0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b408f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408f420"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe4b4099940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b4099940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4099cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe4b408f880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe4b408f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b408fc00"/>
        <function-ref name="write" scoped="" ref="0x7fe4b408fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe4b40850a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe4b40850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4085820"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40859b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe4b407d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b407d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b407dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b407c020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b407c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b407c340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b407c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fe4b43ad630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fe4b43ad630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b43ad9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b43adb40"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43adcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b43ade60"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b43ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b43af670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b43af9f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b43afb80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b43afd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fe4b43ac8c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fe4b43ac8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b43acc40"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43acdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fe4b43ab6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fe4b43ab6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b43aba70"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43abc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b43b2950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b43b2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b43b2cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b43b2e60"/>
        <function-ref name="request" scoped="" ref="0x7fe4b43af020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b43af1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b43af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fe4b43aa510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fe4b43aa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b43aa890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fe4b4394680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b4394680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b4394a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b4394b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fe4b43a4bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fe4b43a4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b43a3020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b43a31b0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43a3340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b43a34d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b43a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b43a9920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b43a9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b43a9ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b43a9e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b43a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fe4b439d080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe4b439d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe4b439d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fe4b439c020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fe4b439c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b439c3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b439c530"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b439c6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b439c850"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b439c9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b439cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe4b439f400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe4b439f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b439f780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b439f910"/>
        <function-ref name="request" scoped="" ref="0x7fe4b439faa0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b439fc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b439fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fe4b43a2020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fe4b43a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b43a23a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43a2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fe4b43a2db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fe4b43a2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b43a1180"/>
        <function-ref name="write" scoped="" ref="0x7fe4b43a1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b439cdf0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b439cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b439b1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b439b350"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b439b4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b439b670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b439b800"/>
        <function-ref name="get" scoped="" ref="0x7fe4b439b990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b439bb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b43951b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b439bcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b439be40"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b4395020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b43a5810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b43a5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b43a5b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b43a5d20"/>
        <function-ref name="request" scoped="" ref="0x7fe4b43a4020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b43a41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b43a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fe4b438f120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fe4b438f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b438f4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b438f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fe4b43a1ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fe4b43a1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b439f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b4334770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b4334770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b4334af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b4334c80"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b4334e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b4331020"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b43311b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b4331340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b4330280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b4330280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b4330600"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b4330790"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b4330920"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b4330ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b4330c40"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b4330dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b432c020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b432c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b432c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b432cb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b432cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b432b020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b432b1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b432b340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b432b4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b432b660"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b432b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe4b40c9020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b40c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b40c93a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b40c9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe4b40ca8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe4b40ca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe4b40cac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4311c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4311c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b40ca020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b40ca1b0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b40ca340"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b40ca4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b40ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b31a6440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b31a6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b31a67c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b31a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe4b3182d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b3182d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3181180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3181310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe4b31815a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b31815a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b3181920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe4b31a6be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe4b31a6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe4b3182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b31a7770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b31a7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b31a7af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b31a7c80"/>
        <function-ref name="request" scoped="" ref="0x7fe4b31a7e10"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b31a6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b31a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe4b31822b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b31822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe4b3182630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe4b31827c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe4b3182950"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3182ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe4b42fd6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b42fd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b42fda30"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b42fdbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe4b42fb850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b42fb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b42fbbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b42fbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe4b42f9a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b42f9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b42f9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe4b42fc020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe4b42fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe4b42fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe4b42fa690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe4b42fa690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b42faa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b42faba0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b42fad30"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b42f9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b42f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b42ff430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b42ff430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b42ff7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b42ff940"/>
        <function-ref name="request" scoped="" ref="0x7fe4b42ffad0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b42ffc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b42ffdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe4b42fc6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b42fc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe4b42fca20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe4b42fcbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe4b42fcd40"/>
        <function-ref name="write" scoped="" ref="0x7fe4b42fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe4b42f72a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b42f72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b42f7620"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b42f77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe4b42a0250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b42a0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b42a05f0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b42a0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe4b429ec50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe4b429ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b429d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b429d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe4b429c3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe4b429c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe4b429c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe4b42a0a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe4b42a0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe4b42a0d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fe4b429ca50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe4b429ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b429cdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b429b020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b429b1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b429b340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b429b4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b429b660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b429b7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b429b980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b429bb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b429bca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b429be30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b429a020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b429a1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b429a440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b429a5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b429a760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b429a8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b429aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b429ac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b429ada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b4299020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b42991b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b4299340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b42994d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b4299660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b42999f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b4299b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b4299d10"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b4298020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b42981b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b4298340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b42984d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b4298660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b42987f0"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b4298980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4298b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b4298ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b4298e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b4297020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b42971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b4297c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b4297c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b4296020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b42961b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b4296340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b42964d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b4296660"/>
        <function-ref name="get" scoped="" ref="0x7fe4b42967f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b4296980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b4295020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4296ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b4296b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b4296e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe4b429d5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe4b429d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b429d950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b429dae0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b429dc70"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b429de00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b429c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b42a1470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b42a1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b42a1810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b42a19a0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b42a1b30"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b42a1cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b42a1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe4b429e060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe4b429e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe4b429e3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe4b429e570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe4b429e700"/>
        <function-ref name="write" scoped="" ref="0x7fe4b429e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe4b4297480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe4b4297480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b4297800"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4297990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fe4b42952f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fe4b42952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b4295670"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b4295800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fe4b42885e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe4b42885e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b4288960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe4b4289d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b4289d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b42880e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b4288270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe4b428d020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b428d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b428d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b428d530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b428d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b428d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b428d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b428db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b428dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b428c020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b428c1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b428c340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b428c4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b428c660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b428c7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b428ca80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b428cc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b428cda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b428b020"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b428b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b428b340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b428b4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b428b660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b428b7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b428b980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b428bb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b428bca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b428a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b428a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b428a540"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b428a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b428a860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b428a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b428ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b428ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b4289020"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b42891b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4289340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b42894d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b4289660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b42897f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b4289980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe4b424cb20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe4b424cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b424b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b424b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b424b340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b424b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b424b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b424b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b424b980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b424bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b424bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b424be30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b424a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b424a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b424a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b424a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b424a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b427f780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b427f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b427fb00"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b427fc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fe4b424ab20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fe4b424ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4249020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b42491b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4249340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b42494d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4249660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b42497f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4249980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4249b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4249ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4249e30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4248020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b42481b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4248340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b42485d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4248760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fe4b4248b20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fe4b4248b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b4247020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b42471b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b4247340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b42474d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b4247660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b42477f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4247980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4247b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4247ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4247e30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b4246020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b42461b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b4246340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b42465d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b4246760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fe4b4287c70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe4b4287c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b4283020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b42831b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b4283340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b42834d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b4283660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b42837f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b4283980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b4283b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b4283ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b4283e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b4282020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b42821b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b4282340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b42825d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b4282760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b42828f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b4282a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b4282c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b4282da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b4281020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b42811b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b4281340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b42814d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b4281660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b42817f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b4281b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b4281d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b4280020"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b42801b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b4280340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b42804d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b4280660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b42807f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b4280980"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b4280b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b4280ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b4280e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b427f020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b427f1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b427f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fe4b4255d10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fe4b4255d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe4b427d0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe4b427d270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe4b427d400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe4b427d590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe4b427d720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe4b427d8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe4b427da40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe4b427dbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b427dd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe4b427c020"/>
        <function-ref name="getData" scoped="" ref="0x7fe4b427c1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe4b427c340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe4b427c4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe4b427c760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe4b427c8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe4b427ca80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe4b427cc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe4b427cda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe4b4254020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe4b42541b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe4b4254340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe4b42544d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe4b4254660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe4b42547f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe4b4254980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe4b4254d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe4b4253020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe4b42531b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe4b4253340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe4b42534d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe4b4253660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe4b42537f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe4b4253980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe4b4253b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe4b4253ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe4b4253e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe4b4252020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe4b42521b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe4b4252340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe4b42524d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe4b4252660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe4b42527f0"/>
        <function-ref name="setData" scoped="" ref="0x7fe4b4252980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe4b4252b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe4b4252ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe4b4252e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe4b4251020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe4b42511b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe4b4251340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe4b42518d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe4b4251a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe4b4251bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe4b4251d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe4b4250020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe4b42501b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe4b4250340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe4b42504d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe4b4250660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe4b42507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fe4b424eb20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fe4b424eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b424d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b424d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b424d340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b424d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b424d660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b424d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b424d980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b424db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b424dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b424de30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b424c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b424c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b424c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b424c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b424c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe4b427e150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b427e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b427e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe4b4250bb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe4b4250bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b424f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b424f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b424f340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b424f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b424f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b424f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b424f980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b424fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b424fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b424fe30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b424e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b424e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b424e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b424e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b424e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b317ad90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b317ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b3178180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b3178310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fe4b3172020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe4b3172020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b31723a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b316b5d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b316b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b316b950"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b316bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fe4b3172630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe4b3172630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe4b31729b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe4b3172b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe4b3172cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe4b3172e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe4b3171020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe4b31711b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe4b3171340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe4b31714d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b3171660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe4b31717f0"/>
        <function-ref name="getData" scoped="" ref="0x7fe4b3171980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe4b3171b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe4b3171ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe4b3170020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe4b31701b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe4b3170340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe4b31704d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe4b3170660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe4b31707f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe4b3170980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe4b3170b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe4b3170ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe4b3170e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe4b316f020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe4b316f1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe4b316f540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe4b316f6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe4b316f860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe4b316f9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe4b316fb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe4b316fd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe4b316e020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe4b316e1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe4b316e340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe4b316e4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe4b316e660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe4b316e7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe4b316e980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe4b316eb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe4b316eca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe4b316ee30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe4b316d020"/>
        <function-ref name="setData" scoped="" ref="0x7fe4b316d1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe4b316d340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe4b316d4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe4b316d660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe4b316d7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe4b316d980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe4b316db10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe4b316c420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe4b316c5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe4b316c740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe4b316c8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe4b316ca60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe4b316cbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe4b316cd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe4b316b020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe4b316b1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe4b316b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe4b3173760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe4b3173760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b3173ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b3173c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b317a140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b317a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b317a4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b317a650"/>
        <function-ref name="request" scoped="" ref="0x7fe4b317a7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b317a970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b317ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe4b3178d40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe4b3178d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b31770e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b3177270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b3177400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b3177590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b3177720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b31778b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b3177a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b3177bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b3177d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b3176020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b31761b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b3176340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b31764d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b3176760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b31768f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b3176a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b3176c10"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b3176da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b3175020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b31751b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b3175340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b31754d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b3175660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b31757f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b3175980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b3175d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b3174020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b31741b0"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b3174340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b31744d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b3174660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b31747f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b3174980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b3174b10"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b3174ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b3174e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b3173020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b31731b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b3173340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b31734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b31785a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b31785a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b3178920"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b3178ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b41a62c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b41a62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b41a6640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b41a67d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b41a58a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b41a58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b41a5c20"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b41a5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b41a94d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b41a94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b41a9850"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b41a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b41a7020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b41a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b41a73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b41a7530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b41a76c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b41a7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b41a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe4b41a83f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b41a83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b41a8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b41a6ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b41a6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b41a6e50"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b41a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe4b41a1e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b41a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b41a0210"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b41a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe4b41a2060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe4b41a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b41a2400"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b41a2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fe4b41a1840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fe4b41a1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b41a1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe4b41a2990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe4b41a2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b41a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fe4b41a1060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fe4b41a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe4b41a13e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe4b41a1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b419d850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b419d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b419dbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b419dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b419a570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b419a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b419a910"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b419aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b419c020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b419c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b419c3a0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b419c530"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b419c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b419c850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b419c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b419ea80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b419ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b419ee20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b419d020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b419d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b419d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b419d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b419cc30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b419cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b419a020"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b419a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3106020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3106020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b31063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe4b3106630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b3106630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b31069b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b3106b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b3106cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b3106e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe4b31026c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe4b31026c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe4b3102a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b3102bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe4b3100400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe4b3100400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe4b31007a0"/>
        <function-ref name="configure" scoped="" ref="0x7fe4b3100930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe4b3100bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe4b3100bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b30ff020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b30ff1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b30ff340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b30ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe4b3102e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe4b3102e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b31011e0"/>
        <function-ref name="requested" scoped="" ref="0x7fe4b3101370"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3101500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3101690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe4b3101820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b30ff720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b30ff720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b30ffaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b30ffc30"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b30ffdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b30fd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b30fd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b30fd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b30fd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b30fdb10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b30fd7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b30fd660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b30fd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3103850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3103850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3103bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3103d80"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3102020"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b31021b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3102340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe4b3101a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe4b3101a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe4b3101df0"/>
        <function-ref name="userId" scoped="" ref="0x7fe4b3100020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe4b30fdde0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fe4b30fdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b30fc180"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b30fc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fe4b4193540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe4b4193540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe4b41938c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe4b4193a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe4b4193be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe4b4193d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe4b4190020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe4b41901b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe4b4190340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe4b41904d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b4190660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe4b41907f0"/>
        <function-ref name="getData" scoped="" ref="0x7fe4b4190980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe4b4190b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe4b4190ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe4b418f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe4b418f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe4b418f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe4b418f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe4b418f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe4b418f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe4b418f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe4b418fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe4b418fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe4b418fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe4b418e020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe4b418e1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe4b418e540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe4b418e6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe4b418e860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe4b418e9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe4b418eb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe4b418ed10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe4b418d020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe4b418d1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe4b418d340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe4b418d4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe4b418d660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe4b418d7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe4b418d980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe4b418db10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe4b418dca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe4b418de30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe4b418c020"/>
        <function-ref name="setData" scoped="" ref="0x7fe4b418c1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe4b418c340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe4b418c4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe4b418c660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe4b418c7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe4b418c980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe4b418cb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe4b418b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe4b418b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe4b418b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe4b418b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe4b418ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe4b418bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe4b418bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe4b418a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe4b418a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe4b418a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fe4b4180250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fe4b4180250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe4b41805d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe4b4180760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe4b41808f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe4b4180a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe4b4180c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe4b4180da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe4b417f020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe4b417f1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe4b417f340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe4b417f4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe4b417f660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe4b417f7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe4b417f980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe4b417fc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe4b417fda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe4b417e020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe4b417e1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe4b417e340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe4b417e4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe4b417e660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe4b417e7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe4b417e980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe4b417eb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe4b417eca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b417ee30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe4b417d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe4b417d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe4b417d540"/>
        <function-ref name="tx" scoped="" ref="0x7fe4b417d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe4b417d860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe4b417d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe4b417db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe4b417dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe4b417c020"/>
        <function-ref name="rx" scoped="" ref="0x7fe4b417c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe4b417c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe4b417c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe4b417c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe4b417c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe4b417c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe4b417acb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe4b417acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b41790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b4179230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b41793c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b4179550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b41796e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b4179870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b4179a00"/>
        <function-ref name="get" scoped="" ref="0x7fe4b4179b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b4179d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b4178020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b41781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b4178340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b41784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b4178760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b41788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fe4b4187430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fe4b4187430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe4b41877b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe4b4187940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe4b4187ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe4b4187c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe4b4187df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe4b4186020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe4b41861b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe4b4186340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b41864d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe4b4186660"/>
        <function-ref name="getData" scoped="" ref="0x7fe4b41867f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe4b4186980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe4b4186b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe4b4186da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe4b4185020"/>
        <function-ref name="getIV" scoped="" ref="0x7fe4b41851b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe4b4185340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe4b41854d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe4b4185660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe4b41857f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe4b4185980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe4b4185b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe4b4185ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe4b4185e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe4b4184020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe4b41843b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe4b4184540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe4b41846d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe4b4184860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe4b41849f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe4b4184b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe4b4184d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe4b4183020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe4b41831b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe4b4183340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe4b41834d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe4b4183660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe4b41837f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe4b4183980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe4b4183b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe4b4183ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe4b4183e30"/>
        <function-ref name="setData" scoped="" ref="0x7fe4b4182020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe4b41821b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe4b4182340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe4b41824d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe4b4182660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe4b41827f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe4b4182980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe4b4181020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe4b41811b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe4b4181340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe4b41814d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe4b4181660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe4b41817f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe4b4181980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe4b4181b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe4b4181ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe4b4181e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe4b417cd40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe4b417cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b417b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b417b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b417b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b417b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b417b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b417b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b417ba40"/>
        <function-ref name="get" scoped="" ref="0x7fe4b417bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b417bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b417a020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b417a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b417a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b417a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b417a760"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b417a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe4b4064c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4064c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4063210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe4b406fda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe4b406fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe4b4068b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b4068b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4066020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe4b4062670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4062670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40629f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4062b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe4b405be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe4b405be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4059210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe4b4062e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe4b4062e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4061210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe4b404e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b404e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b404e670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe4b40502f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b40502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4050670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4050800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe4b406c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b406c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe4b4056670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe4b4056670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40569f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4056b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe4b40512f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b40512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4051670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4051800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe4b4066c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b4066c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4065020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe4b4065c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4065c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4064020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe4b405c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b405c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe4b405ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe4b405ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405d210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe4b4061670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4061670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40619f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4061b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b4070760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b4070760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b4070ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b4070c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b4070e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe4b406baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b406baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe4b406a120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b406a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe4b4055a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4055a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4055df0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4054020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe4b406a870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b406a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe4b4051ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4051ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4051e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe4b406cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b406cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe4b4057e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe4b4057e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4056210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe4b4065480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4065480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4065800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4065990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe4b4066480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b4066480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4066800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4066990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe4b406f750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b406f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe4b4058e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b4058e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4057210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe4b4059670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe4b4059670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40599f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4059b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe4b4057670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b4057670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40579f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4057b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe4b404fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b404fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b404fe50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe4b4050ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b4050ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4050e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe4b405d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe4b405d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe4b4059e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe4b4059e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4058210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe4b4053ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4053ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4053e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4051020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe4b405f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b405f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe4b404ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b404ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b404ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b404d020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b404d340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b404d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe4b406f100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b406f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe4b4068370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe4b4068370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40686f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4068880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe4b4064480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4064480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4064800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4064990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe4b405ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b405ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405b210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe4b4061e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4061e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405f210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe4b405b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b405b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe4b4063670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4063670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40639f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4063b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe4b406e450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b406e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe4b4063e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b4063e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4062210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b4071a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b4071a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4071e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4070020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b40701b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4070340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b40704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe4b4069020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b4069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe4b4069cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe4b4069cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40680a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe4b40532f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b40532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4053670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4053800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe4b4054ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4054ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4054e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe4b406b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b406b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe4b40542f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b40542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4054670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4054800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe4b404f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe4b404f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b404f670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe4b405de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b405de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405c210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe4b4058670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe4b4058670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40589f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4058b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe4b406eaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b406eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe4b406c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b406c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b406caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe4b405fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b405fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405e210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe4b4069670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b4069670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40699f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe4b405e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe4b405e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b405e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b405eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe4b4056e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe4b4056e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4055610"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40557a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe4b404d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b404d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b404db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b404dcb0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b404de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b404c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b404c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe4b4038c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b4038c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4036210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe4b4042da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe4b4042da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4041180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe4b403bb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b403bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b403a020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b403a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe4b4035670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b4035670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40359f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4035b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe4b402ee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe4b402ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402d210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe4b4035e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe4b4035e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4034210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe4b40212f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b40212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4021670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4021800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe4b40242f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b40242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4024670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4024800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe4b4040120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b4040120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40404a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe4b4029670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe4b4029670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40299f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4029b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe4b40252f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b40252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4025670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4025800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe4b403ac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b403ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4039020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe4b4039c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b4039c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4038020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe4b402f670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b402f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe4b4032e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe4b4032e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4030210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe4b4034670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b4034670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40349f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4034b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b4043760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b4043760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b4043ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b4043c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b4043e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe4b403faa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b403faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe4b403d120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b403d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe4b4028a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b4028a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4028df0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4027020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe4b403d870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b403d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe4b4025ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b4025ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4025e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4024020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe4b4040dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b4040dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe4b402be50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe4b402be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4029210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe4b4039480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b4039480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4039800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4039990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe4b403a480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b403a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b403a800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b403a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe4b4042750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b4042750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4042ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe4b402ce50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b402ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402b210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe4b402d670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe4b402d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe4b402b670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b402b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe4b4022ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b4022ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4022e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4021020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe4b4024ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b4024ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4024e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4022020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe4b4030670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe4b4030670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40309f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4030b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe4b402de50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe4b402de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402c210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe4b4026ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b4026ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4026e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe4b4033670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b4033670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40339f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4033b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe4b4021ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b4021ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b4021e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b4020020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40201b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b4020340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b40204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe4b4042100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b4042100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4042480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe4b403b370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe4b403b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b403b6f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b403b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe4b4038480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b4038480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4038800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4038990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe4b402fe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b402fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402e210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe4b4034e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b4034e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4033210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe4b402e670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b402e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe4b4036670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b4036670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40369f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4036b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe4b4041450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b4041450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b40417d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe4b4036e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b4036e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4035210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b40459e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b40459e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b4045d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b4043020"/>
        <function-ref name="request" scoped="" ref="0x7fe4b40431b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b4043340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b40434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe4b403c020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b403c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe4b403ccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe4b403ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe4b40262f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b40262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4026670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4026800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe4b4027ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b4027ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4027e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe4b403f450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b403f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe4b40272f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b40272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4027670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4027800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe4b40222f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe4b40222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4022670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4022800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe4b4030e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b4030e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402f210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe4b402c670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe4b402c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b402c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b402cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe4b4041aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b4041aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4041e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe4b4040770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b4040770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b4040af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe4b4033e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b4033e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4032210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe4b403c670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b403c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b403c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe4b4032670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe4b4032670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b40329f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4032b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe4b4029e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe4b4029e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b4028610"/>
        <function-ref name="write" scoped="" ref="0x7fe4b40287a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe4b40207a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b40207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b4020b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b4020cb0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b4020e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b401f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b401f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fe4b4018b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b4018b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe4b4015020"/>
        <function-ref name="changed" scoped="" ref="0x7fe4b40151b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe4b4015340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe4b40154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fe4b4017d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b4017d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe4b40010e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fe4b3ffd310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe4b3ffd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe4b3ffd690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fe4b3ffa880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3ffa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3ffac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fe4b3fef020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3fef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3fef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fe4b3fe5bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe4b3fe5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3fe8020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3fe81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fe4b3fe8530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fe4b3fe8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3fe88b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3fe8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fe4b3fe9140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe4b3fe9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3fe94c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fe4b3feec50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe4b3feec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3fd5020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3fd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fe4b3fd5540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fe4b3fd5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3fd58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3fd5a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3fd5be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3fd5d70"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3fd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3fd31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3fd3340"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3fd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe4b3fcb950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fcb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe4b3fce780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fe4b3fd0150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe4b3fd0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3fd04d0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3fd0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fe4b3fd09f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fe4b3fd09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3fd0d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3fcf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3fcf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3fcf340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3fcf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3fcf660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3fcf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3fcf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe4b3fd2ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fd2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe4b3fabae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe4b3fa9a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe4b3fa9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe4b3fa88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b3f98020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b3f98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3f98e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3f97800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3f97340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b3f97cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fe4b3f93530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe4b3f93530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3f923d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3f92d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3f92890"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b3f90260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe4b3f8b020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe4b3f8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3f8b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe4b3f8b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe4b3f8b6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f8b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe4b3f8b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3f8bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fe4b3f8bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3f8a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b3f8a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe4b3f8a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe4b3f8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe4b3f8fe50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b3f8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aaa20"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe4b56aad90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3f8eca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3f8d670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3f8d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b3f8db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fe4b3fd6590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fe4b3fd6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3fd6910"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3fd6aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3fd6c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3fd6dc0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f86020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f861b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f86340"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f864d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe4b3f84c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe4b3f84c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3f83020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3f831b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe4b3f83340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3f834d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3f83660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe4b3f837f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f83980"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f83b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe4b3f83ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe4b3f83e30"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f82020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe4b3f821b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe4b3f82340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe4b3f825d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f82760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe4b3f859e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe4b3f859e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3f85d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3f84020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3f841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3f84340"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f84660"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f847f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f84980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b3f87a20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f87a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3f87da0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3f7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b3f6ecb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3f6ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b3f6d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b3f6d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b3f6d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b3f6d550"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b3f6d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b3f6d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fe4b3f6a990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe4b3f6a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3f6ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fe4b3f6e020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe4b3f6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3f6e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3f6e530"/>
        <function-ref name="modify" scoped="" ref="0x7fe4b3f6e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3f6e850"/>
        <function-ref name="resend" scoped="" ref="0x7fe4b3f6e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b3f716c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3f71a40"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3f71bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fe4b3f6c150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fe4b3f6c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3f6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b3f5f970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3f5f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b3f5fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b3f5fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b3f5e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b3f5e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b3f5e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b3f5e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe4b3f57950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe4b3f57950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3f54020"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3f54750"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3f55780"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f54e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fe4b3f3f020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3f3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f3f3a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f3f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fe4b3f3f890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b3f3f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f3fc10"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f3fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fe4b3f5e900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe4b3f5e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3f5ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fe4b3f43530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3f43530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3f438b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fe4b3f52880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fe4b3f52880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe4b3f52c00"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b3f52d90"/>
        <function-ref name="captured" scoped="" ref="0x7fe4b3f51020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe4b3f511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fe4b3f5dae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fe4b3f5dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3f59390"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3f5a360"/>
        <function-ref name="startAt" scoped="" ref="0x7fe4b3f5ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b3f5a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe4b3f59850"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3f5c970"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3f5ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe4b3f59d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3f59d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3f580a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3f58230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3f583c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3f58550"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3f586e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3f58870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fe4b3f45550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3f45550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f458d0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f45a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fe4b3f45e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3f45e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f441c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f44350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fe4b3f39d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3f39d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3f3c0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe4b3f3c270"/>
        <function-ref name="sfd" scoped="" ref="0x7fe4b3f3c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3f60bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3f60bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3f5f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3f5f1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fe4b3f5f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3f5f4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fe4b3f5f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fe4b3f47d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3f47d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b3f460e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b3f46270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b3f46400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fe4b3f43c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3f43c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3f41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe4b3f4a820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe4b3f4a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3f4aba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3f4ad30"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3f49020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3f491b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f49340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f494d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f49660"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3f62c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3f62c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3f60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3f58bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3f58bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3f57020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3f571b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3f57340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fe4b3f4cbe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3f4cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3f52020"/>
        <function-ref name="isSet" scoped="" ref="0x7fe4b3f521b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3f52340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fe4b3f413e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3f413e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f41960"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f41af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe4b3f47020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe4b3f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3f473a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3f47530"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3f476c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3f47850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3f479e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fe4b3f51500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fe4b3f51500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3f51980"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3f51b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3f51ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3f51e30"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f4a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f4a340"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fe4b3f3e130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b3f3e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f3e4b0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f3e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fe4b3f3e9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3f3e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f3ed40"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fe4b3f446d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b3f446d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3f44a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fe4b3f49b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fe4b3f49b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3f48020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3f481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3f48340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3f484d0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f48660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3f487f0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f48980"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3f48b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b3f3c6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b3f3c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b3f3ca40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b3f3cbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b3f3cd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b3f3b020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b3f3b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3f3b340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b3f3b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b3f3bb10"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3f3b660"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b3f3b7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b3f3b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fe4b3f405e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3f405e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3f40960"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f40af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b3f60320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b3f60320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3f606a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3f60830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fe4b3f46780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3f46780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3f46b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3f46c90"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3f46e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3f45020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3f451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fe4b3f44de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b3f44de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3f43180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fe4b3f41e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b3f41e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3f40220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fe4b3f5d0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fe4b3f5d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3f5d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe4b3e9dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b3e9dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9b210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe4b3ea6020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe4b3ea6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe4b3ea0c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b3ea0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9f020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe4b3e9a670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3e9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe4b3e93e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe4b3e93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e92210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe4b3e9ae50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe4b3e9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e99210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe4b3e862f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3e862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e86670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e86800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe4b3e892f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b3e892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e89670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e89800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe4b3ea5370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3ea5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe4b3e8e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe4b3e8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe4b3e8a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3e8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8a670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe4b3e9fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b3e9fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9e020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe4b3e9ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3e9ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9d020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe4b3e94670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b3e94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e949f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe4b3e97e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe4b3e97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e95210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe4b3e99670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b3e99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e999f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b3ea88f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3ea88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b3ea8c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b3ea8e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b3ea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe4b3ea4d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3ea4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe4b3ea2370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b3ea2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe4b3e8da70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b3e8da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8ddf0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe4b3ea2ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b3ea2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe4b3e8aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3e8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8ae50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe4b3ea4060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b3ea4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea43e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe4b3e90e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe4b3e90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8e210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe4b3e9e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b3e9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9e800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe4b3e9f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3e9f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9f800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe4b3ea7940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b3ea7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe4b3e91e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b3e91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e90210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe4b3e92670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe4b3e92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e929f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe4b3e90670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b3e90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e909f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe4b3e87ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3e87ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e87e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe4b3e89ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b3e89ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e89e50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe4b3e95670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe4b3e95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e959f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe4b3e92e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe4b3e92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e91210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe4b3e8bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b3e8bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8be50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe4b3e98670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b3e98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e989f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe4b3e86ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3e86ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3e86e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3e85020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e851b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3e85340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3e854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe4b3ea72f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b3ea72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe4b3ea0490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe4b3ea0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3ea0810"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3ea09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe4b3e9d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b3e9d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9d800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe4b3e94e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b3e94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e93210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe4b3e99e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b3e99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e98210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe4b3e93670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b3e93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e939f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe4b3e9b670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b3e9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe4b3ea6670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b3ea6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe4b3e9be50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3e9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e9a210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3eaac30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3eaac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3ea8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3ea81b0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3ea8340"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3ea84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3ea8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe4b3ea1160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3ea1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe4b3ea1e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe4b3ea1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe4b3e8b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b3e8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8b670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe4b3e8cad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b3e8cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8ce50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe4b3ea46b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3ea46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe4b3e8c2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b3e8c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8c670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe4b3e872f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe4b3e872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e87670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e87800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe4b3e95e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b3e95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e94210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe4b3e91670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe4b3e91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e919f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe4b3ea6cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b3ea6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe4b3ea59c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b3ea59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe4b3e98e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b3e98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e97210"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe4b3ea17b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b3ea17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3ea1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe4b3e97670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe4b3e97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e979f0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe4b3e8ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe4b3e8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e8d610"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e8d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe4b3e857a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3e857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3e85b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3e85cb0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e85e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3e84020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3e841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fe4b3e79df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3e79df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3e761c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe4b3e76350"/>
        <function-ref name="sfd" scoped="" ref="0x7fe4b3e764e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3e767c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3e767c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3e76b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fe4b3e75020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fe4b3e75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3e753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b3e795c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b3e795c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3e79940"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3e79ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fe4b3e6e380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fe4b3e6e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3e6e700"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3e6e890"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3e6ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3e6ebb0"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3e6ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3e6c020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3e6c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3e6c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fe4b3e66b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b3e66b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe4b3e65020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe4b3e651b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe4b3e65340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe4b3e654d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe4b3e65660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe4b3e657f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe4b3e65980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe4b3e65b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe4b3e65ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe4b3e65e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe4b3e64020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe4b3e641b0"/>
        <function-ref name="sync" scoped="" ref="0x7fe4b3e64340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe4b3e645d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe4b3e64760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fe4b3e4f9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fe4b3e4f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b3e4fd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b3e4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe4b3e64d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe4b3e64d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3e62330"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3e62a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3e63ba0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3e60210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fe4b3e6c6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fe4b3e6c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3e6ca30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3e6cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3e6cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3e6b020"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3e6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3e6b340"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3e6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3e6b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fe4b3e5fcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3e5fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fe4b3e5e590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b3e5e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5e910"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fe4b3e5d6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3e5d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5da50"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe4b3e67330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3e67330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3e676b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3e67840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3e679d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3e67b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3e67cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3e67e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fe4b3e71550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe4b3e71550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3e718d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe4b3e71a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fe4b3e71bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fe4b3e683a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b3e683a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3e68720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe4b3e6f020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe4b3e6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe4b3e6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe4b3e6f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe4b3e6f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe4b3e6f850"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3e6f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe4b3e6fb70"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3e6fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe4b3e6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fe4b3e5c020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3e5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5c3a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3e72620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3e72620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3e729a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3e661e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3e661e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3e66560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3e666f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3e66880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3e70020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3e70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3e703a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe4b3e6a6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe4b3e6a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3e6aa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3e6abf0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3e6ad80"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3e69020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3e691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fe4b3e5ee00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b3e5ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5d1c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fe4b3e69530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3e69530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3e698b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3e69a40"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e69bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3e69d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3e68020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fe4b3e5c8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b3e5c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3e5ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fe4b3e707c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fe4b3e707c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe4b3e70b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b3e5b150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b3e5b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b3e5b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b3e5b660"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b3e5b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b3e5b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b3e5bb10"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3e5bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b3e5be30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b3e5a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3e5a020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b3e5a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b3e5a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fe4b3e5f3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3e5f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3e5f760"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3e5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fe4b3e60b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3e60b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3e5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fe4b3e6ba50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe4b3e6ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe4b3e6bdd0"/>
        <function-ref name="disable" scoped="" ref="0x7fe4b3e6a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe4b3e6a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe4b3e6a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fe4b3e68ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3e68ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe4b3e72ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe4b3e72ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe4b3e710a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3e71230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe4b3deea70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b3deea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe4b3deedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe4b3df2670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3df2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3df29f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3df2b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3df2d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3def020"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3def1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3def340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe4b3ded550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ded550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3decb00"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3deb2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3dec3d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3deb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fe4b3dee0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3dee0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3dee440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3dee5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3dee760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe4b3de5480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3de5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3de5800"/>
        <function-ref name="isSet" scoped="" ref="0x7fe4b3de5990"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3de5b20"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3de5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe4b3de9660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b3de9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3de8ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3de7460"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3de85b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3de7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe4b3def6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe4b3def6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b3defa60"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b3defbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b3defd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe4b3ddf020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe4b3ddf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe4b3ddf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe4b3de4d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3de4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3de10e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3de1270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3de1400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3de1590"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3de1720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3de18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe4b3dd64a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b3dd64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3dd6820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3dd69b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3dd6b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3dd6cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3dd6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe4b3ddfa80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe4b3ddfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3ddd020"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3ddd750"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3dde8d0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3ddde80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fe4b3de0640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3de0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3de09c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3de0b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3de0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe4b3dd78b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe4b3dd78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3dd7c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fe4b3dd7dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3dd6020"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3dd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fe4b3dd53b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fe4b3dd53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3dd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fe4b3dd46e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe4b3dd46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3dd33d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe4b3ddbaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe4b3ddbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe4b3dd90d0"/>
        <function-ref name="clear" scoped="" ref="0x7fe4b3dd9800"/>
        <function-ref name="isValid" scoped="" ref="0x7fe4b3dda970"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3dd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe4b3de1c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe4b3de1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b3de0020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b3de01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b3de0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe4b3d84cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe4b3d84cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3d83980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe4b3d82020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe4b3d82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56aa270"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe4b56aa5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe4b3d82e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe4b3d80800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe4b3d80340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe4b3d80cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe4b3d7d0b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe4b3d7d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b56ab680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe4b56abdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe4b3d79630"/>
        <function-ref name="fired" scoped="" ref="0x7fe4b3d7cb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe4b3d7b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe4b3d7b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe4b3d78020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe4b3d79ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe4b3d7b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe4b3d7dca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe4b3d79020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe4b3d7c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3d7c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe4b3d68620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe4b3d68620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d68ba0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d68d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe4b3d73940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe4b3d73940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d73cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe4b3d6b620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe4b3d6b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d6b9a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d6bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe4b3d66060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe4b3d66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d663e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d66570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe4b3d5e840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe4b3d5e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5ebc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe4b3d66840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe4b3d66840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d66bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d66d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe4b3d53c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe4b3d53c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d52020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe4b3d55c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe4b3d55c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d54020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe4b3d71cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe4b3d71cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d700a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe4b3d5a060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe4b3d5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5a3e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe4b3d56c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe4b3d56c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d55020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe4b3d6a620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe4b3d6a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d6a9a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d6ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe4b3d69620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe4b3d69620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d699a0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d69b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe4b3d60060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe4b3d60060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d603e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d60570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe4b3d62840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe4b3d62840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d62bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d62d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe4b3d64060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe4b3d64060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d643e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d64570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe4b3d742b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe4b3d742b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe4b3d74630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe4b3d747c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe4b3d74950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe4b3d6f6b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe4b3d6f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe4b3d6fd00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe4b3d6fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe4b3d59480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe4b3d59480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d59800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe4b3d6e490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe4b3d6e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe4b3d55480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe4b3d55480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d55800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe4b3d709c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe4b3d709c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d70d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe4b3d5b840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe4b3d5b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5bbc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe4b3d6ae00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe4b3d6ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d691c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d69350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe4b3d6be00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe4b3d6be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d6a1c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d6a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe4b3d732f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe4b3d732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d73670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe4b3d5c840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe4b3d5c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5cbc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe4b3d5d060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe4b3d5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5d3e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe4b3d5b060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe4b3d5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5b3e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe4b3d53480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe4b3d53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d53800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d53990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe4b3d54480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe4b3d54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d54800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d54990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe4b3d61060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe4b3d61060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d613e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d61570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe4b3d5d840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe4b3d5d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5dbc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe4b3d56480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe4b3d56480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d56800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d56990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe4b3d63060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe4b3d63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d633e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d63570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe4b3d52480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe4b3d52480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3d52800"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3d52990"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d52b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3d52cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3d52e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe4b3d74c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe4b3d74c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe4b3d6de00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe4b3d6de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d6b1c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d6b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe4b3d69e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe4b3d69e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d681c0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d68350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe4b3d60840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe4b3d60840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d60bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d60d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe4b3d64840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe4b3d64840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d64bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d64d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe4b3d5e060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe4b3d5e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5e3e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe4b3d67060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe4b3d67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d673e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d67570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe4b3d71020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe4b3d71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe4b3d67840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe4b3d67840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d67bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d67d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3d75520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3d75520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3d758a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3d75a30"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3d75bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3d75d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3d74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe4b3d6eae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe4b3d6eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe4b3d6d7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe4b3d6d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe4b3d57c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe4b3d57c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d56020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe4b3d57480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe4b3d57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d57800"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe4b3d6f060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe4b3d6f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe4b3d59c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe4b3d59c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d57020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe4b3d54c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe4b3d54c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d53020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe4b3d61840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe4b3d61840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d61bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d61d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe4b3d5c060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe4b3d5c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d5c3e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d5c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe4b3d71670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe4b3d71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d719f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe4b3d70370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe4b3d70370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d706f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe4b3d63840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe4b3d63840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d63bc0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d63d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe4b3d6d160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe4b3d6d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe4b3d6d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe4b3d62060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe4b3d62060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d623e0"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d62570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe4b3d5a840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe4b3d5a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe4b3d59020"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe4b3d50160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe4b3d50160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe4b3d504e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe4b3d50670"/>
        <function-ref name="write" scoped="" ref="0x7fe4b3d50800"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe4b3d50990"/>
        <function-ref name="readDone" scoped="" ref="0x7fe4b3d50b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe4b3d25a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe4b3d25a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe4b3d25da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe4b3d22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe4b3d23920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fe4b3d23920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3d25560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3d29990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3d29990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3d29d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe4b3d1ea20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe4b3d1ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe4b3d1eda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe4b3d1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe4b3d1f940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fe4b3d1f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3d1e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3d1f080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3d1f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3d1f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b3d27aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b3d27aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b3d27e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b3d20020"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b3d201b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b3d20340"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b3d204d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b3d20660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3d07020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3d07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3d073a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3d07530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3d076c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3d07850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3d079e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3d08220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3d08220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3d085a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3d08730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3d088c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3d08a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3d08be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3d03e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3d03e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3d01210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3d013a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3d01530"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3d016c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3d01850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3d06a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3d06a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3d06d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3d03020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3d031b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3d03340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3d034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe4b3d008f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe4b3d008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe4b3d00c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fe4b3d00e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3d03750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3d03750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3d03ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3cff170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3cff170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cff4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3cff680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3cff810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fe4b3d01ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b3d01ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b3d01e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b3d00020"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b3d001b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b3d00340"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b3d004d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b3d00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b3d04690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b3d04690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b3d04a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b3d04ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b3d04d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b3cec020"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b3cec1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b3cec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3ce6950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ce6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3ce9aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3ce9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fe4b3ce6200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe4b3ce6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce6580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3ce13f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ce13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3ce2b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3ce2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3ce1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3ce5e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3ce5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce21e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3ce1a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3ce1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3ce1df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3ce0020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3ce01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fe4b3ce2570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe4b3ce2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ce28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3cb2020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3cb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3cb23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3cb26b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3cb26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3cb2a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cb2bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3cb2d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3cb1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3cb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3cb78e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3cb78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3cb7c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cb7df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3cb5020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3cb51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3cb5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe4b3cb5c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b3cb5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3cb40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cb4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3cb43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3cb4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3cb46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3cb55e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3cb55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3cb5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3cb8be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3cb8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3cb7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3cb71b0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3cb7340"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3cb74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3cb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe4b3cb4a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b3cb4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3cb4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe4b3cb3170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe4b3cb3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3cb34f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3cb3680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cb3810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3cb39a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3cb3b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3ca8d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3ca8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3ca7180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3ca7310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3ca74a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3ca7630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3ca77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3ca7b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3ca7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3ca6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fe4b3c79db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fe4b3c79db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b3c78180"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b3c78310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe4b3ca62f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3ca62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3ca6670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3ca6800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3ca6990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3ca6b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3ca6cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3ca6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe4b3caba20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe4b3caba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3cabda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3caa020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3caa1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3caa340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3caa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe4b3ca5b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe4b3ca5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b3ca4020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b3ca41b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b3ca4340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b3ca44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3ca5170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3ca5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3ca54f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3ca5680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3ca5810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe4b3cab370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fe4b3cab370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3cab6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe4b3cad7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe4b3cad7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3cadb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3cadcc0"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3cade50"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3cac020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3cac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe4b3cac4d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fe4b3cac4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3cac850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3cac9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3cacb70"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3cacd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3cab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe4b3caa840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe4b3caa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3caabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe4b3ca8020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe4b3ca8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3ca83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3ca8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3ca86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3ca8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3ca89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe4b3c59dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe4b3c59dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe4b3c58180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe4b3c58410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe4b3c58410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe4b3c58790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe4b3c58920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe4b3c58ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe4b3c58c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe4b3c4db80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe4b3c4db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b3c4c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b3c4c1b0"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3c4c340"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3c4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3c4a860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c4a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c4abe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c4ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c49020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c491b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c49340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3c49690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3c49690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3c49a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3c51ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3c51ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c4e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c4e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c4e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c4e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c4e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe4b3c4d080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b3c4d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe4b3c4d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe4b3c4d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe4b3c4d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe4b3c4d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fe4b3c4c800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fe4b3c4c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b3c4cb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b3c4cd10"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b3c4a020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b3c4a1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b3c4a340"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b3c4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe4b3c49d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fe4b3c49d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe4b3c48180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe4b3c48310"/>
        <function-ref name="start" scoped="" ref="0x7fe4b3c484a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe4b3c48630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3c4e980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3c4e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3c4ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe4b3c452d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe4b3c452d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe4b3c45650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe4b3c457e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe4b3c45970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe4b3c45b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe4b3c47580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe4b3c47580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe4b3c47900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe4b3c47a90"/>
        <function-ref name="isState" scoped="" ref="0x7fe4b3c47c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe4b3c47db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe4b3c46020"/>
        <function-ref name="forceState" scoped="" ref="0x7fe4b3c461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3c38d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c38d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c37180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c37310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c374a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c37630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c377c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3c3b350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3c3b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c3b6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c3b860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c3b9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c3bb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c3bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe4b3c38020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe4b3c38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe4b3c383a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe4b3c38530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe4b3c386c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe4b3c38850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe4b3c389e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fe4b3c321c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe4b3c321c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b3c32540"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b3c326d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b3c32860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe4b3c36410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe4b3c36410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe4b3c36790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe4b3c36920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe4b3c36ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe4b3c36c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe4b3c36dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe4b3c12690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe4b3c12690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3c12a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe4b3c13860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe4b3c13860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c13be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c13d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c12020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c121b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c12340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fe4b3c10610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe4b3c10610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe4b3c10990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe4b3c10b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe4b3c10cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe4b3c10e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe4b3c0f020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe4b3c0f1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe4b3c0f340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe4b3c0f4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe4b3c0f660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe4b3c0f7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe4b3c0f980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe4b3c0fb10"/>
        <function-ref name="sync" scoped="" ref="0x7fe4b3c0fca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe4b3c0e020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe4b3c0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe4b3c158b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe4b3c158b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b3c15c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b3c15dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b3c13020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b3c131b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b3c13340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b3c134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe4b3c16ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fe4b3c16ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe4b3c150a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fe4b3c0d1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fe4b3c0d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe4b3c0d570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe4b3c0d700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe4b3c0d890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe4b3c0da20"/>
        <function-ref name="setCca" scoped="" ref="0x7fe4b3c0dbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe4b3c0dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b3c17a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b3c17a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3c17e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3c16020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c161b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c16340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3c164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b3c1a020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b3c1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3c1a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c1a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3c1a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3c1a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3c1a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe4b3c19df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe4b3c19df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3c181c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe4b3c12ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe4b3c12ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe4b3c110a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe4b3c11230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe4b3c113c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe4b3c11550"/>
        <function-ref name="getPower" scoped="" ref="0x7fe4b3c116e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe4b3c11870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe4b3c0e4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe4b3c0e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe4b3c0e950"/>
        <function-ref name="changed" scoped="" ref="0x7fe4b3c0eae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe4b3c0ec70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe4b3c0ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe4b3c11b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe4b3c11b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3c10020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe4b3c101b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe4b3c10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3c19210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3c19210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3c19590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe4b3c0cd30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe4b3c0cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe4b3c0b0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe4b3c0b270"/>
        <function-ref name="led1On" scoped="" ref="0x7fe4b3c0b400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe4b3c0b590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe4b3c0b720"/>
        <function-ref name="get" scoped="" ref="0x7fe4b3c0b8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe4b3c0ba40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe4b3c0a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe4b3c0bbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe4b3c0bd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fe4b3c0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b3c18470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3c18470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b3c187f0"/>
        <function-ref name="source" scoped="" ref="0x7fe4b3c18980"/>
        <function-ref name="address" scoped="" ref="0x7fe4b3c18b10"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b3c18ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b3c18e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b3c17020"/>
        <function-ref name="type" scoped="" ref="0x7fe4b3c171b0"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b3c17340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b3c174d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b3c17660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b3c177f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fe4b3c0c0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fe4b3c0c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe4b3c0c470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe4b3c0c600"/>
        <function-ref name="request" scoped="" ref="0x7fe4b3c0c790"/>
        <function-ref name="granted" scoped="" ref="0x7fe4b3c0c920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe4b3c0cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b3afa020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b3afa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3afa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3afa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3afa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3afa850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3afa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b3afac30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b3afac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3af9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3af91b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3af9340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3af94d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3af9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b3af98b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3af98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b3af9c30"/>
        <function-ref name="source" scoped="" ref="0x7fe4b3af9dc0"/>
        <function-ref name="address" scoped="" ref="0x7fe4b3af8020"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b3af81b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b3af8340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b3af84d0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b3af8660"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b3af87f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b3af8980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b3af8b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b3af8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe4b3af7020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe4b3af7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b3af73a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b3af7530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b3af76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b2f9cb60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b2f9cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b2f9b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b2f9b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b2f9b340"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b2f9b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b2f9b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b2f9b8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b2f9b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b2f9bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b2f9bdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b2f9a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b2f9a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b2f9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b2f9a590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b2f9a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b2f9a910"/>
        <function-ref name="source" scoped="" ref="0x7fe4b2f9aaa0"/>
        <function-ref name="address" scoped="" ref="0x7fe4b2f9ac30"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b2f9adc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b2f99020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b2f991b0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b2f99340"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b2f994d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b2f99660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b2f997f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b2f99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe4b2f99c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe4b2f99c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe4b2f98020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe4b2f981b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe4b2f98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe4b2f8f640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b2f8f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b2f8f9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b2f8fb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b2f8fce0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b2f8fe70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b2f8e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe4b2f8e2e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b2f8e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b2f8e660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b2f8e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b2f8e980"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b2f8eb10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b2f8eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe4b2f8d020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b2f8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b2f8d3a0"/>
        <function-ref name="source" scoped="" ref="0x7fe4b2f8d530"/>
        <function-ref name="address" scoped="" ref="0x7fe4b2f8d6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b2f8d850"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b2f8d9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b2f8db70"/>
        <function-ref name="type" scoped="" ref="0x7fe4b2f8dd00"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b2f8c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b2f8c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b2f8c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b2f8c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3b5e930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3b5e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3b5ecb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3b5ee40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3b59020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3b591b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3b59340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe4b3b0e400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe4b3b0e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3b0e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3b0e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3b0eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3b0ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3b0ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe4b3b104b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe4b3b104b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe4b3b10850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3b109e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3b10b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fe4b3b10d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe4b3b0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe4b3b0c720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b3b0c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3b0caa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3b0cc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3b0cdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3b0b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3b0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fe4b3b0b480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fe4b3b0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b3b0b800"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b3b0b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fe4b3b0bc60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fe4b3b0bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe4b3b0a020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe4b3b0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe4b3b0d060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3b0d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b3b0d3e0"/>
        <function-ref name="source" scoped="" ref="0x7fe4b3b0d570"/>
        <function-ref name="address" scoped="" ref="0x7fe4b3b0d700"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b3b0d890"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b3b0da20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b3b0dbb0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b3b0dd40"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b3b0c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b3b0c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b3b0c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b3b0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe4b3aed020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe4b3aed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe4b3aed3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe4b3aed530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe4b3aed6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe4b3aed850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe4b3aed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe4b3af4910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe4b3af4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe4b3af4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe4b3aedc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe4b3aedc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe4b3aec020"/>
        <function-ref name="source" scoped="" ref="0x7fe4b3aec1b0"/>
        <function-ref name="address" scoped="" ref="0x7fe4b3aec340"/>
        <function-ref name="destination" scoped="" ref="0x7fe4b3aec4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe4b3aec660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe4b3aec7f0"/>
        <function-ref name="type" scoped="" ref="0x7fe4b3aec980"/>
        <function-ref name="setType" scoped="" ref="0x7fe4b3aecb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe4b3aecca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe4b3aece30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe4b3aeb020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fe4b55f5c80" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe4b55f5a00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fe4b55f22a0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe4b55f2020" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe4b55f5020" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe4b55f4520" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fe4b5695190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fe4b561ae80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b561ac00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fe4b5617020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b5618c90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe4b5613490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b5614e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b56131c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe4b5614560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fe4b56165e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b5616020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b5616350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b55fe020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe4b55ff5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe4b55ff960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b55ffc90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe4b55fa660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b55fa060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b55fa390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe4b55f9790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe4b55fd390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b55fd110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe4b55fb8b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b55fb2d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe4b55fb620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe4b5677e30" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b5677e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe4b5671720" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe4b56705d0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b5677e30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b5670020" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe4b5670340" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b5677e30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fe4b55f0670" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
              <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b5600cc0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fe4b55f0060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b55f0390" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe4b567acb0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b567acb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7fe4b5676e10" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe4b56765f0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7fe4b5675840" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b567acb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe4b56755c0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b567acb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe4b5686690" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b5686690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe4b5678020" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b5686690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fe4b56827b0" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fe4b5680020" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fe4b5680800" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fe4b567f7d0" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fe4b567d020" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe4b567d830" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fe4b567f020" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe4b567b3f0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe4b567b170" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fe4b5682020" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fe4b567e020" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fe4b567e7b0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fe4b5604d30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b5604ab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fe4b560ea10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b560e790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fe4b566ae50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fe4b5611950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b56116d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fe4b560b3a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b560dd70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe4b560b110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fe4b560ce50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b560c870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe4b560cbc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fe4b5608810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b5608590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fe4b5606b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b56065e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fe4b5606900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe4b562c1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fe4b5609600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b5609380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fe4b56032f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe4b5605cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fe4b5603060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fe4b5601190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b5694350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b5694350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe4b568c1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe4b5691a60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fe4b568f820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe4b568f250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe4b568f590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fe4b5690a60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fe4b568b270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fe4b568c980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe4b5690270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fe4b5692020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe4b5694c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fe4b568d820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe4b568d250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe4b568d590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fe4b5692ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe4b5692860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe4b5691350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe4b55c11f0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fe4b5594420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fe4b5597700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fe4b5595ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fe4b5597020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fe4b5597e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fe4b55980e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fe4b55987c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fe4b55955c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fe4b57be020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fe4b5a83c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fe4b5542020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe4b5544cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fe4b5546390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe4b558dec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe4b558c940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe4b5542890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fe4b55417b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fe4b5544560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe4b5541020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fe4b5546b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fe4b5545350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fe4b5545da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe4b558dec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe4b558c940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe4b5545b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe4b558dec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe4b558c940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe4b55340e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fe4b5531730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fe4b55314b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe4b55302e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe4b5530060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe4b5533ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe4b55333e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fe4b5534a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe4b5534810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe4b553b3e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fe4b553bd60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe4b553bae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fe4b5539790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe4b5539510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fe4b55382a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe4b5538020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe4b5538990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe4b554c810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fe4b554a2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fe4b554a020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe4b554b020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe4b5552aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe4b554b760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe4b554f9b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe4b554c120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe4b554f270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe4b554d0e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fe4b554d9f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe4b554d770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fe4b554acb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fe4b554aa30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe4b550d9f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fe4b56e1a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fe4b56e01f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fe4b56e12b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fe4b58fa810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe4b5b3c020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fe4b5b3b020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fe4b5b3c790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fe4b5b30270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fe4b5b30ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe4b53e2e30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe4b53e15c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe4b53e2020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe4b53df480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe4b53e2720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe4b53e1ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe4b53e3120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe4b53e37f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe4b53b6020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe4b53b6770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fe4b53b12e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe4b53b1060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe4b53b8770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe4b53b4780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fe4b53b1bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe4b53b4020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe4b53b7820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fe4b53b2020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fe4b53b7020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe4b53bb8b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fe4b53b3020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fe4b53b27c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fe4b53b37e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe4b53b8020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b5167c40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b5167c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe4b51645a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b515e5d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b515e5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe4b515e810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe4b5159390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe4b515c3b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fe4b515b9d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe4b515b400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fe4b515b740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe4b515cb90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fe4b5159b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe4b515d390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe4b515d110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b515e810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe4b515dbc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b50ed4f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b50ed4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe4b50ed730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b50ed730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe4b50ec070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b50ed730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe4b50eb190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe4b50ec8f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe4b50eb8f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe4b4fc9020" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe4b4fc9830" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fe4b4fbe390" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fe4b4fbe110" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b4fc42a0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe4b4fc4020" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fe4b4fc4ae0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fe4b4fc39a0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe4b4fc33b0" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fe4b4fc3710" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fe4b4fc1840" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b4fb1050" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b4fb4a60" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b4fb4da0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fe4b4faecc0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fe4b4faea40" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fe4b4facae0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b4fac510" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b4fac850" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fe4b4fad930" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fe4b4faa3b0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b4fa9a60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b4fa9da0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe4b4faa110" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fe4b4fae270" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe4b4faf950" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b4faf020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b4faf360" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe4b4faf6b0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fe4b4f56ae0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe4b4f4f4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fe4b4f4b890" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe4b4f74e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe4b4f732b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe4b4f52350" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fe4b4f53350" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fe4b4f57980" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe4b4f53b40" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe4b4f52db0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fe4b4f43020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fe4b4f44750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fe4b4f3bd70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4f3baf0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fe4b4f3b350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fe4b4f15390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fe4b4f20020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fe4b4f30de0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa2190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe4b4fa29d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe4b4f30b60" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa2190"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe4b4fa29d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fe4b4f230e0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fe4b4f2b2a0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4f9e110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe4b4f9e950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe4b4f2b020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4f9e110"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe4b4f9e950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fe4b4f1a750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fe4b4f17cf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fe4b4f2c830" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa0080"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe4b4fa0810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fe4b4f2ba90" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4f9e110"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe4b4f9e950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fe4b4f27830" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fe4b4f275b0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fe4b4f28e40" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fe4b4f1a020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fe4b4f2c040" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa0080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe4b4fa0810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe4b4f2dda0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa0080"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe4b4fa0810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fe4b4f29c80" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fe4b4f1ae80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fe4b4f28690" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fe4b4f28410" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fe4b4f24190" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fe4b4f24910" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fe4b4f1b070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fe4b4f1e020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fe4b4f22070" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fe4b4f1b7b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fe4b4f20800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fe4b4f195c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe4b4f25070" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe4b4fa6120"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fe4b4fa5810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fe4b4f19d60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fe4b4f16bd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fe4b4f294d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fe4b4f29250" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fe4b4f15d30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4f15ab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fe4b4f2d600" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4fa2190"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe4b4fa29d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fe4b4f23850" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fe4b4f1f020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fe4b4f1d800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe4b4f74e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe4b4f732b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4f1d580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe4b4f74e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe4b4f732b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fe4b4f1eaf0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe4b4f86020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe4b4f86440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4f1e870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe4b4f86020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe4b4f86440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fe4b4f14730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fe4b4f17570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fe4b4f25880" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fe4b4f16480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fe4b4f1f790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fe4b4f22850" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe4b4e9d420" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe4b4e9dc70" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fe4b4df5020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fe4b4df5880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe4b4de1420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe4b4dc7270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fe4b4dc6350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe4b4dca9c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe4b4dc7ae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe4b4dc6c80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fe4b4dba110" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe4b4dc33f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe4b4dbbe30" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe4b4dc33f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fe4b4dbc120" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fe4b4dbcc20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe4b4dc33f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe4b4dbc9a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe4b4dc33f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fe4b4dbb580" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fe4b4dc33f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fe4b4d4e770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fe4b4d03b30" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fe4b4cec910" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4cec340" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe4b4cec680" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fe4b4ceb190" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fe4b4cedb50" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fe4b4cee4e0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fe4b4ce9aa0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe4b4ce9820" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe4b4cf0270" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fe4b4ce85c0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4ce8340" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fe4b4ce9020" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4ceb9c0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe4b4cebcf0" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fe4b4cf0c40" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4cf09c0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fe4b4ced2f0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4ceecd0" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe4b4ced060" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe4b4ca6b10" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe4b4ca6350" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fe4b4ca8b70" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fe4b4ca82b0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe4b4bec7b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe4b4bea2b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe4b4bec020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fe4b4beba60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fe4b4beb7e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe4b4bf0820" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe4b4beb020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe4b4a88bf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a88bf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fe4b4a81020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a88bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4a84650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fe4b4a849d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a88bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fe4b4a84d30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fe4b4a85b10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a88bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b4a85520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a88bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fe4b4a85880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fe4b4a83d90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fe4b4a83b10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe4b4a80660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4a80020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fe4b4a803d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fe4b4a57d20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fe4b4a57d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fe4b4a54730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fe4b4a57d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe4b4a4c390" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a4c390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe4b4a4cc90" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe4b4a4ba20" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a4c390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe4b4a4b470" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe4b4a4b790" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe4b4a4c390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe4b4a37df0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fe4b4a40aa0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4a40820" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fe4b4a3d020" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4a3e990" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fe4b4a3ed00" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fe4b4a38a70" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4a397e0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fe4b4a380d0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fe4b4a38450" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fe4b4a387c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fe4b4a34770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fe4b4a340d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fe4b4a34460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fe4b4a3b3c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4a3c150" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fe4b4a3c9f0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fe4b4a3cd80" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fe4b4a3b110" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fe4b4a36ad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4a36850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe4b49e4ce0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fe4b49e4020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4a78110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fe4b4a785e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b49e7970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fe4b4a794e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fe4b4a7ab70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fe4b49e7d60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4a78110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fe4b4a785e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fe4b49e5110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fe4b49e54b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fe4b49e5860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fe4b49e5bd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe4b49e3d40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fe4b49e3720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fe4b49e3ab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fe4b49e1780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fe4b49df020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fe4b49c8120" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ece0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fe4b4a5d7a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fe4b49c62a0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4a78110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fe4b4a785e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe4b49c6020" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fe4b49c38a0" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fe4b49c2aa0" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fe4b49c22e0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fe4b49c2060" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fe4b49c8940" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ce20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fe4b4a5b770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fe4b49c7760" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4a78110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fe4b4a785e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe4b49c7110" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fe4b49c74d0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe4b4a78110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fe4b4a785e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fe4b49c1b40" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fe4b49cde40" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ece0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fe4b4a5d7a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fe4b49cdbc0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ece0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fe4b4a5d7a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fe4b49c6d70" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fe4b49c6af0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fe4b49c5840" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe4b49c55c0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fe4b49c30e0" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fe4b49c12b0" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fe4b49c0350" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fe4b49ca8c0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fe4b4a5b770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fe4b49ca640" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe4b4a5ce20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fe4b4a5b770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b462f1e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b462f1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe4b462f420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b462f420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fe4b462a2a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b462f420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b462a020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fe4b4629430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b46291b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fe4b462b020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b462fd60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe4b4628740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b462f420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b4628150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fe4b46284b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b462f420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fe4b461c990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b461c370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fe4b461c700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fe4b4619b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b46198b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fe4b461dae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fe4b461d120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fe4b4620e80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fe4b46325f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b4632370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fe4b46317d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b4631550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fe4b462e940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b462e6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fe4b45f4980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45f4700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fe4b45f7c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45f79b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fe4b45f8350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fe4b45f80d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fe4b45fa800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fe4b45fa580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fe4b45f8d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fe4b45f8b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fe4b45f5b10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45f5890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fe4b45e72b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fe4b45f2c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe4b45e7020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fe4b4603810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b4603230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fe4b4603580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fe4b45ffe20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b45ff820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fe4b45ffb90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fe4b4602350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fe4b6586110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b46020d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fe4b4600d30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b4600ab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fe4b46049c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b4604740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fe4b4602e80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b4602c00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fe4b45ebb30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45eb8b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fe4b45f0bc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45f05a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fe4b45f0930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fe4b45efad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45ef850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fe4b45ef020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45ee9c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fe4b45eed50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fe4b45eab70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45ea8f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fe4b45fc780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45fc500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b45e1dc0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45e1800" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b45e1b30" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe4b45d9620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45d9020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b45d9350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe4b45d8660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe4b45dc2a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45dc020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe4b45db750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45db170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe4b45db4c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b45baca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b45ba6e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fe4b45baa10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe4b45b8020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fe4b45b5930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe4b45b6ab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fe4b45b5360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b45b5690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe4b45b62b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe4b45b8bb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe4b45b6020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fe4b45b9780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fe4b45b9500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fe4b45b2b50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fe4b45b2350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fe4b45ab020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45acc90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fe4b45ac490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fe4b5667960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fe4b5665390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45ac190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fe4b45aa360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fe4b5665e90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fe4b56627e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b45aa060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fe4b45c06e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fe4b45be840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fe4b45be070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fe4b45c4e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fe4b45c1e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fe4b45bf020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fe4b45bf840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fe4b45c16c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fe4b45a5a70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fe4b45a6020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fe4b45a52a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fe4b45a5020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fe4b45a6790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fe4b45aeca0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fe4b45aea20" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fe4b45a77a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fe4b45a7520" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fe4b4549640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fe4b4549060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fe4b45493b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fe4b454a020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fe4b454c690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fe4b454c020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fe4b454c400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fe4b4552a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe4b45527c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fe4b454a8a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fe4b454e540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fe4b454e2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fe4b4551b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe4b4551910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fe4b45488a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fe4b454d6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fe4b454d430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fe4b4548070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fe4b4550350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fe4b461fe10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fe4b46175a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fe4b4550b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fe4b4552020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe4b45511f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fe4b454ece0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe4b452bce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b452ba60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe4b45247f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4524570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fe4b453bab0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fe4b461fe10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fe4b46175a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fe4b452d860" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fe4b452c7d0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fe4b452c070" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fe4b452d020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fe4b4530980" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe4b562c590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe4b4530cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe4b562c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fe4b4520e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe4b4528020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe4b452a110" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe4b452a980" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b452acd0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe4b4527780" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe4b45288f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe4b4527190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b45274e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fe4b4413bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe4b4411d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe4b44115c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe4b4411340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fe4b4413350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fe4b43e10e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fe4b43e1930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fe4b43df1f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fe4b43b9b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b43b9580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b43b98d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fe4b43b4dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b43b4490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b43b47e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe4b43b4b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe4b43b66b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b43b60d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b43b6420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fe4b43bb730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe4b566c9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b43bb150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b43bb4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe4b43b72c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b43b8930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe4b43b8c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe4b43b7020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe4b439adf0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe4b439a480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe4b439a810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b439ab50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe4b43983c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe4b43976a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe4b4397a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b4397d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe4b4398110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fe4b439ec90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fe4b439ea10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fe4b4301120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe4b4f86020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe4b4f86440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fe4b4309d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4309ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fe4b43042a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4304020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fe4b4306610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe4b4304d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b4304ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fe4b425e9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fe4b4270420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fe4b4265620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe4b42653a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fe4b4279af0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fe4b4262c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fe4b426a5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fe4b4271540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fe4b426f2d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fe4b4273500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fe4b4273280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fe4b4275a10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fe4b426c070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fe4b4263550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fe4b425e270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fe4b4266c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fe4b4259350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fe4b42559d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fe4b4278980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fe4b426e8b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fe4b426b1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fe4b4273dc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fe4b427a8c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fe4b4266460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe4b42661e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fe4b427a190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fe4b42624d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fe4b425d190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fe4b4258b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fe4b4255270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fe4b4261b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fe4b425d8c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fe4b4265db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fe4b425a390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fe4b42760e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fe4b42687e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fe4b425c7b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fe4b4260ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fe4b426bde0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fe4b426bb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fe4b42572d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fe4b4267a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fe4b4261420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fe4b4279390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe4b4f60b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fe4b4f5f020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe4b4279110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe4b4f60b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fe4b4f5f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fe4b426e190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fe4b42752a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe4b4275020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fe4b426c9d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe4b426c750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fe4b425ab60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fe4b4274b50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fe4b4276850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fe4b42672a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fe4b4267020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe4b6585520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fe4b4278270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fe4b425c020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fe4b4260350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fe4b4263cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fe4b4268020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fe4b426ad30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fe4b426f9f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fe4b4271c80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fe4b4257a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fe4b42743c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe4b4274140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fe4b4259b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fe4b4270b50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fe4b4258350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe4b3ffa5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe4b3ffa360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe4b3fe6b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fe4b3fe61c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fe4b3fe6530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b3fe6860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe4b3fe5880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe4b3fe52c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe4b3fe55f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe4b3fcc530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe4b3fcc530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe4b3fcc770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b3fcc770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fe4b3fcb2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b3fcc770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe4b3fcb060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe4b3fcc770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fe4b3f6a580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fe4b3f399e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe4b3f39020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fe4b3f39750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fe4b3f3a7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fe4b3f3a020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe4b3f3dd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe4b6585920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fe4b3f4e3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe4b6585160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b3f4e150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fe4b3f503d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe4b5b40090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b3f50150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe4b3f4c350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b3f4c0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe4b3f4d390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe4b3f4d110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe4b561ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fe4b561a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fe4b3d265e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe4b3d265e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fe4b3d232a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe4b5b37c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe4b3d265e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fe4b3d23020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe4b3d265e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
